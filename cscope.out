cscope 15 /ws/sisharm2-bgl/new-sys-prg               0000523582
	@include/client_server.h

7 #i‚de‡
COMMON_HDR


8 
	#COMMON_HDR
 1

	)

10 
	~<°d¨g.h
>

11 
	#SERVERPORT
 3690

	)

12 
	#ERR_CODE
 (-1)

	)

13 
	#RC_NOTOK
(
rc
Ë‘¯=
ERR_CODE
)

	)

14 
	#RC_ISOK
(
rc
Ë‘¯!
ERR_CODE
)

	)

15 
	#CHK_ALLOC
(
msg
Ëif(!msgË{  
ERR_CODE
; }

	)

16 
	#FALSE
 0

	)

17 
	#TRUE
 1

	)

18 
	#MAX_MSG_STR_LEN
 20

	)

19 
	#SIZEOFINT
 ()

	)

20 
	#MAX_BROADCAST_PKT_LEN
 (
SIZEOFINT
*4)

	)

21 
	#ADDR_FAMILY
 
AF_INET


	)

22 
	#MAX_CLIENTS
 20

	)

23 
	#MAX_FILE_LEN
 1024

	)

24 
	#ADDR_STR_LEN
 20

	)

25 
	#FILE_NAME_LEN
 20

	)

26 
	#MAX_WORD_LEN
 20

	)

27 
	#PRINT
(
f‹m©
, ...Ë
	`¥öt_out
(f‹m©, 
__VA_ARGS__
)

	)

28 
	#DEBUG
(
f‹m©
, ...Ë
	`¥öt_debug
(f‹m©, 
__VA_ARGS__
)

	)

29 
	#ERROR
(
f‹m©
, ...Ë
	`¥öt_îr‹
(f‹m©, 
__VA_ARGS__
)

	)

30 
	#ALERT
(
f‹m©
, ...Ë
	`¥öt_Æît
(f‹m©, 
__VA_ARGS__
)

	)

31 
	#EXIT
 
	`exô
(0)

	)

32 
	#FUNC
 
__FUNCTION__


	)

33 
	#HBT_TIME
 60

34 
	#HBT_EXPTIME
 (
HBT_TIME
*2)

	)

35 
	#JOB_FIN_TIME
 60

	)

36 
	#HBT_CHK_ITR
 20

	)

37 
	#IGNORE_GROUP
 0

	)

38 
	#JOB_WAIT_TIME
 120

	)

39 
	#SECS_IN_MSEC
 1000

	)

40 
	#MAX_ASC_CHLEN
 10

	)

41 
	#DIE_ON_PIPE
(
î∫o
Ëi‡”ºnÿ=32Ë{
	`exô
(0);}

	)

43 
	#COMPUTE_MCAST_GRP
 "225.0.0.1"

	)

44 
	#ANALYSIS_MCAST_GRP
 "226.0.0.1"

	)

45 
	#COMP_MCAST_PORT
 9090

	)

46 
	#ANALYSIS_MCAST_PORT
 9091

	)

48 
	#DEBUG_ON
 0x00000001

	)

49 
	#MULTICAST_ON
 0x00000002

	)

50 
	#BROADCAST_ON
 0x00000004

	)

53 
	mJOB_COMPUTE
 = 1,

54 
	mJOB_ANALYSIS
 = 2,

55 
	mJOB_MAX


56 } 
	tgΩ_id_í
;

59 
	mJOB_RES
,

60 
	mJOB_PRIME
,

61 
	mJOB_WC
,

62 
	mJOB_FIND_MAX
,

63 
	mJOB_SERIES
,

64 
	mJOB_MAX_ID


65 } 
	tjob_id_í
;

68 
	mMSG_RES
,

69 
	mSERVER_UP
,

70 
	mREGISTER_CLIENT
,

71 
	mACK_FRM_SERVER
,

72 
	mHEARTBEAT
,

73 
	mJOB_REQ
,

74 
	mJOB_RESP
,

75 
	mJOB_TERM
,

76 
	mCLIENT_DOWN
,

77 
	mMAX_MSG_TYPE


78 } 
	tmsg_ty≥_í
;

81 
	mCLIENT_RES
,

82 
	mCLIENT_INIT
,

83 
	mCLIENT_REG_SENT
,

84 
	mCLIENT_ACK_WAIT
,

85 
	mCLIENT_ACK_OK
,

86 
	mCLIENT_EXIT
,

87 
	mCLIENT_MAX_STATE


88 } 
	t˛õ¡_°©e_í
;

90 
	s˛õ¡_db_
 {

91 
	msockë_id
;

92 
	mgroup_id
;

93 
	mhash_id
;

94 
	mÁmûy
;

95 
	mp‹t_num
;

96 
ö_addr
 
	maddr
;

97 
boﬁ
 
	mis_a˘ive
;

98 
boﬁ
 
	mis_exec
;

99 
boﬁ
 
	m£rvî_ack
;

100 
boﬁ
 
	mis_∑πicù™t
;

101 
time_t
 
	mhbót_time
;

102 
	mfûe_ouç
[
FILE_NAME_LEN
];

103 } 
	t˛õ¡_db_°
;

105 
	sjob_°_
 {

106 
	mjob_id
;

107 
	m°¨t_ønge
;

108 
	míd_ønge
;

109 
	mö±_fûe
[
FILE_NAME_LEN
];

110 
	mouçt_fûe
[
FILE_NAME_LEN
];

111 } 
	tjob_°
;

113 
	smu…iˇ°_°_
 {

114 
boﬁ
 
	mmu…_mode
;

115 
ö_addr
 
	mmu…_addr
;

116 } 
	tmu…iˇ°_°
;

118 
	smsg_°_
 {

119 
msg_ty≥_í
 
	mty≥
;

120 
	mÀn
;

121 
	mgroup_id
;

122 
	mhash_id
;

123 
mu…iˇ°_°
 *
	mmu…i_±r
;

124 
job_°
 
	mjob_d©a
[0];

125 } 
	tmsg_°
;

127 
	s˛¡_thªad_¨g_°_
 {

128 
	m˛õ¡_id
;

129 
	mgroup_id
;

130 
	mjob_id
;

131 
	m°¨t_ønge
;

132 
	míd_ønge
;

133 
	mouçt_fûe
[
FILE_NAME_LEN
];

134 
	mö±_fûe
[
FILE_NAME_LEN
];

135 } 
	t˛¡_thªad_¨g_°
;

137 
	s˛õ¡_ªcv_
 {

138 
˛õ¡_db_°
 *
	míåy
;

139 } 
	t˛õ¡_ªcv_°
;

141 
	sgΩ_d©a_
 {

142 
	mhash_id
;

143 
gΩ_d©a_
 *
	m√xt
;

144 } 
	tgΩ_d©a_°
;

147 
›_mode
;

148 
boﬁ
 
is_mu…iˇ°_suµ
;

149 
sockaddr_ö
 
˛¡_mˇ°_addr
;

150 
˛¡_mˇ°_fd
;

151 
ù_mªq
 
mªq_globÆ
;

152 
˛õ¡_db_°
 *
˛õ¡_íåy
[
MAX_CLIENTS
];

153 
gΩ_d©a_°
 *
gΩ_d©a
[
MAX_CLIENTS
];

154 
˛õ¡_°©e_í
 
˛õ¡_°©e
;

155 
tŸÆ_fd
;

156 
boﬁ
 
hbót_chk_°¨t
;

157 
sockaddr_ö
 
£rvî_addr_c›y
;

158 
comm_sock_c›y
;

159 
ªq_gΩ_id
;

160 
FILE
 *
log_Â
;

162 
¥öt_out
(c⁄° * 
f‹m©
, ...);

163 
¥öt_debug
(c⁄° * 
f‹m©
, ...);

164 
¥öt_îr‹
(c⁄° * 
f‹m©
, ...);

165 
¥öt_Æît
(c⁄° * 
f‹m©
, ...);

167 
gë_£rvî_p‹t_‰m_fûe
();

168 
gë_£rvî_öfo_‰m_fûe
 (*
addr
, *
p‹t_num
);

170 
£rvî_a˘i⁄_⁄_msg
(
sockë_fd
, 
hash_id
,

171 
msg_°
 *
msg
);

173 
di•œy_job_öfo
 (*
job_id
);

176 
sigto°r
(
signum
);

178 * 
£nd_thªad
 (*
¨g
);

180 * 
ªcv_thªad
 (*
¨g
);

182 * 
exec_job_thªad
 (*
¨g
);

184 
gë_msg_d©a_Àn
 (
sockë_id
);

186 
gë_msg_d©a_Àn_n⁄_waô
 (
sockë_id
);

188 
boﬁ
 
gë_£nd_Êag_f‹_°©e
 (boﬁ 
Êag
);

190 
di•œy_gΩ_öfo
 (
gΩ_id
);

193 * 
gë_msg_ty≥_°r
 (
msg_ty≥_í
 
msg_ty≥
);

196 
˛ónExô
();

197 
˛ónExô_˛õ¡
(
signum
);

199 
£nd_job_to_gΩ
(
job_id_í
 
id
);

201 
add_hash_id_to_gΩ
 (
hash_id
, 
gΩ_id
, 
gΩ_d©a_°
 **
±r
);

203 
£nd_pkt_to_˛õ¡
 (
sockë_id
, 
msg_ty≥_í
 
msg_ty≥
,

204 
ödex
, 
job_°
 *
d©a
);

206 
a˘i⁄_⁄_msg
(
sockë_fd
, 
msg_°
 *
ªcv_msg
, 
sockaddr_ö
 *
addr
);

207 
cou¡_tŸÆ_gΩ
 ();

209 
‰ì_msg
 (
msg_°
 *
msg
);

211 
di•_˛õ¡_hñp_msg
();

212 
di•_£rvî_hñp_msg
();

214 * 
gë_˛õ¡_°©e_°r
(
˛õ¡_°©e_í
 
˛õ¡_°©e_¨g
);

216 
boﬁ
 
is_˛õ¡_íåy_exi°s
(
sockaddr_ö
 *
addr
,

217 *
ödex
);

219 
a˘i⁄_⁄_˛õ¡_°©e
(
sockë_fd
,

220 
˛õ¡_°©e_í
 
˛õ¡_°©e_¨g
,

221 
sockaddr_ö
 *
addr
);

223 
add_˛õ¡_db_öfo
(
ödex
, 
sockë_fd
,

224 
gΩ_id
, 
sockaddr_ö
 *
˛õ¡_addr
);

226 
upd_˛õ¡_db_öfo
(
ödex
, 
√w_sockë_fd
, 
p‹t_num
);

228 
£t_sig«l_h™dÀr
((*
f
)());

230 * 
	`vîify_˛õ¡_hbót
 (*
¨g
);

232 
	`compuã_job
(
˛¡_thªad_¨g_°
 *
d©a
);

234 
ölöe
 
boﬁ
 
	`is_¥ime
 (
num
);

236 
	`dñ_fûe_if_exi°
(*
fûe
);

238 
	`di•œy_job_ouçut
();

240 
	`cou¡_gΩ_tŸÆ
 (
gΩ_id
);

242 
boﬁ
 
	`is_fûe_exi°
(*
fûe
);

244 
boﬁ
 
	`is_brﬂdˇ°
 ();

245 
boﬁ
 
	`is_mu…iˇ°
 ();

246 
boﬁ
 
	`is_debug_mode
 ();

	@src/client.c

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

8 
	~<uni°d.h
>

9 
	~<°dboﬁ.h
>

10 
	~<î∫o.h
>

11 
	~<°rög.h
>

12 
	~<sys/ty≥s.h
>

13 
	~<sys/sockë.h
>

14 
	~<√töë/ö.h
>

15 
	~<¨∑/öë.h
>

16 
	~<sig«l.h
>

17 
	~<sys/time.h
>

18 
	~<gë›t.h
>

19 
	~"˛õ¡_£rvî.h
"

21 
	$maö
(
¨gc
, *
¨gv
[])

24 
msg_°
 *
msg
 = 
NULL
;

25 
msg_°
 
msg_dummy
;

26 
›ti⁄
 = 0, 
p‹t_num
 = 0, 
comm_p‹t
 = 0;

27 
sockaddr_ö
 
£rvî_addr
;

28 
sockaddr_ö
 
my_addr
;

29 
addr_°r
[20];

30 
brﬂdˇ°_sockë
 = 0, 
comm_sockë
 = 0;

31 
ªu£
 = 1;

32 
p‹t_addr_cou¡î
 = 0 ;

33 
boﬁ
 
u£_def_addr
 = 
TRUE
;

34 
boﬁ
 
is_£rvî_up
 = 
TRUE
;

35 
addr_Àn
 = 0, 
numbyãs
 = 0;

36 
rc
 = 0;

39 
	`mem£t
(&
msg_dummy
, 0, (
msg_°
));

40 
	`mem£t
(&
£rvî_addr
, 0, (server_addr));

41 
	`mem£t
(&
my_addr
, 0, (my_addr));

43 (
›ti⁄
 = 
	`gë›t
(
¨gc
, 
¨gv
, "hda:p:g:")) != -1) {

45 
›ti⁄
) {

47 
	`Ârötf
(
°dîr
,

49 
›ti⁄
);

50 
	`di•_˛õ¡_hñp_msg
();

51 
îr_exô
;

56 
	`di•_˛õ¡_hñp_msg
();

57 
îr_exô
;

62 
	`Ârötf
(
°dout
, " debugging isÉnabled\n");

63 
debug_⁄
 = 
TRUE
;

68 
p‹t_num
 = 
	`©oi
(
›èrg
);

69 
p‹t_addr_cou¡î
++;

70 
	`Ârötf
(
°dout
, " P‹ànumbî %d wû»bêu£d f‹ communiˇti⁄\n", 
p‹t_num
);

75 
	`DEBUG
("%†%s", "£rvîáddªs†tÿbêu£d is:", 
›èrg
);

76 
p‹t_addr_cou¡î
++;

78 i‡–(
	`öë_±⁄
(
ADDR_FAMILY
, 
›èrg
,

79 &(
£rvî_addr
.
sö_addr
))) == 0) {

80 
	`ERROR
("Sîvîáddªs†%†%s", 
›èrg
,

82 
u£_def_addr
 = 
TRUE
;

84 
u£_def_addr
 = 
FALSE
;

89 
	`DEBUG
("%†%s", "Clõ¡ wû»ªque° f‹ group:", 
›èrg
);

90 
ªq_gΩ_id
 = 
	`©oi
(
›èrg
);

91 i‡(
ªq_gΩ_id
 >
JOB_MAX
) {

92 
	`ERROR
("Group Id : %d isÇot supported.Ñeenter correct Group Id",

93 
ªq_gΩ_id
);

94 
EXIT
;

100 i‡(
p‹t_addr_cou¡î
 == 1) {

101 
	`ERROR
("%s", "serverÖrog is missingÉitherÖort oráddrárgument..!");

102 
EXIT
;

105 i‡–(
¨gc
 =1Ë|| 
u£_def_addr
) {

107 
	`PRINT
("%s", "NoneárgsÖassed, using default values");

108 i‡(
	`gë_£rvî_öfo_‰m_fûe
(
addr_°r
, &
p‹t_num
) == -1) {

109 
	`ERROR
("%s: %s", 
__FUNCTION__
, "get_server_info_frm_file failed");

110 
EXIT
;

112 i‡((
	`öë_±⁄
(
ADDR_FAMILY
, 
addr_°r
,

113 &(
£rvî_addr
.
sö_addr
))) == 0) {

114 
	`ERROR
("Sîvîáddªs†%†%s", 
addr_°r
,

117 
	`DEBUG
("defaultáddress: %sándÖort: %d will be used",

118 
addr_°r
, 
p‹t_num
);

123 
comm_p‹t
 = 
p‹t_num
+1;

124 
£rvî_addr
.
sö_Ámûy
 = 
ADDR_FAMILY
;

125 
£rvî_addr
.
sö_p‹t
 = 
	`ht⁄s
(
comm_p‹t
);

126 
	`mem£t
(&
£rvî_addr
.
sö_zîo
, 0, 8);

128 
comm_sockë
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

129 i‡(
	`RC_NOTOK
(
comm_sockë
)) {

130 
	`ERROR
("%s %s", "TCP communication socket creation failed.Érrno:",

131 
	`°ªº‹
(
î∫o
));

132 
îr_exô
;

135 
	`£tsock›t
(
comm_sockë
, 
SOL_SOCKET
, 
SO_REUSEADDR
,

136 &
ªu£
, (reuse));

139 
addr_Àn
 = (
sockaddr
);

140 if(
	`c⁄√˘
(
comm_sockë
, (
sockaddr
*)&
£rvî_addr
,

141 
addr_Àn
) == -1) {

142 
	`DEBUG
("%s %s",

144 
	`°ªº‹
(
î∫o
));

145 
is_£rvî_up
 = 
FALSE
;

147 
is_£rvî_up
 = 
TRUE
;

150 i‡(!
is_£rvî_up
) {

151 
brﬂdˇ°_sockë
 = 
	`sockë
(
ADDR_FAMILY
, 
SOCK_DGRAM
, 0);

152 i‡(
	`RC_NOTOK
(
brﬂdˇ°_sockë
)) {

153 
	`ERROR
("%s %s", "broadcast socket creation failed.Érrno:",

154 
	`°ªº‹
(
î∫o
));

155 
îr_exô
;

162 
	`£tsock›t
(
brﬂdˇ°_sockë
, 
SOL_SOCKET
, 
SO_REUSEADDR
,

163 &
ªu£
, (reuse));

165 
my_addr
.
sö_Ámûy
 = 
ADDR_FAMILY
;

166 
my_addr
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t_num
);

167 
my_addr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

168 
	`mem£t
(&(
my_addr
.
sö_zîo
), 0, 8);

170 i‡(
	`böd
(
brﬂdˇ°_sockë
, (
sockaddr
 *)&
my_addr
,

171 (
sockaddr
)) == -1) {

172 
	`ERROR
("%s %s", "error while bindingÅo broadcast socket.Érrno:",

173 
	`°ªº‹
(
î∫o
));

174 
îr_exô
;

177 
	`PRINT
("%s %d", "listening forány broadcast msg from server onÖort:",

178 
p‹t_num
);

179 
msg
 = 
	`ˇŒoc
(1, (
msg_°
));

180 i‡(!
msg
) {

181 
	`ERROR
("%s", "couln'tálloc memoryÅo msg");

182 
îr_exô
;

185 
addr_Àn
 = (
sockaddr
);

186 
numbyãs
 = 
	`ªcv‰om
(
brﬂdˇ°_sockë
, 
msg
, 
MAX_BROADCAST_PKT_LEN
,

187 0, (
sockaddr
 *)&
£rvî_addr
,

188 (
sockÀn_t
 *)&
addr_Àn
);

189 i‡(
	`RC_NOTOK
(
numbyãs
)) {

190 
	`ERROR
("%s %s", "Broadcast msgÑecv failure.Érrno:",

191 
	`°ªº‹
(
î∫o
));

192 
îr_exô
;

195 
	`PRINT
("Recieved %sánd msg_len: %d from: %s",

196 
	`gë_msg_ty≥_°r
(
msg
->
ty≥
),

197 
msg
->
Àn
,

198 
	`öë_¡ﬂ
(
£rvî_addr
.
sö_addr
));

199 i‡(
brﬂdˇ°_sockë
) {

201 
	`˛o£
(
brﬂdˇ°_sockë
);

202 
brﬂdˇ°_sockë
 = 0;

206 
	`¶ìp
(2);

209 
£rvî_addr
.
sö_p‹t
 = 
	`ht⁄s
(
comm_p‹t
);

210 
addr_Àn
 = (
sockaddr
);

211 if(
	`c⁄√˘
(
comm_sockë
, (
sockaddr
*)&
£rvî_addr
,

212 
addr_Àn
) == -1) {

213 
	`ERROR
("%s%s",

215 
	`°ªº‹
(
î∫o
));

216 
îr_exô
;

218 
	`DEBUG
("%s", "ConnectionÅo server is successfull");

227 
	`mem£t
(&
£rvî_addr_c›y
, 0, (server_addr_copy));

228 
	`mem˝y
(&
£rvî_addr_c›y
, &
£rvî_addr
, (server_addr_copy));

229 
comm_sock_c›y
 = 
comm_sockë
;

232 
	`£t_sig«l_h™dÀr
(
˛ónExô_˛õ¡
);

234 
˛õ¡_°©e
 = 
CLIENT_INIT
;

236 
˛õ¡_°©e
 !
CLIENT_EXIT
) {

237 
rc
 = 
	`a˘i⁄_⁄_˛õ¡_°©e
(
comm_sockë
, 
˛õ¡_°©e
, &
£rvî_addr
);

238 i‡(
	`RC_NOTOK
(
rc
)) {

239 
	`ERROR
("%s %s", "action_on_client_state() failed for",

240 
	`gë_˛õ¡_°©e_°r
(
˛õ¡_°©e
));

241 
	`DIE_ON_PIPE
(
î∫o
);

249 i‡(
comm_sockë
) {

250 
	`˛o£
(
comm_sockë
);

254 
îr_exô
:

255 i‡(
brﬂdˇ°_sockë
) {

256 
	`˛o£
(
brﬂdˇ°_sockë
);

258 i‡(
comm_sockë
) {

259 
	`˛o£
(
comm_sockë
);

262 
	}
}

	@src/client_server.c

8 
	~<°dio.h
>

9 
	~<±hªad.h
>

10 
	~<°dboﬁ.h
>

11 
	~<sys/sockë.h
>

12 
	~<√töë/ö.h
>

13 
	~<√tdb.h
>

14 
	~<î∫o.h
>

15 
	~<sig«l.h
>

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

18 
	~<¨∑/öë.h
>

19 
	~<uni°d.h
>

20 
	~<sys/pﬁl.h
>

21 
	~"˛õ¡_£rvî.h
"

24 
	g›_mode
 = 0;

25 
boﬁ
 
	gis_mu…iˇ°_suµ
 = 
FALSE
;

26 
sockaddr_ö
 
	g˛¡_mˇ°_addr
;

27 
	g˛¡_mˇ°_fd
 = 0;

28 
ù_mªq
 
	gmªq_globÆ
;

29 
boﬁ
 
	ghbót_chk_°¨t
 = 
FALSE
;

30 
boﬁ
 
	gdi•_c⁄s_job
 = 
TRUE
;

31 
˛õ¡_°©e_í
 
	g˛õ¡_°©e
 = 
CLIENT_RES
;

32 
˛õ¡_db_°
 *
	g˛õ¡_íåy
[
MAX_CLIENTS
];

33 
gΩ_d©a_°
 *
	ggΩ_d©a
[
MAX_CLIENTS
];

34 
	gtŸÆ_fd
;

35 
pﬁlfd
 
	gªadfds
[
MAX_CLIENTS
];

36 
time_t
 
	gjob_£¡_ts
 = 0;

37 
sockaddr_ö
 
	g£rvî_addr_c›y
;

38 
	gcomm_sock_c›y
 = 0;

39 
	gªq_gΩ_id
 = 0;

40 
FILE
 *
	glog_Â
 = 
NULL
;

42 
£t_sig«l_h™dÀr
((*
f
)())

45 
	`sig«l
(
SIGPIPE
, 
SIG_IGN
);

48 
	`sig«l
(
SIGTERM
, *
f
);

49 
	`sig«l
(
SIGINT
, *
f
);

50 
	`sig«l
(
SIGABRT
, *
f
);

51 
	`sig«l
(
SIGFPE
, *
f
);

52 
	`sig«l
(
SIGSEGV
, *
f
);

53 
	}
}

55 
	$upd_˛õ¡_db_öfo
(
ödex
, 
√w_sockë_fd
,

56 
p‹t_num
)

59 
	`PRINT
("client_id: %d (%s) of group: %d %s",

60 
ödex
, 
	`öë_¡ﬂ
(
˛õ¡_íåy
[ödex]->
addr
),

61 
˛õ¡_íåy
[
ödex
]->
group_id
, "requestedÑe-registration");

63 
˛õ¡_íåy
[
ödex
]->
sockë_id
 = 
√w_sockë_fd
;

64 
˛õ¡_íåy
[
ödex
]->
p‹t_num
 =Öort_num;

65 
˛õ¡_íåy
[
ödex
]->
is_a˘ive
 = 
TRUE
;

66 
˛õ¡_íåy
[
ödex
]->
£rvî_ack
 = 
FALSE
;

67 
˛õ¡_íåy
[
ödex
]->
is_∑πicù™t
 = 
FALSE
;

70 
ªadfds
[
ödex
].
fd
 = 
√w_sockë_fd
;

71 
ªadfds
[
ödex
].
evíts
 = 
POLLIN
;

72 
	}
}

74 
	$add_˛õ¡_db_öfo
(
ödex
, 
sockë_fd
,

75 
gΩ_id
, 
sockaddr_ö
 *
˛õ¡_addr
)

77 
i
 = 
ödex
;

78 
˛õ¡_íåy
[
i
] = (
˛õ¡_db_°
 *Ë
	`ˇŒoc
(1, (client_db_st));

80 i‡(!
˛õ¡_íåy
[
i
]) {

81 
	`ERROR
("%†%d fûe: %s", "ˇŒo¯Áûuªáàlöe:", 
__LINE__
, 
__FILE__
);

85 
˛õ¡_íåy
[
i
]->
sockë_id
 = 
sockë_fd
;

86 i‡(
IGNORE_GROUP
) {

87 
˛õ¡_íåy
[
i
]->
group_id
 = (i/4);

89 
˛õ¡_íåy
[
i
]->
group_id
 = 
gΩ_id
;

92 
˛õ¡_íåy
[
i
]->
hash_id
 = 
ödex
;

93 
˛õ¡_íåy
[
i
]->
Ámûy
 = 
˛õ¡_addr
->
sö_Ámûy
;

94 
˛õ¡_íåy
[
i
]->
p‹t_num
 = 
˛õ¡_addr
->
sö_p‹t
;

95 
˛õ¡_íåy
[
i
]->
addr
 = 
˛õ¡_addr
->
sö_addr
;

96 
˛õ¡_íåy
[
i
]->
is_a˘ive
 = 
TRUE
;

97 
˛õ¡_íåy
[
i
]->
is_exec
 = 
FALSE
;

98 
˛õ¡_íåy
[
i
]->
£rvî_ack
 = 
FALSE
;

101 
ªadfds
[
i
].
fd
 = 
˛õ¡_íåy
[i]->
sockë_id
;

102 
ªadfds
[
i
].
evíts
 = 
POLLIN
;

105 
tŸÆ_fd
++;

106 
	}
}

108 * 
	$gë_msg_ty≥_°r
 (
msg_ty≥_í
 
msg_ty≥
)

110 
msg_ty≥
) {

112 
MSG_RES
:

115 
SERVER_UP
:

118 
REGISTER_CLIENT
:

121 
ACK_FRM_SERVER
:

124 
HEARTBEAT
:

127 
JOB_REQ
:

130 
JOB_RESP
:

133 
JOB_TERM
:

136 
CLIENT_DOWN
:

143 
	}
}

145 * 
	$gë_˛õ¡_°©e_°r
(
˛õ¡_°©e_í
 
˛õ¡_°©e_¨g
)

148 
˛õ¡_°©e_¨g
) {

149 
CLIENT_RES
:

152 
CLIENT_INIT
:

155 
CLIENT_REG_SENT
:

158 
CLIENT_ACK_WAIT
:

161 
CLIENT_ACK_OK
:

164 
CLIENT_EXIT
:

170 
	}
}

172 
	$add_hash_id_to_gΩ
 (
hash_id
, 
gΩ_id
,

173 
gΩ_d©a_°
 **
±r
)

176 
gΩ_d©a_°
 *
ãmp
 = 
NULL
, *
cuºít
 = NULL;

178 
ãmp
 = (
gΩ_d©a_°
 *Ë
	`ˇŒoc
(1, (grp_data_st));

179 i‡(!
ãmp
) {

182 
ãmp
->
hash_id
 = hash_id;

183 
ãmp
->
√xt
 = 
NULL
;

184 
cuºít
 = *
±r
;

186 i‡(!*
±r
) {

187 *
±r
 = 
ãmp
;

188 
cuºít
 = *
±r
;

190 
cuºít
->
√xt
 !
NULL
) {

191 
cuºít
 = cuºít->
√xt
;

193 
cuºít
->
√xt
 = 
ãmp
;

194 
cuºít
 = 
ãmp
;

197 
	`DEBUG
("˛õ¡_id %dádded suc˚sfuŒyÅÿgΩ: %d", 
hash_id
, 
gΩ_id
);

199 
	}
}

201 
	$£nd_pkt_to_˛õ¡
 (
sockë_id
, 
msg_ty≥_í
 
msg_ty≥
,

202 
ödex
, 
job_°
 *
d©a
)

205 
msg_d©a_Àn
 = 0;

206 
msg_°
 *
msg
 = 
NULL
;

207 
rc
 = 0;

209 i‡(!
d©a
) {

210 
msg_d©a_Àn
 = 0;

212 
msg_d©a_Àn
 = (
job_°
);

215 
msg_ty≥
) {

217 
ACK_FRM_SERVER
:

218 
msg
 = (
msg_°
 *)
	`ˇŒoc
(1, (msg_°)+
msg_d©a_Àn
);

219 i‡(!
msg
) {

220 
	`ERROR
("%s %d file : %s", "alloc for ACK msg failedátÜine:",

221 
__LINE__
, 
__FILE__
);

222  
ERR_CODE
;

225 
msg
->
ty≥
 = 
msg_ty≥
;

226 
msg
->
Àn
 = 
msg_d©a_Àn
 + (
mu…iˇ°_°
);

227 
msg
->
group_id
 = 
˛õ¡_íåy
[
ödex
]->group_id;

228 
msg
->
hash_id
 = 
˛õ¡_íåy
[
ödex
]->hash_id;

229 
msg
->
mu…i_±r
 = 
	`ˇŒoc
(1, (
mu…iˇ°_°
));

230 i‡(!
msg
->
mu…i_±r
) {

231 
	`ERROR
("%s", "calloc failed for msg->multicast_st for SRVR_ACK");

234 i‡(
	`is_mu…iˇ°
()){

235 
msg
->
mu…i_±r
->
mu…_mode
 = 
TRUE
;

237 
msg
->
mu…i_±r
->
mu…_mode
 = 
FALSE
;

240 
rc
 = 
	`£nd
(
sockë_id
, 
msg
, (
msg_°
)+
msg_d©a_Àn
, 0);

241 i‡(
	`RC_NOTOK
(
rc
)) {

242 
	`ERROR
("%†%†%s", 
	`gë_msg_ty≥_°r
(
msg_ty≥
),

244 
	`öë_¡ﬂ
(
˛õ¡_íåy
[
ödex
]->
addr
), 
msg
->
hash_id
,

245 
	`°ªº‹
(
î∫o
));

246 
	`‰ì_msg
(
msg
);

247  
rc
;

249 
˛õ¡_íåy
[
ödex
]->
£rvî_ack
 = 
TRUE
;

250 
˛õ¡_íåy
[
ödex
]->
hbót_time
 = 0;

251 
	`‰ì_msg
(
msg
);

255 
JOB_REQ
:

256 
msg
 = (
msg_°
 *)
	`ˇŒoc
(1, (msg_°)+
msg_d©a_Àn
);

257 i‡(!
msg
) {

258 
	`ERROR
("%s %d file : %s", "alloc for ACK msg failedátÜine:",

259 
__LINE__
, 
__FILE__
);

260  
ERR_CODE
;

263 
msg
->
ty≥
 = 
msg_ty≥
;

264 
msg
->
Àn
 = 
msg_d©a_Àn
;

265 
msg
->
group_id
 = 
˛õ¡_íåy
[
ödex
]->group_id;

266 
msg
->
hash_id
 = 
˛õ¡_íåy
[
ödex
]->hash_id;

267 i‡(!
d©a
) {

268 
	`ERROR
("%s: d©®∑π i†NULL", 
FUNC
);

269 
	`‰ì_msg
(
msg
);

270  
ERR_CODE
;

272 i‡(
msg_d©a_Àn
 && 
d©a
) {

273 
msg
->
job_d©a
->
job_id
 = 
d©a
->job_id;

274 
msg
->
job_d©a
->
°¨t_ønge
 = 
d©a
->start_range;

275 
msg
->
job_d©a
->
íd_ønge
 = 
d©a
->end_range;

276 
	`°r˝y
(
msg
->
job_d©a
->
ö±_fûe
, 
d©a
->inpt_file);

277 
	`°r˝y
(
msg
->
job_d©a
->
ouçt_fûe
, 
d©a
->outpt_file);

280 
rc
 = 
	`£nd
(
sockë_id
, 
msg
, (
msg_°
)+
msg_d©a_Àn
, 0);

281 i‡(
	`RC_NOTOK
(
rc
)) {

282 
	`ERROR
("%†%†%s", 
	`gë_msg_ty≥_°r
(
msg_ty≥
),

284 
	`öë_¡ﬂ
(
˛õ¡_íåy
[
ödex
]->
addr
), 
msg
->
hash_id
,

285 
	`°ªº‹
(
î∫o
));

286 
	`‰ì_msg
(
msg
);

287  
rc
;

289 
	`DEBUG
("Job_id: %d sentÅo client_id: %d (%s)",

290 
d©a
->
job_id
, 
msg
->
hash_id
,

291 
	`öë_¡ﬂ
(
˛õ¡_íåy
[
ödex
]->
addr
));

292 
	`‰ì_msg
(
msg
);

296 
JOB_TERM
:

298 
msg
 = (
msg_°
 *Ë
	`ˇŒoc
(1, (msg_st));

299 i‡(!
msg
) {

300 
	`ERROR
("%sÜine: %d file : %s", "alloc for JOB_TERM msg failed",

301 
__LINE__
, 
__FILE__
);

302  
ERR_CODE
;

305 
msg
->
ty≥
 = 
msg_ty≥
;

306 
msg
->
Àn
 = 
msg_d©a_Àn
;

307 
msg
->
group_id
 = 
˛õ¡_íåy
[
ödex
]->group_id;

308 
msg
->
hash_id
 = 
ödex
;

310 
rc
 = 
	`£nd
(
sockë_id
, 
msg
, (
msg_°
), 0);

311 i‡(
	`RC_NOTOK
(
rc
)) {

312 
	`ERROR
("%s %d %s %s", "JOB_TERMÑequestÅo client_id: ",

313 
ödex
, "couldn'àbê£¡.Éºno:", 
	`°ªº‹
(
î∫o
));

314 
	`‰ì_msg
(
msg
);

317 
	`DEBUG
("%†%d", "JOB_TERMÑeque° síàtÿ˛õ¡_id:", 
ödex
);

318 
	`‰ì_msg
(
msg
);

323 
	`DEBUG
("%s: Nÿ√edÅÿ£ndÖkàf‹ msg: %s", 
FUNC
,

324 
	`gë_msg_ty≥_°r
(
msg_ty≥
));

327  
rc
;

328 
	}
}

330 
	$di•œy_job_öfo
 (*
job_id
) {

332 
i
 = 0;

333 
	`¥ötf
("\n#########################################################\n");

334 
TRUE
) {

335 
	`Ârötf
(
°dout
, "Job 1: calculate PrimeÇumbers\n");

336 
	`Ârötf
(
°dout
, "Job 2: calculate word counts in File\n");

337 
	`Ârötf
(
°dout
, "Job 3: calculate max in set ofÇos.\n");

338 
	`Ârötf
(
°dout
, "Job 4: calculate Sum of series\n");

339 
	`Ârötf
(
°dout
, "Select Job IdÅoÖrocess...");

341 
	`sˇnf
("%d", 
job_id
);

342 
	`¥ötf
("You sñe˘ed: %d\n", *
job_id
);

343 
	`¥ötf
("#########################################################\n");

344 i‡(*
job_id
 < (
JOB_RES
+1Ë&& (*job_id >
JOB_MAX_ID
)) {

345 
	`¥ötf
("Input must be from Displayed Job_IDs.. Tryágain\n");

351 
	`¥ötf
("BelowáreÅheávailable clientsÅo help inÅhe Job\n");

352 
	`¥ötf
("=========================================================\n");

354 
i
 = 0; i < 
MAX_CLIENTS
; i++) {

355 i‡(
gΩ_d©a
[
i
] !
NULL
) {

356 
	`di•œy_gΩ_öfo
(
i
);

359 
	`¥ötf
("=========================================================\n");

360 
	}
}

362 
	$£nd_job_to_gΩ
(
job_id_í
 
job_id
) {

364 
i
 = 0, 
cou¡_˛õ¡
 = 0, 
rc
 = 0;

365 
tŸÆ_gΩ
 = 0;

366 
tŸÆ_£t
 = 0;

367 
£t_≥r_gΩ
 = 0;

368 
°¨t_num
 = 0, 
íd_num
 = 0;

369 
°¨t_sub_num
 = 0, 
íd_sub_num
 = 0;

370 
Á˘‹_öc
 = 0;

371 
sockë_id
 = 0;

372 
boﬁ
 
£nd_gΩ_Áû
 = 
FALSE
;

373 
job_°
 *
job_dë
 = 
NULL
;

374 
gΩ_d©a_°
 *
ãmp
 = 
NULL
;

375 
öput_fûe
[
FILE_NAME_LEN
];

377 
tŸÆ_gΩ
 = 
	`cou¡_tŸÆ_gΩ
();

379 
job_dë
 = (
job_°
 *Ë
	`ˇŒoc
(1, (job_st));

380 i‡(!
job_dë
) {

381 
	`ERROR
("ˇŒo¯ÁûedáàLöe: fûe: %s", 
__LINE__
, 
__FILE__
);

385 
job_id
) {

387 
JOB_PRIME
:

388 
°¨t_num
 = 1;

389 
íd_num
 = 32767;

390 
tŸÆ_£t
 = (
íd_num
 - 
°¨t_num
 + 1)/
tŸÆ_gΩ
;

392 
i
 = 0; i < 
MAX_CLIENTS
; i++) {

393 i‡(
gΩ_d©a
[
i
] !
NULL
) {

395 
cou¡_˛õ¡
 = 
	`cou¡_gΩ_tŸÆ
(
i
);

396 
°¨t_sub_num
 = 
°¨t_num
;

397 
íd_sub_num
 = 
°¨t_num
 + 
tŸÆ_£t
 + 
Á˘‹_öc
 - 1;

398 
£t_≥r_gΩ
 = (
íd_sub_num
 - 
°¨t_sub_num
)/
cou¡_˛õ¡
;

399 
ãmp
 = 
gΩ_d©a
[
i
];

400 
ãmp
 !
NULL
) {

401 
£nd_gΩ_Áû
 = 
TRUE
;

402 
°¨t_sub_num
 = 
°¨t_num
;

403 
íd_sub_num
 = 
°¨t_num
 + 
£t_≥r_gΩ
 + 
Á˘‹_öc
;

406 
job_dë
->
job_id
 = job_id;

407 
job_dë
->
°¨t_ønge
 = 
°¨t_sub_num
;

408 
job_dë
->
íd_ønge
 = 
íd_sub_num
;

409 
	`mem£t
(
job_dë
->
ö±_fûe
, 0, 
FILE_NAME_LEN
);

410 
	`mem£t
(
job_dë
->
ouçt_fûe
, 0, 
FILE_NAME_LEN
);

413 
sockë_id
 = 
˛õ¡_íåy
[
ãmp
->
hash_id
]->socket_id;

414 
rc
 = 
	`£nd_pkt_to_˛õ¡
(
sockë_id
,

415 
JOB_REQ
, 
ãmp
->
hash_id
,

416 
job_dë
);

417 i‡(
	`RC_NOTOK
(
rc
)) {

418 
	`ERROR
("%s client_id: %d",

419 "could¡ síd jobÖkàto", 
ãmp
->
hash_id
);

420 
°¨t_sub_num
 = start_sub_num;

421 
Á˘‹_öc
 = 
£t_≥r_gΩ
;

427 
˛õ¡_íåy
[
ãmp
->
hash_id
]->
is_exec
 = 
TRUE
;

428 
˛õ¡_íåy
[
ãmp
->
hash_id
]->
is_∑πicù™t
 = 
TRUE
;

429 
˛õ¡_íåy
[
ãmp
->
hash_id
]->
£rvî_ack
 = 
TRUE
;

432 
°¨t_num
 = 
íd_sub_num
 + 1;

433 
Á˘‹_öc
 = 0;

434 
£nd_gΩ_Áû
 = 
FALSE
;

438 
ãmp
 =Åemp->
√xt
;

445 i‡(
£nd_gΩ_Áû
) {

446 
°¨t_num
 = 
°¨t_sub_num
;

447 
Á˘‹_öc
 = 
tŸÆ_£t
;

449 
°¨t_sub_num
 = 
íd_sub_num
 + 1;

450 
Á˘‹_öc
 = 0;

456 
JOB_WC
:

457 
i
 = 0; i < 
MAX_CLIENTS
; i++) {

458 i‡(
gΩ_d©a
[
i
] !
NULL
) {

459 
ãmp
 = 
gΩ_d©a
[
i
];

460 
ãmp
 !
NULL
) {

462 
job_dë
->
job_id
 = job_id;

463 
	`¢¥ötf
(
öput_fûe
, 
FILE_NAME_LEN
, "job_2_%d",

464 
ãmp
->
hash_id
);

466 if(!
	`is_fûe_exi°
(
öput_fûe
)) {

467 
	`ERROR
("File: %s doesn'tÉxist, skipping..",

468 
öput_fûe
);

469 
ãmp
 =Åemp->
√xt
;

472 
	`mem£t
(
job_dë
->
ö±_fûe
, 0, 
FILE_NAME_LEN
);

473 
	`°r˝y
(
job_dë
->
ö±_fûe
, 
öput_fûe
);

476 
sockë_id
 = 
˛õ¡_íåy
[
ãmp
->
hash_id
]->socket_id;

477 
rc
 = 
	`£nd_pkt_to_˛õ¡
(
sockë_id
,

478 
JOB_REQ
, 
ãmp
->
hash_id
,

479 
job_dë
);

480 i‡(
	`RC_NOTOK
(
rc
)) {

481 
	`ERROR
("%s client_id: %d",

482 "could¡ síd jobÖkàto", 
ãmp
->
hash_id
);

485 
˛õ¡_íåy
[
ãmp
->
hash_id
]->
is_exec
 = 
TRUE
;

486 
˛õ¡_íåy
[
ãmp
->
hash_id
]->
is_∑πicù™t
 = 
TRUE
;

487 
˛õ¡_íåy
[
ãmp
->
hash_id
]->
£rvî_ack
 = 
TRUE
;

489 
	`PRINT
("JOB_REQÅo calc WordCount in file :%s %s%d",

490 
öput_fûe
, "sentÅo client_id: ",

491 
ãmp
->
hash_id
);

495 
ãmp
 =Åemp->
√xt
;

503 
JOB_FIND_MAX
:

506 
JOB_SERIES
:

510 
	`ERROR
("%†job_id: %d", "ö deÁu…:Çÿsuch JOB found.", 
job_id
);

514  
rc
;

515 
	}
}

517 
	$¥öt_out
(c⁄° * 
f‹m©
, ... )

519 
va_li°
 
¨gs
;

520 
	`Ârötf
(
°dout
, "***INFO: ");

521 
	`va_°¨t
(
¨gs
, 
f‹m©
);

522 
	`vÂrötf
(
°dout
, 
f‹m©
, 
¨gs
 );

523 
	`va_íd
(
¨gs
);

524 
	`Ârötf
(
°dout
, "\n");

525 
	}
}

527 
	$¥öt_debug
(c⁄° * 
f‹m©
, ... )

529 i‡(
debug_⁄
) {

530 
buff
[1000] = {0};

531 
ãmp_buff
[100] = {0};

532 
va_li°
 
¨gs
;

533 
	`•rötf
(
buff
, "***DEBUG: ");

535 
	`va_°¨t
(
¨gs
, 
f‹m©
);

536 
	`v•rötf
(
ãmp_buff
, 
f‹m©
, 
¨gs
);

537 
	`°rˇt
(
buff
, 
ãmp_buff
);

538 
	`va_íd
(
¨gs
);

540 
	`°rˇt
(
buff
, "\n");

541 
	`Ârötf
(
°dout
, "%s", 
buff
);

542 i‡(
log_Â
) {

543 
	`Âuts
(
buff
, 
log_Â
);

546 
	}
}

548 
	$¥öt_îr‹
(c⁄° * 
f‹m©
, ... )

550 
buff
[1000] = {0};

551 
ãmp_buff
[100] = {0};

552 
va_li°
 
¨gs
;

553 
	`•rötf
(
buff
, "~~~ERROR: ");

555 
	`va_°¨t
(
¨gs
, 
f‹m©
);

556 
	`v•rötf
(
ãmp_buff
, 
f‹m©
, 
¨gs
 );

557 
	`°rˇt
(
buff
, 
ãmp_buff
);

558 
	`va_íd
(
¨gs
);

560 
	`°rˇt
(
buff
, "\n");

561 
	`Ârötf
(
°dîr
, "%s", 
buff
);

562 i‡(
log_Â
) {

563 
	`Âuts
(
buff
, 
log_Â
);

565 
	}
}

567 
	$¥öt_Æît
(c⁄° * 
f‹m©
, ... )

569 
va_li°
 
¨gs
;

570 
	`Ârötf
(
°dîr
, "\n#########################################################\n");

571 
	`Ârötf
(
°dîr
, "***ALERT:");

572 
	`va_°¨t
(
¨gs
, 
f‹m©
);

573 
	`vÂrötf
(
°dîr
, 
f‹m©
, 
¨gs
 );

574 
	`va_íd
(
¨gs
);

575 
	`Ârötf
(
°dîr
, "\n#########################################################\n");

576 
	}
}

578 
	$gë_£rvî_öfo_‰m_fûe
 (*
addr
, *
p‹t_num
)

580 
FILE
 *
Â
 = 
NULL
;

581 
p‹t_°r
[100];

582 
addr_°r
[100];

583 *
ödex_°r
;

584 *
∆öe_ödex
 = 
NULL
;

585 
rc
 = 0;

587 
Â
 = 
	`f›í
("conf.txt", "r");

588 i‡(!
Â
) {

589 
	`ERROR
("%s", "opening file: conf.txtÑesulted inÉrror");

593 
	`fgës
(
addr_°r
, 100, 
Â
);

594 
	`fgës
(
p‹t_°r
, 100, 
Â
);

596 i‡(
addr
) {

597 i‡(
	`°r°r
(
addr_°r
, "£rvî_addr"Ë!
NULL
) {

598 i‡((
ödex_°r
 = 
	`°r°r
(
addr_°r
, "=")Ë=
NULL
) {

599 
rc
 = -1;

600 
	`ERROR
("%s", "Server Port StringÇot found");

602 
	`°r˝y
(
addr
, 
ödex_°r
+1);

603 
∆öe_ödex
 = 
	`°rchr
(
addr
, '\n');

604 *
∆öe_ödex
 = '\0';

605 
	`DEBUG
("%s: %†%s", 
__FUNCTION__
, "Sîvî Addªss:", 
addr
);

608 
	`ERROR
("%s", "server_addráttributeÇot found in file");

609 
rc
 = -1;

613 i‡(
p‹t_num
) {

614 i‡(
	`°r°r
(
p‹t_°r
, "£rvî_p‹t"Ë!
NULL
) {

615 i‡((
ödex_°r
 = 
	`°r°r
(
p‹t_°r
, "=")Ë=
NULL
) {

616 
rc
 = -1;

617 
	`ERROR
("%s", "Server Port StringÇot found");

619 
	`DEBUG
("%s: %†%s", 
__FUNCTION__
, "P‹ànub∏ö så:", 
ödex_°r
+1);

620 *
p‹t_num
 = 
	`©oi
(
ödex_°r
+1);

623 
	`ERROR
("%s", "server_portáttributeÇot found in file");

624 
rc
 = -1;

628 
	`f˛o£
(
Â
);

629  
rc
;

630 
	}
}

632 
	$‰ì_msg
 (
msg_°
 *
msg
)

635 i‡(!
msg
) {

639 
	`‰ì
(
msg
);

640 
msg
 = 
NULL
;

641 
	}
}

643 
	$gë_£rvî_p‹t_‰m_fûe
 ()

645 
FILE
 *
Â
 = 
NULL
;

646 
p‹t_°r
[100];

647 
addr_°r
[100];

648 *
ödex_°r
;

649 
p‹t_num
 = 0;

651 
Â
 = 
	`f›í
("conf.txt", "r");

652 i‡(!
Â
) {

653 
	`ERROR
("%s", "opening file: conf.txtÑesulted inÉrror");

657 
	`fgës
(
addr_°r
, 100, 
Â
);

658 
	`fgës
(
p‹t_°r
, 100, 
Â
);

660 i‡(
	`°r°r
(
p‹t_°r
, "£rvî_p‹t"Ë!
NULL
) {

661 i‡((
ödex_°r
 = 
	`°r°r
(
p‹t_°r
, "=")Ë=
NULL
) {

662 
p‹t_num
 = -1;

663 
	`ERROR
("%s", "Server Port StringÇot found");

666 
p‹t_num
 = 
	`©oi
(
ödex_°r
+1);

669 
	`ERROR
("%s", "server_portáttributeÇot found in file");

670 
p‹t_num
 = -1;

673 
	`f˛o£
(
Â
);

674  
p‹t_num
;

675 
	}
}

677 
	$di•œy_job_ouçut
()

679 
i
 = 0, 
ªad_vÆ
 = 0;

680 
FILE
 *
Â
 = 
NULL
;

681 
cou¡
 = 0;

682 
num1
 = 0;

684 
i
 = 0; i < 
MAX_CLIENTS
; i++) {

685 i‡(
˛õ¡_íåy
[
i
] !
NULL
 && clõ¡_íåy[i]->
is_∑πicù™t
) {

686 i‡(!
˛õ¡_íåy
[
i
]->
is_exec
) {

687 
Â
 = 
	`f›í
(
˛õ¡_íåy
[
i
]->
fûe_ouç
, "r");

688 i‡(!
Â
) {

689 
	`ERROR
("File %s (output from client_id: %d) forÑeading failed",

690 
˛õ¡_íåy
[
i
]->
fûe_ouç
, i);

693 
	`ALERT
("%†%d", "ouçuàªcõved from clõ¡_id:", 
i
);

696 (
ªad_vÆ
 = 
	`fsˇnf
(
Â
, "%d", &
num1
)Ë!
EOF
) {

697 i‡(
ªad_vÆ
 == 1) {

698 
cou¡
++;

701 
	`¥ötf
("%d ", 
num1
);

704 i‡(
cou¡
 == 10) {

705 
	`¥ötf
("\n");

706 
cou¡
 = 0;

710 
	`¥ötf
("\n");

711 
	`fÊush
(
°dout
);

712 
	`DEBUG
("%†%d i†ovî", "Oupuà‰om Clõ¡:", 
i
);

713 
	`f˛o£
(
Â
);

714 
˛õ¡_íåy
[
i
]->
is_∑πicù™t
 = 
FALSE
;

715 
cou¡
 = 0;

716 } i‡(
˛õ¡_íåy
[
i
]->
is_exec
) {

722 (Ë
	`£nd_pkt_to_˛õ¡
(
˛õ¡_íåy
[
i
]->
sockë_id
,

723 
JOB_TERM
, 
i
, 
NULL
);

729 
job_£¡_ts
 = 0;

730 
	}
}

732 
ölöe
 
boﬁ
 
	$is_¥ime
 (
num
)

734 
p
 =1, 
s
 = 1, 
i
 = 0;

740 
p
 <
num
) {

741 
s
++;

742 
p
 = 
s
*s;

745 
i
 = 2; i < 
s
; i++) {

746 i‡(
num
%
i
 == 0) {

747  
FALSE
;

751  
TRUE
;

752 
	}
}

754 
	$dñ_fûe_if_exi°
(*
fûe
)

757 i‡(!
fûe
) {

758  
ERR_CODE
;

761 i‡(!
	`ac˚ss
(
fûe
, 
F_OK
)) {

762 i‡(
	`ªmove
(
fûe
)) {

763 
	`ERROR
("%s. %†î∫o: %s", "U«bÀÅÿdñëêfûe:", 
fûe
,

764 
	`°ªº‹
(
î∫o
));

765  
ERR_CODE
;

769 
	}
}

771 
boﬁ
 
	$is_fûe_exi°
(*
fûe
)

774 i‡(!
fûe
) {

775  
FALSE
;

778 i‡(!
	`ac˚ss
(
fûe
, 
F_OK
)) {

779  
TRUE
;

782  
FALSE
;

783 
	}
}

785 
	$compuã_job
(
˛¡_thªad_¨g_°
 *
d©a
)

788 
°¨t_num
 = 0, 
íd_num
 = 0, 
i
 = 0;

789 
FILE
 *
Â
 = 
NULL
;

790 
ascii_num
[
MAX_ASC_CHLEN
];

791 
ascii_w‹d
[
MAX_WORD_LEN
];

793 i‡(!
d©a
) {

794 
	`ERROR
("%s: %s", 
FUNC
, "data is NULL,Éxiting");

795  
ERR_CODE
;

798 i‡(!
d©a
->
ouçt_fûe
) {

799 
	`ERROR
("%s: %s", 
FUNC
, "outp_filename is NULL,Éxiting");

800  
ERR_CODE
;

803 
°¨t_num
 = 
d©a
->
°¨t_ønge
;

804 
íd_num
 = 
d©a
->
íd_ønge
;

806 
d©a
->
job_id
) {

808 
JOB_PRIME
:

810 (Ë
	`dñ_fûe_if_exi°
(
d©a
->
ouçt_fûe
);

812 
Â
 = 
	`f›í
(
d©a
->
ouçt_fûe
, "a+");

813 i‡(!
Â
) {

814 
	`ERROR
("%s: %s", 
FUNC
, "fp for filename is NULL,Éxiting");

815  
ERR_CODE
;

818 
i
 = 
°¨t_num
; i <
íd_num
; i++) {

819 i‡(
	`is_¥ime
(
i
)) {

821 
	`¢¥ötf
(
ascii_num
, 
MAX_ASC_CHLEN
, "%d ", 
i
);

822 
	`Âuts
(
ascii_num
, 
Â
);

825 
	`f˛o£
(
Â
);

828 
JOB_WC
:

829 
Â
 = 
	`f›í
(
d©a
->
ö±_fûe
, "r");

830 i‡(!
Â
) {

831 
	`ERROR
("%s: %s", 
FUNC
, "fp for filename is NULL,Éxiting");

832  
ERR_CODE
;

835 
i
 = 0;

836 
	`fsˇnf
(
Â
, "%s", 
ascii_w‹d
Ë!
EOF
) {

837 
i
++;

840 
	`f˛o£
(
Â
);

843 (Ë
	`dñ_fûe_if_exi°
(
d©a
->
ouçt_fûe
);

844 
Â
 = 
	`f›í
(
d©a
->
ouçt_fûe
, "a+");

845 i‡(!
Â
) {

846 
	`ERROR
("%s: %s", 
FUNC
, "fp for filename is NULL,Éxiting");

847  
ERR_CODE
;

850 
	`DEBUG
("w‹d cou¡ i¿fûe: %†i†%d", 
d©a
->
ö±_fûe
, 
i
);

851 
	`¢¥ötf
(
ascii_w‹d
, 
MAX_WORD_LEN
, "%d", 
i
);

852 
	`Âuts
(
ascii_w‹d
, 
Â
);

853 
	`f˛o£
(
Â
);

856 
JOB_SERIES
:

859 
JOB_FIND_MAX
:

863 
	`ERROR
("%s: %s", 
FUNC
, "in default,Éxiting");

864  
ERR_CODE
;

867 
	}
}

869 
	$a˘i⁄_⁄_˛õ¡_°©e
(
sockë_fd
,

870 
˛õ¡_°©e_í
 
˛õ¡_°©e_¨g
,

871 
sockaddr_ö
 *
addr
)

873 
rc
 = 0;

874 
numbyãs
 = 0;

875 
msg_°
 *
msg
 = 
NULL
;

876 
msg_d©a_Àn
 = 0;

877 
hash_id
 = 0, 
group_id
 = 0;

878 
time_t
 
ba£_time
 = 0;

879 
time_t
 
cuº_time
 = 0;

880 
hbót_cou¡î
 = 0;

881 
boﬁ
 
is_hbt_time_£t
 = 
FALSE
;

882 
ouç_fûe
[
FILE_NAME_LEN
];

883 
±hªad_t
 
job_thªad
;

884 
±hªad_©å_t
 
©å
;

885 
˛¡_thªad_¨g_°
 
¨g
;

886 
job_id
 = 0;

889 i‡(!
sockë_fd
) {

890 
	`ERROR
("%†%s", 
FUNC
, "socket_fd isÇot valid");

891  
ERR_CODE
;

895 
rc
 = 
	`±hªad_©å_öô
(&
©å
);

896 i‡(
rc
) {

897 
	`ERROR
("%s %s", "Client'sÅhread'sáttribute init failed.Érrno. :",

898 
	`°ªº‹
(
î∫o
));

901 
rc
 = 
	`±hªad_©å_£tdëach°©e
(&
©å
,

902 
PTHREAD_CREATE_DETACHED
);

903 i‡(
rc
) {

904 
	`ERROR
("%sÉrrno.: %s",

906 
	`°ªº‹
(
î∫o
));

909 
˛õ¡_°©e_¨g
) {

911 
CLIENT_INIT
:

913 
msg
 = 
	`ˇŒoc
(1, (
msg_°
));

914 
msg
->
ty≥
 = 
REGISTER_CLIENT
;

915 
msg
->
Àn
 = 0;

916 
msg
->
group_id
 = 
ªq_gΩ_id
;

917 
msg
->
hash_id
 = 0;

919 
numbyãs
 = 
	`£nd
(
sockë_fd
, 
msg
, (msg), 0);

920 i‡(
	`RC_NOTOK
(
numbyãs
)) {

921 
	`ERROR
("%s %s",

923 
	`°ªº‹
(
î∫o
));

924  
ERR_CODE
;

926 
	`PRINT
("%s %s for group_id: %d",

928 
	`öë_¡ﬂ
(
addr
->
sö_addr
), 
msg
->
group_id
);

929 
˛õ¡_°©e
 = 
CLIENT_REG_SENT
;

930 
	`‰ì_msg
(
msg
);

934 
CLIENT_REG_SENT
:

935 
CLIENT_ACK_WAIT
:

937 
msg_d©a_Àn
 = 
	`gë_msg_d©a_Àn
(
sockë_fd
);

938 i‡(
	`RC_NOTOK
(
msg_d©a_Àn
)) {

939  
ERR_CODE
;

941 
	`DEBUG
("%s %dÜength", "ACK_FRM_SERVER dataÖart is of",

942 
msg_d©a_Àn
);

943 
msg
 = 
	`ˇŒoc
(1, (
msg_°
)+
msg_d©a_Àn
);

944 
	`CHK_ALLOC
(
msg
);

945 
numbyãs
 = 
	`ªcv
(
sockë_fd
, 
msg
,

946 (
msg_°
)+
msg_d©a_Àn
, 0);

947 i‡(
	`RC_NOTOK
(
numbyãs
)) {

948 
	`ERROR
("%s %s", "ACK_FRM_SERVERÑecv() failed.Érrno.",

949 
	`°ªº‹
(
î∫o
));

950  
ERR_CODE
;

952 i‡(
msg
->
mu…i_±r
) {

953 
is_mu…iˇ°_suµ
 = 
msg
->
mu…i_±r
->
mu…_mode
;

955 
	`PRINT
("Client will operate in MULTICAST: %sÉnvironment",

956 
is_mu…iˇ°_suµ
?"TRUE":"FALSE");

957 
	`PRINT
("%s %s my client_id: %dánd grp_id: %d",

958 
	`gë_msg_ty≥_°r
(
msg
->
ty≥
),

959 "ªcõved from sîvî", 
msg
->
hash_id
,

960 
msg
->
group_id
);

962 
hash_id
 = 
msg
->hash_id;

963 
group_id
 = 
msg
->group_id;

964 
	`‰ì_msg
(
msg
);

970 i‡(
is_mu…iˇ°_suµ
) {

971 
rc
 = 
	`joö_mˇ°_group
(
group_id
);

972 i‡(
	`RC_NOTOK
(
rc
)) {

973 
	`ERROR
("Couldnt Join Multicast group for grp_id: %d",

974 
group_id
);

975 
˛õ¡_°©e
 = 
CLIENT_EXIT
;

978 
˛õ¡_°©e
 = 
CLIENT_ACK_OK
;

983 
CLIENT_ACK_OK
:

988 
hbót_cou¡î
++;

989 
is_hbt_time_£t
 = 
FALSE
;

990 i‡(
hbót_cou¡î
 == 1) {

991 
ba£_time
 = 
	`time
(
NULL
);

993 
	`¶ìp
(1);

994 
cuº_time
 = 
	`time
(
NULL
);

996 i‡(–(
cuº_time
-
ba£_time
Ë>(
HBT_TIME
-1)) &&

997 ((
cuº_time
-
ba£_time
Ë<(
HBT_TIME
+1))) {

998 
ba£_time
 = 
	`time
(
NULL
);

999 
is_hbt_time_£t
 = 
TRUE
;

1002 i‡(
is_hbt_time_£t
 || (
hbót_cou¡î
 == 1)) {

1004 
msg
 = 
	`ˇŒoc
(1, (
msg_°
));

1005 i‡(!
msg
) {

1006 
	`ERROR
("Calloc failed during HBEAT caseátÜine: %d file: %s",

1007 
__LINE__
, 
__FILE__
);

1008  
ERR_CODE
;

1010 
msg
->
ty≥
 = 
HEARTBEAT
;

1011 
msg
->
Àn
 = 0;

1012 
msg
->
group_id
 = group_id;

1013 
msg
->
hash_id
 = hash_id;

1015 
numbyãs
 = 
	`£nd
(
sockë_fd
, 
msg
, (
msg_°
), 0);

1016 i‡(
	`RC_NOTOK
(
numbyãs
)) {

1017 
	`ERROR
("%s %s",

1019 
	`°ªº‹
(
î∫o
));

1020 
	`‰ì_msg
(
msg
);

1021  
ERR_CODE
;

1023 
	`DEBUG
("%s %s for group_id: %d",

1025 
	`öë_¡ﬂ
(
addr
->
sö_addr
), 
msg
->
group_id
);

1026 
˛õ¡_°©e
 = 
CLIENT_ACK_OK
;

1027 
	`‰ì_msg
(
msg
);

1032 
msg_d©a_Àn
 = 
	`gë_msg_d©a_Àn_n⁄_waô
(
sockë_fd
);

1033 i‡(
	`RC_NOTOK
(
msg_d©a_Àn
)) {

1037 
msg
 = 
	`ˇŒoc
(1, (
msg_°
)+
msg_d©a_Àn
);

1038 i‡(!
msg
) {

1039 
	`ERROR
("Calloc failed during HBEAT caseátÜine: %d file: %s",

1040 
__LINE__
, 
__FILE__
);

1041  
ERR_CODE
;

1044 
numbyãs
 = 
	`ªcv
(
sockë_fd
, 
msg
,

1045 (
msg_°
)+
msg_d©a_Àn
, 0);

1046 i‡(
	`RC_NOTOK
(
numbyãs
)) {

1047 
	`ERROR
("%s %s", "msgÑecv() failed.Érrno.",

1048 
	`°ªº‹
(
î∫o
));

1049 
	`‰ì_msg
(
msg
);

1050  
ERR_CODE
;

1052 
	`DEBUG
("%s %s bytes: %d",

1053 
	`gë_msg_ty≥_°r
(
msg
->
ty≥
),

1054 "ªcõved from sîvî", 
numbyãs
);

1055 i‡(
msg
->
ty≥
 =
JOB_REQ
) {

1057 
job_id
 = 
msg
->
job_d©a
->job_id;

1059 
	`PRINT
("%s %d (from_num: %dÅo_num: %d)",

1061 
job_id
, 
msg
->
job_d©a
->
°¨t_ønge
,

1062 
msg
->
job_d©a
->
íd_ønge
);

1064 
	`¢¥ötf
(
ouç_fûe
, 
FILE_NAME_LEN
, "clnt_job_%d_%d",

1065 
job_id
, 
hash_id
);

1066 
	`DEBUG
("%†%s", "ouçuàfûêwû»be:", 
ouç_fûe
);

1068 
¨g
.
˛õ¡_id
 = 
msg
->
hash_id
;

1069 
¨g
.
group_id
 = 
msg
->group_id;

1070 
¨g
.
job_id
 = 
msg
->
job_d©a
->job_id;

1071 
¨g
.
°¨t_ønge
 = 
msg
->
job_d©a
->start_range;

1072 
¨g
.
íd_ønge
 = 
msg
->
job_d©a
->end_range;

1073 
	`°r˝y
(
¨g
.
ö±_fûe
, 
msg
->
job_d©a
->inpt_file);

1074 
	`°r˝y
(
¨g
.
ouçt_fûe
, 
ouç_fûe
);

1077 
rc
 = 
	`±hªad_¸óã
(&
job_thªad
, &
©å
,

1078 
exec_job_thªad
, &
¨g
);

1084 (Ë
	`±hªad_©å_de°roy
(&
©å
);

1086 i‡(
rc
) {

1087 
	`ERROR
("exec_job_thread creation failed.Érrno: %s",

1088 
	`°ªº‹
(
î∫o
));

1089 
	`‰ì_msg
(
msg
);

1092 
	`‰ì_msg
(
msg
);

1093 } i‡(
msg
->
ty≥
 =
JOB_TERM
) {

1094 
	`PRINT
("%s %s", "Recvd Job TerminationÑequest",

1097 
rc
 = 
	`±hªad_ˇn˚l
(
job_thªad
);

1098 i‡(!
rc
) {

1099 
	`DEBUG
("%s", "Thread cancellation successfull");

1101 
	`‰ì_msg
(
msg
);

1103 
	`DEBUG
("%s: %d", "msgÅy≥ i†diff", 
msg
->
ty≥
);

1104 
	`‰ì_msg
(
msg
);

1106 
˛õ¡_°©e
 = 
CLIENT_ACK_OK
;

1111 
CLIENT_EXIT
:

1113 
msg
 = 
	`ˇŒoc
(1, (
msg_°
));

1114 
msg
->
ty≥
 = 
CLIENT_DOWN
;

1115 
msg
->
Àn
 = 0;

1116 
msg
->
group_id
 = group_id;

1117 
msg
->
hash_id
 = hash_id;

1119 
numbyãs
 = 
	`£nd
(
sockë_fd
, 
msg
, (
msg_°
), 0);

1120 i‡(
	`RC_NOTOK
(
numbyãs
)) {

1121 
	`ERROR
("%s %s",

1123 
	`°ªº‹
(
î∫o
));

1124  
ERR_CODE
;

1126 
	`PRINT
("%s %s for group_id: %d",

1128 
	`öë_¡ﬂ
(
addr
->
sö_addr
), 
msg
->
group_id
);

1129 
˛õ¡_°©e
 = 
CLIENT_EXIT
;

1130 
	`‰ì_msg
(
msg
);

1135 
	`DEBUG
("%s: %s", 
FUNC
, "In default");

1138  
rc
;

1139 
	}
}

1141 
	$£rvî_a˘i⁄_⁄_msg
(
sockë_id
, 
hash_id
,

1142 
msg_°
 *
msg
)

1145 i‡(!
msg
) {

1146 
	`ERROR
("%†%s", 
FUNC
, "msg is Null");

1147  
ERR_CODE
;

1150 
msg
->
ty≥
) {

1152 
REGISTER_CLIENT
:

1156 
HEARTBEAT
:

1157 
˛õ¡_íåy
[
hash_id
]->
is_a˘ive
 = 
TRUE
;

1158 
˛õ¡_íåy
[
hash_id
]->
hbót_time
 = 
	`time
(
NULL
);

1160 
	`DEBUG
("Sock_Id: %dÑecvd Hearbeat for hash_id: %d from client: %s",

1161 
sockë_id
,

1162 
hash_id
, 
	`öë_¡ﬂ
(
˛õ¡_íåy
[hash_id]->
addr
));

1165 
JOB_RESP
:

1166 
˛õ¡_íåy
[
hash_id
]->
is_exec
 = 
FALSE
;

1167 
	`°r˝y
(
˛õ¡_íåy
[
hash_id
]->
fûe_ouç
, 
msg
->
job_d©a
->
ouçt_fûe
);

1169 
	`PRINT
("JOB RESPONSEÑecvd from Client_id: %d (%s) for Job_id: %d",

1170 
hash_id
, 
	`öë_¡ﬂ
(
˛õ¡_íåy
[hash_id]->
addr
),

1171 
msg
->
job_d©a
->
job_id
);

1174 
CLIENT_DOWN
:

1175 
˛õ¡_íåy
[
hash_id
]->
is_a˘ive
 = 
FALSE
;

1176 
ªadfds
[
hash_id
].
fd
 = -1;

1177 
	`PRINT
("Client_id %d (%s) has been marked Inactive %s",

1178 
hash_id
, 
	`öë_¡ﬂ
(
˛õ¡_íåy
[hash_id]->
addr
),

1183 
	`ERROR
("%s: I¿deÁu… ca£", 
FUNC
);

1187 
	}
}

1189 * 
	$sigto°r
(
signum
)

1191 
signum
) {

1193 
SIGPIPE
:

1195 
SIGTERM
:

1197 
SIGINT
:

1199 
SIGABRT
:

1201 
SIGFPE
:

1203 
SIGSEGV
:

1208 
	}
}

1210 
	$˛ónExô
(
signum
)

1213 
	`¥ötf
("ProgømÉxôög wôh sig«l: %s\n", 
	`sigto°r
(
signum
));

1214 
	`exô
(0);

1215 
	}
}

1217 
	$˛ónExô_˛õ¡
(
signum
)

1219 
rc
 = 0;

1221 
	`PRINT
("Recõved EXIT(sig«l: %sË%s", 
	`sigto°r
(
signum
), " Informing Server");

1223 
rc
 = 
	`a˘i⁄_⁄_˛õ¡_°©e
(
comm_sock_c›y
, 
CLIENT_EXIT
,

1224 &
£rvî_addr_c›y
);

1225 i‡(
	`RC_NOTOK
(
rc
)) {

1226 
	`ERROR
("%s", "SERVER couldn't be informedábout clientÉxit");

1229 
	`¶ìp
(2);

1230 
	`exô
(0);

1231 
	}
}

1233 
	$cou¡_tŸÆ_gΩ
 () {

1234 
i
 = 0;

1235 
cou¡î
 = 0;

1236 
i
 = 0; i < 
MAX_CLIENTS
; i++) {

1237 i‡(
gΩ_d©a
[
i
] !
NULL
) {

1238 
cou¡î
++;

1241  
cou¡î
;

1242 
	}
}

1244 
	$di•œy_gΩ_öfo
 (
gΩ_id
)

1247 
gΩ_d©a_°
 *
ãmp
 = 
NULL
;

1248 
ãmp
 = 
gΩ_d©a
[
gΩ_id
];

1249 
cou¡î
 = 0;

1251 
	`PRINT
("Grou∞Id: %d c⁄èö†bñow Clõ¡_ids: ", 
gΩ_id
);

1252 
ãmp
 !
NULL
) {

1253 
	`¥ötf
(" %d ", 
ãmp
->
hash_id
);

1254 
ãmp
 =Åemp->
√xt
;

1255 
cou¡î
++;

1258 
	`¥ötf
("\nTŸÆ: %d\n", 
cou¡î
);

1259 
	`¥ötf
("=========================================================\n");

1260 
	}
}

1262 
	$cou¡_gΩ_tŸÆ
 (
gΩ_id
)

1265 
gΩ_d©a_°
 *
ãmp
 = 
NULL
;

1266 
ãmp
 = 
gΩ_d©a
[
gΩ_id
];

1267 
cou¡î
 = 0;

1269 
ãmp
 !
NULL
) {

1270 
ãmp
 =Åemp->
√xt
;

1271 
cou¡î
++;

1274  
cou¡î
;

1275 
	}
}

1277 * 
	$vîify_˛õ¡_hbót
 (*
¨g
)

1279 
i
 = 0;

1280 
¨g
 = 
NULL
;

1281 
time_t
 
cuº_time
 = 0;

1282 
job_≥nd_cou¡î
 = 0;

1283 
job_exec_°¨t
 = 0;

1285 
	`DEBUG
("%s: %s", 
FUNC
, "called");

1288 
TRUE
) {

1291 
job_≥nd_cou¡î
 = 0;

1292 
job_exec_°¨t
 = 0;

1295 i‡(
hbót_chk_°¨t
 =
FALSE
) {

1299 
cuº_time
 = 
	`time
(
NULL
);

1302 
i
 = 0; i < 
MAX_CLIENTS
; i++) {

1303 i‡(
˛õ¡_íåy
[
i
] !
NULL
 &&

1304 
˛õ¡_íåy
[
i
]->
is_a˘ive
 &&

1305 
˛õ¡_íåy
[
i
]->
hbót_time
 != 0) {

1306 i‡((
cuº_time
 - 
˛õ¡_íåy
[
i
]->
hbót_time
Ë> 
HBT_EXPTIME
) {

1307 
˛õ¡_íåy
[
i
]->
is_a˘ive
 = 
FALSE
;

1308 
	`ERROR
("Clõ¡_id: %d (%sËha†bì¿m¨ked i«˘ivê%s", 
i
,

1309 
	`öë_¡ﬂ
(
˛õ¡_íåy
[
i
]->
addr
),

1316 
i
 = 0; i < 
MAX_CLIENTS
; i++) {

1317 i‡(
˛õ¡_íåy
[
i
] !
NULL
 && clõ¡_íåy[i]->
is_∑πicù™t
) {

1320 i‡(
˛õ¡_íåy
[
i
]->
is_exec
) {

1321 
job_≥nd_cou¡î
++;

1323 
job_exec_°¨t
++;

1328 i‡(
job_≥nd_cou¡î
 =0 && 
job_exec_°¨t
) {

1330 
	`PRINT
("%s", "JOB RESPONSEÑecvd fromáll clients");

1331 
	`di•œy_job_ouçut
();

1332 
di•_c⁄s_job
 = 
TRUE
;

1336 
cuº_time
 = 
	`time
(
NULL
);

1337 i‡((
job_£¡_ts
 !0Ë&& (
cuº_time
 - job_£¡_tsË> 
JOB_FIN_TIME
) {

1339 
	`PRINT
("%s", "Wait for JOB RESPÅimerÉxpired.. DisplayingÑecvdÑesults");

1340 
	`di•œy_job_ouçut
();

1341 
di•_c⁄s_job
 = 
TRUE
;

1344 
	}
}

1346 * 
	$£nd_thªad
 (*
¨g
)

1349 
i
 = 0, 
rc
 = 0;

1350 
job_id
 = 0;

1352 
¨g
 = 
NULL
;

1353 
	`DEBUG
("%s: %s", 
FUNC
, "entered, waiting for ENTER keyÉvent");

1356 
TRUE
) {

1357 i‡(
	`gëch¨
() == '\n') {

1358 
	`DEBUG
("%s", "UserÖressed Enter, continueÅo send_thread");

1363 
TRUE
) {

1365 
i
 = 0; i < 
MAX_CLIENTS
; i++) {

1371 i‡(
˛õ¡_íåy
[
i
] !
NULL
 && clõ¡_íåy[i]->
is_a˘ive
) {

1373 i‡(
˛õ¡_íåy
[
i
]->
£rvî_ack
 =
FALSE
) {

1375 
rc
 = 
	`£nd_pkt_to_˛õ¡
(
˛õ¡_íåy
[
i
]->
sockë_id
,

1376 
ACK_FRM_SERVER
, 
i
, 
NULL
);

1377 i‡(
	`RC_NOTOK
(
rc
)) {

1386 
hbót_chk_°¨t
 = 
TRUE
;

1389 i‡(
di•_c⁄s_job
) {

1390 
	`di•œy_job_öfo
 (&
job_id
);

1392 
rc
 = 
	`£nd_job_to_gΩ
(
job_id
);

1393 i‡(
	`RC_NOTOK
(
rc
)) {

1394 
	`ERROR
("Job_id: %d %s", "sending failedÅo grp");

1396 
job_£¡_ts
 = 
	`time
(
NULL
);

1397 
di•_c⁄s_job
 = 
FALSE
;

1401  
NULL
;

1402 
	}
}

1404 * 
	$ªcv_thªad
 (*
¨g
)

1407 
rc
 = 0, 
i
 = 0;

1408 
msg_d©a_Àn
 = 0;

1409 
msg_°
 *
msg
 = 
NULL
;

1411 
¨g
 = 
NULL
;

1413 
TRUE
) {

1415 
rc
 = 
	`pﬁl
(
ªadfds
, 
tŸÆ_fd
, 1000);

1416 i‡(
	`RC_NOTOK
(
rc
)) {

1417 
	`ERROR
("%†%s", "pﬁl(ËÁûed.Éºno:", 
	`°ªº‹
(
î∫o
));

1419 } i‡(
rc
 == 0) {

1424 
i
 = 0; i < 
MAX_CLIENTS
; i++) {

1426 if(
˛õ¡_íåy
[
i
] !
NULL
 &&

1427 
˛õ¡_íåy
[
i
]->
is_a˘ive
) {

1429 i‡(
ªadfds
[
i
].
ªvíts
 & 
POLLIN
) {

1430 
	`DEBUG
("Socket_id: %d of Client Id: %d is set",

1431 
ªadfds
[
i
].
fd
,

1432 
˛õ¡_íåy
[
i
]->
hash_id
);

1433 
msg_d©a_Àn
 = 
	`gë_msg_d©a_Àn
(
˛õ¡_íåy
[
i
]->
sockë_id
);

1434 i‡(
	`RC_NOTOK
(
msg_d©a_Àn
)) {

1438 
msg
 = (
msg_°
 *)
	`ˇŒoc
(1, (msg_°)+
msg_d©a_Àn
);

1439 i‡(!
msg
) {

1440 
	`ERROR
("%s id: %d",

1442 
˛õ¡_íåy
[
i
]->
hash_id
);

1445 
rc
 = 
	`ªcv
(
˛õ¡_íåy
[
i
]->
sockë_id
, 
msg
,

1446 (
msg_°
)+
msg_d©a_Àn
, 0);

1447 i‡(
	`RC_NOTOK
(
rc
)) {

1448 
	`ERROR
("%s %d (%s)",

1450 
˛õ¡_íåy
[
i
]->
hash_id
,

1451 
	`öë_¡ﬂ
(
˛õ¡_íåy
[
i
]->
addr
));

1452 
	`‰ì_msg
(
msg
);

1456 
rc
 = 
	`£rvî_a˘i⁄_⁄_msg
(
˛õ¡_íåy
[
i
]->
sockë_id
,

1457 
i
, 
msg
);

1458 i‡(
	`RC_NOTOK
(
rc
)) {

1459 
	`ERROR
("%s: %s", 
FUNC
, "failed");

1461 
	`‰ì_msg
(
msg
);

1468  
NULL
;

1469 
	}
}

1471 * 
	$exec_job_thªad
 (*
¨g
)

1473 
˛¡_thªad_¨g_°
 *
thªad_¨g
 = (˛¡_thªad_¨g_° *)
¨g
;

1474 
msg_°
 *
msg
 = 
NULL
;

1475 
rc
 = 0, 
numbyãs
 = 0;

1477 i‡(!
thªad_¨g
) {

1478 
	`ERROR
("%†%s", 
FUNC
, "thread_arg is NULL,Éxiting");

1479  
NULL
;

1482 
rc
 = 
	`compuã_job
(
thªad_¨g
);

1483 i‡(
	`RC_ISOK
(
rc
)) {

1485 
msg
 = (
msg_°
 *Ë
	`ˇŒoc
(1, (msg_°Ë+ (
job_°
));

1486 i‡(!
msg
) {

1487 
	`ERROR
("%s %d file: %s", "calloc failedátÜine:",

1488 
__LINE__
, 
__FILE__
);

1489  
NULL
;

1492 
msg
->
ty≥
 = 
JOB_RESP
;

1493 
msg
->
Àn
 = (
job_°
);

1494 
msg
->
group_id
 = 
thªad_¨g
->group_id;

1495 
msg
->
hash_id
 = 
thªad_¨g
->
˛õ¡_id
;

1496 
msg
->
job_d©a
->
job_id
 = 
thªad_¨g
->job_id;

1497 
	`°r˝y
(
msg
->
job_d©a
->
ouçt_fûe
, 
thªad_¨g
->outpt_file);

1499 
numbyãs
 = 
	`£nd
(
comm_sock_c›y
, 
msg
,

1500 (
msg_°
)+(
job_°
), 0);

1501 i‡(
	`RC_NOTOK
(
numbyãs
)) {

1502 
	`ERROR
("%s %d %sÉrrno: %s",

1503 "Job_RESP f‹ job_id:", 
thªad_¨g
->
job_id
,

1504 "couldn'àbê£¡.", 
	`°ªº‹
(
î∫o
));

1505 
	`‰ì_msg
(
msg
);

1507 
	`PRINT
("%s %d in file: %s %s",

1509 
thªad_¨g
->
job_id
, 
msg
->
job_d©a
->
ouçt_fûe
,

1511 
	`‰ì_msg
(
msg
);

1515  
NULL
;

1516 
	}
}

1518 
boﬁ
 
	$is_˛õ¡_íåy_exi°s
(
sockaddr_ö
 *
addr
, *
ödex
)

1521 
i
 = 0; i < 
MAX_CLIENTS
; i++) {

1522 i‡(
˛õ¡_íåy
[
i
] =
NULL
) {

1526 i‡((
˛õ¡_íåy
[
i
]->
Ámûy
 =
addr
->
sö_Ámûy
) &&

1527 !
	`memcmp
(&(
˛õ¡_íåy
[
i
]->
addr
), &◊ddr->
sö_addr
),

1528 (
ö_addr
)) &&

1529 (
˛õ¡_íåy
[
i
]->
is_a˘ive
 =
FALSE
)) {

1530 *
ödex
 = 
i
;

1531  
TRUE
;

1534  
FALSE
;

1535 
	}
}

1537 
	$gë_msg_d©a_Àn
 (
sockë_id
)

1539 
rc
 = 0;

1540 
msg_°
 
dummy_msg
;

1542 
	`mem£t
(&
dummy_msg
, 0 , (
msg_°
));

1543 
rc
 = 
	`ªcv
(
sockë_id
, &
dummy_msg
,

1544 (
msg_°
), 
MSG_PEEK
);

1545 i‡(
	`RC_NOTOK
(
rc
)) {

1546 
	`ERROR
("%s: %†%s", 
FUNC
, "dummy_msgÑecv() failed.Érrno. ",

1547 
	`°ªº‹
(
î∫o
));

1548  
rc
;

1551  
dummy_msg
.
Àn
;

1552 
	}
}

1554 
	$gë_msg_d©a_Àn_n⁄_waô
 (
sockë_id
)

1557 
rc
 = 0;

1558 
msg_°
 
dummy_msg
;

1560 
	`mem£t
(&
dummy_msg
, 0 , (
msg_°
));

1561 
rc
 = 
	`ªcv
(
sockë_id
, &
dummy_msg
, (
msg_°
),

1562 
MSG_PEEK
 | 
MSG_DONTWAIT
);

1563 i‡(
	`RC_NOTOK
(
rc
)) {

1564 i‡(
î∫o
 !
EAGAIN
) {

1565 
	`ERROR
("%s: %†%s", 
FUNC
, "dummy_msgÑecv() failed.Érrno. ",

1566 
	`°ªº‹
(
î∫o
));

1572 i‡(
dummy_msg
.
ty≥
 =
MSG_RES
) {

1575  
dummy_msg
.
Àn
;

1576 
	}
}

1578 
boﬁ
 
	$is_brﬂdˇ°
 ()

1580 i‡(
›_mode
 & 
BROADCAST_ON
)

1581  
TRUE
;

1583  
FALSE
;

1584 
	}
}

1586 
boﬁ
 
	$is_mu…iˇ°
 ()

1588 i‡(
›_mode
 & 
MULTICAST_ON
)

1589  
TRUE
;

1591  
FALSE
;

1592 
	}
}

1594 
boﬁ
 
	$is_debug_mode
 ()

1596 i‡(
›_mode
 & 
DEBUG_ON
)

1597  
TRUE
;

1599  
FALSE
;

1600 
	}
}

1602 
	$joö_mˇ°_group
 (
gΩ_id_í
 
group_id
)

1604 
rc
 = 0;

1606 
˛¡_mˇ°_fd
 = 
	`sockë
(
ADDR_FAMILY
, 
SOCK_DGRAM
, 0);

1607 i‡(
	`RC_NOTOK
(
˛¡_mˇ°_fd
)) {

1608 
	`ERROR
("Mu…iˇ° sockë cª©i⁄ faûed.Éºnÿ: %s", 
	`°ªº‹
(
î∫o
));

1609  
ERR_CODE
;

1613 
rc
 = 
	`£tsock›t
(
˛¡_mˇ°_fd
, 
SOL_SOCKET
, 
SO_REUSEADDR
,

1614 &
ªu£_sock
, (reuse_sock));

1615 i‡(
	`RC_NOTOK
(
rc
)) {

1616 
	`ERROR
("FailedÅo set socketÅo REUSEADDR.Érrno: %s",

1617 
	`°ªº‹
(
î∫o
));

1621 i‡(
group_id
 =
JOB_COMPUTE
) {

1622 
mªq_globÆ
.
imr_mu…üddr
.
s_addr
 = 
	`öë_addr
(
COMPUTE_MCAST_GRP
);

1623 } i‡(
group_id
 =
JOB_ANALYSIS
) {

1624 
mªq_globÆ
.
imr_mu…üddr
.
s_addr
 = 
	`öë_addr
(
ANALYSIS_MCAST_GRP
);

1626 
mªq_globÆ
.
imr_öãrÁ˚
.
s_addr
=
	`ht⁄l
(
INADDR_ANY
);

1627 
rc
 = 
	`£tsock›t
(
˛¡_mˇ°_fd
, 
IPPROTO_IP
, 
IP_ADD_MEMBERSHIP
,

1628 &
mªq_globÆ
, (mreq_global));

1629 i‡(
	`RC_NOTOK
(
rc
)) {

1630 
	`ERROR
("FailedÅoádd socketÅo multicast grp.Érrno. :%s",

1631 
	`°ªº‹
(
î∫o
));

1632  
ERR_CODE
;

1636 
	`mem£t
(&
˛¡_mˇ°_addr
, 0, (clnt_mcast_addr));

1637 
˛¡_mˇ°_addr
.
sö_Ámûy
 = 
ADDR_FAMILY
;

1638 
˛¡_mˇ°_addr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

1639 
˛¡_mˇ°_addr
.
sö_p‹t
 = 
	`ht⁄s
(
COMP_MCAST_PORT
);

1642 
rc
 = 
	`böd
(
˛¡_mˇ°_fd
, (
sockaddr
 *Ë&
˛¡_mˇ°_addr
,

1643 (
˛¡_mˇ°_addr
));

1644 i‡(
	`RC_NOTOK
(
rc
)) {

1645 
	`ERROR
("Böd faûed f‹ mˇ° sockë.Éºno. :%s", 
	`°ªº‹
(
î∫o
));

1646  
ERR_CODE
;

1648 
	}
}

1650 
	$£rvî_joö_mˇ°_group
 (
gΩ_id_í
 
group_id
, 
sock_id
)

1652 
rc
 = 0;

1655 i‡(
group_id
 =
JOB_COMPUTE
) {

1656 
mªq_globÆ
.
imr_mu…üddr
.
s_addr
 = 
	`öë_addr
(
COMPUTE_MCAST_GRP
);

1657 } i‡(
group_id
 =
JOB_ANALYSIS
) {

1658 
mªq_globÆ
.
imr_mu…üddr
.
s_addr
 = 
	`öë_addr
(
ANALYSIS_MCAST_GRP
);

1661 
mªq_globÆ
.
imr_öãrÁ˚
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

1662 
rc
 = 
	`£tsock›t
(
sock_id
, 
IPPROTO_IP
, 
IP_ADD_MEMBERSHIP
,

1663 &
mªq_globÆ
, (mreq_global));

1664 i‡(
	`RC_NOTOK
(
rc
)) {

1665 
	`ERROR
("FailedÅoádd socketÅo multicast grp.Érrno. :%s",

1666 
	`°ªº‹
(
î∫o
));

1667  
ERR_CODE
;

1669 
	}
}

1671 
	$Àave_mˇ°_group
 (
gΩ_id_í
 
group_id
)

1673 
rc
 = 0;

1674 
	`£tsock›t
 (
˛¡_mˇ°_fd
, 
IPPROTO_IP
, 
IP_DROP_MEMBERSHIP
,

1675 &
mªq_globÆ
, (mreq_global));

1676 i‡(
	`RC_NOTOK
(
rc
)) {

1677 
	`ERROR
("FailedÅoÑemove socket from multicast grp.Érrno: %s",

1678 
	`°ªº‹
(
î∫o
));

1679  
ERR_CODE
;

1681  
rc
;

1682 
	}
}

1684 
	$£rvî_Àave_mˇ°_group
 (
gΩ_id_í
 
group_id
, 
sock_id
)

1686 
rc
 = 0;

1688 i‡(
group_id
 =
JOB_COMPUTE
) {

1689 
mªq_globÆ
.
imr_mu…üddr
.
s_addr
 = 
	`öë_addr
(
COMPUTE_MCAST_GRP
);

1690 } i‡(
group_id
 =
JOB_ANALYSIS
) {

1691 
mªq_globÆ
.
imr_mu…üddr
.
s_addr
 = 
	`öë_addr
(
ANALYSIS_MCAST_GRP
);

1694 
	`£tsock›t
(
sock_id
, 
IPPROTO_IP
, 
IP_DROP_MEMBERSHIP
,

1695 &
mªq_globÆ
, (mreq_global));

1696 i‡(
	`RC_NOTOK
(
rc
)) {

1697 
	`ERROR
("FailedÅoÑemove socket from multicast grp.Érrno: %s",

1698 
	`°ªº‹
(
î∫o
));

1699  
ERR_CODE
;

1701  
rc
;

1702 
	}
}

1704 
	$di•_˛õ¡_hñp_msg
()

1707 
	`Ârötf
(
°dout
, " usage: client [-h] [-d] [-a servr_addr] [-pÖortnum]\n");

1708 
	`Ârötf
(
°dout
, "\toption h: help on usage\n");

1709 
	`Ârötf
(
°dout
, "\toption d:Énable debug messages\n");

1710 
	`Ârötf
(
°dout
, "\toptionÖ:Åo override defaultÖortÇumber\n");

1711 
	`Ârötf
(
°dout
, "\toptioná: specify serveráddrÅo connect\n");

1712 
	`Ârötf
(
°dout
, "\toption g: specify groupÅo which client wantsÅo belong\n");

1713 
	}
}

1715 
	$di•_£rvî_hñp_msg
()

1718 
	`Ârötf
(
°dout
, " usage: server [-h] [-d] [-pÖortnum]\n");

1719 
	`Ârötf
(
°dout
, "\toption h: help on usage\n");

1720 
	`Ârötf
(
°dout
, "\toption d:Énable debug messages\n");

1721 
	`Ârötf
(
°dout
, "\toption m:Énable multicast mode\n");

1722 
	`Ârötf
(
°dout
, "\toptionÖ:Åo override defaultÖortÇumber\n");

1723 
	`Ârötf
(
°dout
, "\toption b:Énable broadcast modeánd specify subnetáddr whereÅo bcast\n");

1724 
	}
}

	@src/server.c

6 
	~<°dio.h
>

7 
	~<±hªad.h
>

8 
	~<°dboﬁ.h
>

9 
	~<°rög.h
>

10 
	~<sys/sockë.h
>

11 
	~<√töë/ö.h
>

12 
	~<¨∑/öë.h
>

13 
	~<√tdb.h
>

14 
	~<î∫o.h
>

15 
	~<sig«l.h
>

16 
	~<°dlib.h
>

17 
	~<uni°d.h
>

18 
	~<gë›t.h
>

19 
	~<±hªad.h
>

20 
	~<time.h
>

21 
	~<ncur£s.h
>

22 
	~<sys/pﬁl.h
>

23 
	~"˛õ¡_£rvî.h
"

25 
pﬁlfd
 
ªadfds
[
MAX_CLIENTS
];

27 
	$maö
(
¨gc
, *
¨gv
[])

30 
brﬂdˇ°_fd
 = 0;

31 
ma°î_sockë
 = 0, 
chûd_sockë
 = 0;

32 
comm_p‹t
 = 0, 
p‹t_num
 = 0;

33 
sockaddr_ö
 
my_addr
;

34 
sockaddr_ö
 
brﬂdˇ°_addr
;

35 
sockaddr_ö
 
˛õ¡_addr
;

36 
msg_°
 *
msg
 = 
NULL
;

37 
msg_°
 
dummy_msg
;

38 
›ti⁄
 = 0;

39 
ªu£_sock
 = 1;

40 
addr_Àn
 = 0;

41 
ödex
 = 0;

42 
rc
 = 0;

43 
±hªad_t
 
£nd_t
;

44 
±hªad_t
 
ªcv_t
;

45 
±hªad_t
 
vîify_thªad
;

46 
±hªad_©å_t
 
©å
;

47 
i
 = 0;

48 
brﬂdˇ°
 = 1;

49 
numbyãs
 = 0;

50 
num_c⁄√˘i⁄
 = 0;

53 
	`mem£t
(&
˛õ¡_addr
, 0, (client_addr));

54 
	`mem£t
(&
brﬂdˇ°_addr
, 0, (broadcast_addr));

55 
	`mem£t
(&
my_addr
, 0, (my_addr));

56 
	`mem£t
(&
dummy_msg
, 0, (
msg_°
));

58 
i
 = 0; i < 
MAX_CLIENTS
; i++) {

59 
gΩ_d©a
[
i
] = 
NULL
;

60 
˛õ¡_íåy
[
i
] = 
NULL
;

63  (
›ti⁄
 = 
	`gë›t
(
¨gc
, 
¨gv
, "hdam:p:b:")) != -1) {

65 
›ti⁄
) {

67 
	`ERROR
("%s", "Wrongárguments specified.."

69 
	`di•_£rvî_hñp_msg
();

70 
EXIT
;

75 
	`di•_£rvî_hñp_msg
();

76 
EXIT
;

81 
	`PRINT
("%s", "Debugging mode isÇowÉnabled\n");

82 
›_mode
 |
DEBUG_ON
;

87 
	`PRINT
("%s", "Multicast mode isÇowÉnabled\n");

88 
›_mode
 |
MULTICAST_ON
;

93 
p‹t_num
 = 
	`©oi
(
›èrg
);

94 
	`PRINT
("P‹ànumbî %d wû»bêu£d f‹ communiˇti⁄", 
p‹t_num
);

99 
	`PRINT
("%†%s", "brﬂdˇ°áddªs†tÿbêu£d is:", 
›èrg
);

100 i‡–(
	`öë_±⁄
(
ADDR_FAMILY
, 
›èrg
,

101 &(
brﬂdˇ°_addr
.
sö_addr
))) == 0) {

102 
	`ERROR
("brﬂdˇ°áddªs†%†%s", 
›èrg
,

104 
	`PRINT
("%s", "using default 255.255.255.255 "

106 
	`öë_±⁄
(
ADDR_FAMILY
, "255.255.255.255",

107 &(
brﬂdˇ°_addr
.
sö_addr
));

109 
›_mode
 |
BROADCAST_ON
;

114 i‡((
¨gc
 =1Ë|| !
p‹t_num
) {

115 
	`PRINT
("%s", "NoneárgsÖassed, using default values");

116 
p‹t_num
 = 
	`gë_£rvî_p‹t_‰m_fûe
();

117 
	`DEBUG
("%†%d", "P‹ànumb∏‰om fûêis:", 
p‹t_num
);

120 
	`öë_±⁄
(
ADDR_FAMILY
, "255.255.255.255", &(
brﬂdˇ°_addr
.
sö_addr
));

123 
comm_p‹t
 = 
p‹t_num
+1;

126 
	`dñ_fûe_if_exi°
("logging.txt");

127 
log_Â
 = 
	`f›í
("logging.txt", "a+");

128 i‡(!
log_Â
) {

129 
	`Ârötf
(
°dîr
, "Err...log_fp forÜogging.txt is NULL,"

134 
	`£t_sig«l_h™dÀr
(
˛ónExô
);

136 i‡(
	`is_brﬂdˇ°
()) {

141 
brﬂdˇ°_fd
 = 
	`sockë
(
ADDR_FAMILY
, 
SOCK_DGRAM
, 0);

142 i‡(
	`RC_NOTOK
(
brﬂdˇ°_fd
)) {

143 
	`ERROR
("%sÉrrno: %s",

144 "whûê¸ótög sockë.", 
	`°ªº‹
(
î∫o
));

145 
EXIT
;

149 
brﬂdˇ°_addr
.
sö_Ámûy
 = 
ADDR_FAMILY
;

150 
brﬂdˇ°_addr
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t_num
);

153 i‡(
	`£tsock›t
(
brﬂdˇ°_fd
, 
SOL_SOCKET
, 
SO_BROADCAST
,

154 &
brﬂdˇ°
, (broadcast)) == -1) {

155 
	`ERROR
("%†î∫o: %s", "îr‹ sëtög BROADCAST o±i⁄ f‹ UDP sockë", 
	`°ªº‹
(
î∫o
));

159 
msg
 = 
	`ˇŒoc
(1, (
msg_°
));

160 i‡(!
msg
) {

161 
	`ERROR
("%s", "calloc failed for msg_st for SERVER_UP msg");

164 
msg
->
ty≥
 = 
SERVER_UP
;

165 
msg
->
Àn
 = 0;

166 
msg
->
group_id
 = 0;

167 
msg
->
hash_id
 = 0;

169 
numbyãs
 = 
	`£ndto
(
brﬂdˇ°_fd
, 
msg
, (
msg_°
), 0,

170 (
sockaddr
 *Ë&
brﬂdˇ°_addr
,

171 (
brﬂdˇ°_addr
));

172 i‡(
	`RC_NOTOK
(
numbyãs
)) {

173 
	`ERROR
("%sÉrrno: %s", "sending BROADCAST message failed.",

174 
	`°ªº‹
(
î∫o
));

175 
	`‰ì_msg
(
msg
);

177 
	`PRINT
("%s %s", "Server Up.. Broadcast msg sentÅo subnet:",

178 
	`öë_¡ﬂ
(
brﬂdˇ°_addr
.
sö_addr
));

179 
	`‰ì_msg
(
msg
);

184 
ma°î_sockë
 = 
	`sockë
(
ADDR_FAMILY
, 
SOCK_DGRAM
, 0);

185 i‡(
	`RC_NOTOK
(
ma°î_sockë
)) {

186 
	`ERROR
("%sÉrrno: %s",

187 "whûê¸ótög ma°î sockë.", 
	`°ªº‹
(
î∫o
));

188 
EXIT
;

192 
	`£tsock›t
(
ma°î_sockë
, 
SOL_SOCKET
, 
SO_REUSEADDR
,

193 &
ªu£_sock
, (reuse_sock));

196 
my_addr
.
sö_Ámûy
 = 
ADDR_FAMILY
;

197 
my_addr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

198 
my_addr
.
sö_p‹t
 = 
	`ht⁄s
(
comm_p‹t
);

201 
i
=1; i < 
JOB_MAX
, i++) {

202 
rc
 = 
	`£rvî_joö_mˇ°_group
(
i
, 
ma°î_sockë
);

203 i‡(
	`RC_NOTOK
(
rc
)) {

204 
	`ERROR
("Server could'nt Join Multicast group for grp_id: %d",

205 
JOB_COMPUTE
);

210 
	`mem£t
(&
my_addr
, 0, (my_addr));

211 
my_addr
.
sö_Ámûy
 = 
ADDR_FAMILY
;

212 
my_addr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

213 
my_addr
.
sö_p‹t
 = 
	`ht⁄s
(
COMP_MCAST_PORT
);

215 i‡(
	`böd
(
ma°î_sockë
, (
sockaddr
*)&
my_addr
,

216 (
sockaddr
)) == -1) {

217 
	`ERROR
("%s %s", "Bind failure for mcast master_socket.Érrno.:",

218 
	`°ªº‹
(
î∫o
));

222 
rc
 = 
	`±hªad_©å_öô
(&
©å
);

223 i‡(
rc
) {

224 
	`ERROR
("%s %s", "Thread'sáttribute init failed.Érrno. :",

225 
	`°ªº‹
(
î∫o
));

228 
rc
 = 
	`±hªad_©å_£tdëach°©e
(&
©å
,

229 
PTHREAD_CREATE_DETACHED
);

230 i‡(
rc
) {

231 
	`ERROR
("%sÉrrno.: %s", "Thread coudnt be setás DETACHEDÅhread",

232 
	`°ªº‹
(
î∫o
));

236 
rc
 = 
	`±hªad_¸óã
(&
vîify_thªad
, &
©å
,

237 
vîify_˛õ¡_hbót
, 
NULL
);

238 i‡(
rc
) {

239 
	`ERROR
("verify_client_hbeatÅhread creation failedÉrrno. :%s",

240 
	`°ªº‹
(
î∫o
));

244 
rc
 = 
	`±hªad_¸óã
(&
£nd_t
, &
©å
,

245 
£nd_thªad
, 
NULL
);

246 i‡(
rc
) {

247 
	`ERROR
("£nd_thªad cª©i⁄ faûedÉºno. :%s", 
	`°ªº‹
(
î∫o
));

251 
rc
 = 
	`±hªad_¸óã
(&
ªcv_t
, &
©å
,

252 
ªcv_thªad
, 
NULL
);

253 i‡(
rc
) {

254 
	`ERROR
("recv_thread creation failedÉrrno. :%s",

255 
	`°ªº‹
(
î∫o
));

261 
rc
 = 
	`±hªad_©å_de°roy
(&
©å
);

262 i‡(
rc
) {

263 
	`ERROR
("%s %s", "attr ofÅhread cudn't be destroyed",

264 
	`°ªº‹
(
î∫o
));

268 
i
 = 0;

270 
TRUE
) {

273 
msg
 = 
	`ˇŒoc
(1, (
msg_°
));

274 i‡(!
msg
) {

275 
	`ERROR
("%s: %†%d", 
FUNC
, "msgálloc failureátÜine",

276 
__LINE__
);

280 
addr_Àn
 = (
sockaddr
);

281 
	`mem£t
(&
˛õ¡_addr
, 0, (client_addr));

283 
numbyãs
 = 
	`ªcv‰om
(
ma°î_sockë
, 
msg
, (
msg_°
), 0,

284 (
sockaddr
 *)&
˛õ¡_addr
,

285 (
sockÀn_t
 *)&
addr_Àn
);

287 i‡(
	`RC_NOTOK
(
numbyãs
)) {

288 
	`ERROR
("%s %s", "Client RegistrationÑequest failed.Érrno. ",

289 
	`°ªº‹
(
î∫o
));

296 i‡(
	`is_˛õ¡_íåy_exi°s
(&
˛õ¡_addr
, &
ödex
)) {

298 
	`upd_˛õ¡_db_öfo
(
ödex
, 
chûd_sockë
,

299 
˛õ¡_addr
.
sö_p‹t
);

300 
	`‰ì_msg
(
msg
);

303 
i
 = 
num_c⁄√˘i⁄
;

304 
num_c⁄√˘i⁄
++;

308 i‡(
num_c⁄√˘i⁄
 <
MAX_CLIENTS
) {

310 
	`PRINT
("%†%†%s", 
	`gë_msg_ty≥_°r
(
msg
->
ty≥
),

312 
	`öë_¡ﬂ
(
˛õ¡_addr
.
sö_addr
));

315 
	`add_˛õ¡_db_öfo
(
i
, 
chûd_sockë
, 
msg
->
group_id
, &
˛õ¡_addr
);

318 
	`‰ì_msg
(
msg
);

321 
rc
 = 
	`add_hash_id_to_gΩ
(
i
, 
˛õ¡_íåy
[i]->
group_id
,

322 &(
gΩ_d©a
[
˛õ¡_íåy
[
i
]->
group_id
]));

323 i‡(
	`RC_NOTOK
(
rc
)) {

324 
	`ERROR
("%s", "malloc failure whileádding hash_idÅo grp");

328 
	`ALERT
("%s", "Press EnterÅoÖroceedÅo JobÉxecution");

330 
	`ALERT
("%s", "Server hasÑeached max connectionsÖermitted");

335 
	}
}

	@src/test_name.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<uni°d.h
>

4 
	~<°dboﬁ.h
>

5 
	~<î∫o.h
>

6 
	~<°rög.h
>

7 
	~<sys/ty≥s.h
>

8 
	~<sys/sockë.h
>

9 
	~<√töë/ö.h
>

10 
	~<sig«l.h
>

11 
	~<°dlib.h
>

12 
	~<ªgex.h
>

14 
	g°r
[55];

15 
	$gë_£rvî_addr
(
FILE
 *
Â
, *
buf
) {

16 
addr_°r
[100];

17 
p‹t_°r
[100];

18 *
ödex_°r
;

19 
ödex_addr
 = 0;

21 
	`fgës
(
addr_°r
, 100, 
Â
);

22 
	`fgës
(
p‹t_°r
, 100, 
Â
);

24 
	`¥ötf
("Fú° Löe: %s", 
addr_°r
);

25 
	`¥ötf
("Se˙d Löe: %s\n", 
p‹t_°r
);

27 i‡–
	`°r°r
(
addr_°r
, "£rvî_addr"Ë!
NULL
) {

28 i‡((
ödex_°r
 = 
	`°r°r
(
addr_°r
, "=")Ë=
NULL
) {

29 
	`¥ötf
("address StringÇot found\n");

32 
	`¥ötf
("Error: server_addrÇot found");

35 
	`¥ötf
("addªs†o‡£rvî: %s", 
ödex_°r
+1);

36 
	}
}

38 
	$maö
(
¨gc
, **
¨gv
)

41 
FILE
 *
Â
 = 
NULL
;

42 
Â
 = 
	`f›í
("conf.txt", "a+");

43 
	`gë_£rvî_addr
(
Â
, 
°r
);

44 
	}
}

	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 
gë›t
 ();

158 #i‚de‡
__√ed_gë›t


159 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
,

161 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

162 
__THROW
;

163 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
,

165 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

166 
__THROW
;

170 #ifdef 
__˝lu•lus


175 #unde‡
__√ed_gë›t


	@/usr/include/ncurses.h

37 #i‚de‡
__NCURSES_H


38 
	#__NCURSES_H


	)

40 
	#CURSES
 1

	)

41 
	#CURSES_H
 1

	)

50 
	#NCURSES_VERSION_MAJOR
 5

	)

51 
	#NCURSES_VERSION_MINOR
 5

	)

52 
	#NCURSES_VERSION_PATCH
 20060715

	)

55 #unde‡
NCURSES_VERSION


56 
	#NCURSES_VERSION
 "5.5"

	)

61 
	#NCURSES_MOUSE_VERSION
 1

	)

66 
	~<ncur£s/ncur£s_dŒ.h
>

71 #i‚de‡
NCURSES_ENABLE_STDBOOL_H


72 
	#NCURSES_ENABLE_STDBOOL_H
 1

	)

79 #i‡
deföed
(
NCURSES_NOMACROS
Ë&& !deföed(
NCURSES_ATTR_T
)

80 
	#NCURSES_ATTR_T
 
©å_t


	)

83 #i‚de‡
NCURSES_ATTR_T


84 
	#NCURSES_ATTR_T
 

	)

91 #unde‡
NCURSES_CONST


92 
	#NCURSES_CONST


	)

94 #i‚de‡
NCURSES_INLINE


95 
	#NCURSES_INLINE
 
ölöe


	)

101 #unde‡
NCURSES_COLOR_T


102 
	#NCURSES_COLOR_T
 

	)

107 #unde‡
NCURSES_SIZE_T


108 
	#NCURSES_SIZE_T
 

	)

115 #unde‡
NCURSES_CH_T


116 
	#NCURSES_CH_T
 
chty≥


	)

118 #i‡0 && 
deföed
(
_LP64
)

119 
	tchty≥
;

120 
	tmmask_t
;

122 
	tchty≥
;

123 
	tmmask_t
;

126 
	~<°dio.h
>

127 
	~<ncur£s/un˘æ.h
>

128 
	~<°d¨g.h
>

129 #ifde‡
_XOPEN_SOURCE_EXTENDED


130 
	~<°ddef.h
>

145 #unde‡
TRUE


146 
	#TRUE
 1

	)

148 #unde‡
FALSE


149 
	#FALSE
 0

	)

151 
	tNCURSES_BOOL
;

153 #i‡
deföed
(
__˝lu•lus
)

156 
	#NCURSES_BOOL
 
boﬁ


	)

160 #i‡
NCURSES_ENABLE_STDBOOL_H


161 
	~<°dboﬁ.h
>

163 
	#NCURSES_BOOL
 
boﬁ


	)

166 #unde‡
boﬁ


167 
	#boﬁ
 
NCURSES_BOOL


	)

172 #ifde‡
__˝lu•lus


174 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë
°©ic_ˇ°
<ty≥>(vÆue)

	)

176 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë—y≥)(vÆue)

	)

183 
	#WA_ATTRIBUTES
 
A_ATTRIBUTES


	)

184 
	#WA_NORMAL
 
A_NORMAL


	)

185 
	#WA_STANDOUT
 
A_STANDOUT


	)

186 
	#WA_UNDERLINE
 
A_UNDERLINE


	)

187 
	#WA_REVERSE
 
A_REVERSE


	)

188 
	#WA_BLINK
 
A_BLINK


	)

189 
	#WA_DIM
 
A_DIM


	)

190 
	#WA_BOLD
 
A_BOLD


	)

191 
	#WA_ALTCHARSET
 
A_ALTCHARSET


	)

192 
	#WA_INVIS
 
A_INVIS


	)

193 
	#WA_PROTECT
 
A_PROTECT


	)

194 
	#WA_HORIZONTAL
 
A_HORIZONTAL


	)

195 
	#WA_LEFT
 
A_LEFT


	)

196 
	#WA_LOW
 
A_LOW


	)

197 
	#WA_RIGHT
 
A_RIGHT


	)

198 
	#WA_TOP
 
A_TOP


	)

199 
	#WA_VERTICAL
 
A_VERTICAL


	)

202 
NCURSES_EXPORT_VAR
(Ë
COLORS
;

203 
NCURSES_EXPORT_VAR
(Ë
COLOR_PAIRS
;

205 
	#COLOR_BLACK
 0

	)

206 
	#COLOR_RED
 1

	)

207 
	#COLOR_GREEN
 2

	)

208 
	#COLOR_YELLOW
 3

	)

209 
	#COLOR_BLUE
 4

	)

210 
	#COLOR_MAGENTA
 5

	)

211 
	#COLOR_CYAN
 6

	)

212 
	#COLOR_WHITE
 7

	)

217 
NCURSES_EXPORT_VAR
(
chty≥
*Ë
_nc_acs_m≠
();

218 
	#acs_m≠
 (
	`_nc_acs_m≠
())

	)

220 
NCURSES_EXPORT_VAR
(
chty≥
Ë
acs_m≠
[];

223 
	#NCURSES_ACS
(
c
Ë(
acs_m≠
[
	`NCURSES_CAST
(,c)])

	)

226 
	#ACS_ULCORNER
 
	`NCURSES_ACS
('l'Ë

	)

227 
	#ACS_LLCORNER
 
	`NCURSES_ACS
('m'Ë

	)

228 
	#ACS_URCORNER
 
	`NCURSES_ACS
('k'Ë

	)

229 
	#ACS_LRCORNER
 
	`NCURSES_ACS
('j'Ë

	)

230 
	#ACS_LTEE
 
	`NCURSES_ACS
('t'Ë

	)

231 
	#ACS_RTEE
 
	`NCURSES_ACS
('u'Ë

	)

232 
	#ACS_BTEE
 
	`NCURSES_ACS
('v'Ë

	)

233 
	#ACS_TTEE
 
	`NCURSES_ACS
('w'Ë

	)

234 
	#ACS_HLINE
 
	`NCURSES_ACS
('q'Ë

	)

235 
	#ACS_VLINE
 
	`NCURSES_ACS
('x'Ë

	)

236 
	#ACS_PLUS
 
	`NCURSES_ACS
('n'Ë

	)

237 
	#ACS_S1
 
	`NCURSES_ACS
('o'Ë

	)

238 
	#ACS_S9
 
	`NCURSES_ACS
('s'Ë

	)

239 
	#ACS_DIAMOND
 
	`NCURSES_ACS
('`'Ë

	)

240 
	#ACS_CKBOARD
 
	`NCURSES_ACS
('a'Ë

	)

241 
	#ACS_DEGREE
 
	`NCURSES_ACS
('f'Ë

	)

242 
	#ACS_PLMINUS
 
	`NCURSES_ACS
('g'Ë

	)

243 
	#ACS_BULLET
 
	`NCURSES_ACS
('~'Ë

	)

245 
	#ACS_LARROW
 
	`NCURSES_ACS
(','Ë

	)

246 
	#ACS_RARROW
 
	`NCURSES_ACS
('+'Ë

	)

247 
	#ACS_DARROW
 
	`NCURSES_ACS
('.'Ë

	)

248 
	#ACS_UARROW
 
	`NCURSES_ACS
('-'Ë

	)

249 
	#ACS_BOARD
 
	`NCURSES_ACS
('h'Ë

	)

250 
	#ACS_LANTERN
 
	`NCURSES_ACS
('i'Ë

	)

251 
	#ACS_BLOCK
 
	`NCURSES_ACS
('0'Ë

	)

257 
	#ACS_S3
 
	`NCURSES_ACS
('p'Ë

	)

258 
	#ACS_S7
 
	`NCURSES_ACS
('r'Ë

	)

259 
	#ACS_LEQUAL
 
	`NCURSES_ACS
('y'Ë

	)

260 
	#ACS_GEQUAL
 
	`NCURSES_ACS
('z'Ë

	)

261 
	#ACS_PI
 
	`NCURSES_ACS
('{'Ë

	)

262 
	#ACS_NEQUAL
 
	`NCURSES_ACS
('|'Ë

	)

263 
	#ACS_STERLING
 
	`NCURSES_ACS
('}'Ë

	)

271 
	#ACS_BSSB
 
ACS_ULCORNER


	)

272 
	#ACS_SSBB
 
ACS_LLCORNER


	)

273 
	#ACS_BBSS
 
ACS_URCORNER


	)

274 
	#ACS_SBBS
 
ACS_LRCORNER


	)

275 
	#ACS_SBSS
 
ACS_RTEE


	)

276 
	#ACS_SSSB
 
ACS_LTEE


	)

277 
	#ACS_SSBS
 
ACS_BTEE


	)

278 
	#ACS_BSSS
 
ACS_TTEE


	)

279 
	#ACS_BSBS
 
ACS_HLINE


	)

280 
	#ACS_SBSB
 
ACS_VLINE


	)

281 
	#ACS_SSSS
 
ACS_PLUS


	)

283 #unde‡
ERR


284 
	#ERR
 (-1)

	)

286 #unde‡
OK


287 
	#OK
 (0)

	)

290 
	#_SUBWIN
 0x01

	)

291 
	#_ENDLINE
 0x02

	)

292 
	#_FULLWIN
 0x04

	)

293 
	#_SCROLLWIN
 0x08

	)

294 
	#_ISPAD
 0x10

	)

295 
	#_HASMOVED
 0x20

	)

296 
	#_WRAPPED
 0x40

	)

302 
	#_NOCHANGE
 -1

	)

308 
	#_NEWINDEX
 -1

	)

310 
s¸ìn
 
	tSCREEN
;

311 
_wö_°
 
	tWINDOW
;

313 
chty≥
 
	t©å_t
;

315 #ifde‡
_XOPEN_SOURCE_EXTENDED


318 #ifde‡
mbÀn


319 #unde‡
mbÀn


321 
	~<libutf8.h
>

325 
	~<wch¨.h
>

329 
	twch¨_t
;

333 
	twöt_t
;

336 
	#CCHARW_MAX
 5

	)

339 
©å_t
 
	g©å
;

340 
wch¨_t
 
	gch¨s
[
CCHARW_MAX
];

342 
	gext_cﬁ‹
;

345 
	tcch¨_t
;

349 
	gld©
;

351 
	s_wö_°


353 
NCURSES_SIZE_T
 
	g_cury
, 
	g_curx
;

356 
NCURSES_SIZE_T
 
	g_maxy
, 
	g_maxx
;

357 
NCURSES_SIZE_T
 
	g_begy
, 
	g_begx
;

359 
	g_Êags
;

362 
©å_t
 
	g_©ås
;

363 
chty≥
 
	g_bkgd
;

366 
boﬁ
 
	g_nŸimeout
;

367 
boﬁ
 
	g_˛ór
;

368 
boﬁ
 
	g_Àaveok
;

369 
boﬁ
 
	g_s¸ﬁl
;

370 
boﬁ
 
	g_idlok
;

371 
boﬁ
 
	g_idcok
;

372 
boﬁ
 
	g_immed
;

373 
boﬁ
 
	g_sync
;

374 
boﬁ
 
	g_u£_key∑d
;

375 
	g_dñay
;

377 
ld©
 *
	g_löe
;

380 
NCURSES_SIZE_T
 
	g_ªgt›
;

381 
NCURSES_SIZE_T
 
	g_ªgbŸtom
;

384 
	g_∑rx
;

385 
	g_∑ry
;

386 
WINDOW
 *
	g_∑ª¡
;

389 
	spd©


391 
NCURSES_SIZE_T
 
	g_∑d_y
, 
	g_∑d_x
;

392 
NCURSES_SIZE_T
 
	g_∑d_t›
, 
	g_∑d_À·
;

393 
NCURSES_SIZE_T
 
	g_∑d_bŸtom
, 
	g_∑d_right
;

394 } 
	g_∑d
;

396 
NCURSES_SIZE_T
 
	g_yoff£t
;

398 #ifde‡
_XOPEN_SOURCE_EXTENDED


399 
cch¨_t
 
	g_bkg∫d
;

401 
	g_cﬁ‹
;

406 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
°ds¸
;

407 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
curs¸
;

408 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
√ws¸
;

410 
NCURSES_EXPORT_VAR
(Ë
LINES
;

411 
NCURSES_EXPORT_VAR
(Ë
COLS
;

412 
NCURSES_EXPORT_VAR
(Ë
TABSIZE
;

417 
NCURSES_EXPORT_VAR
(Ë
ESCDELAY
;

419 
NCURSES_EXPORT_VAR
(Ë
âyty≥
[];

425 
NCURSES_EXPORT
(
boﬁ
Ë
is_ãrm_ªsized
 (, );

426 
NCURSES_EXPORT
(*Ë
keybound
 (, );

427 
NCURSES_EXPORT
(c⁄° *Ë
cur£s_vîsi⁄
 ();

428 
NCURSES_EXPORT
(Ë
assume_deÁu…_cﬁ‹s
 (, );

429 
NCURSES_EXPORT
(Ë
deföe_key
 (const *, );

430 
NCURSES_EXPORT
(Ë
key_deföed
 (const *);

431 
NCURSES_EXPORT
(Ë
keyok
 (, 
boﬁ
);

432 
NCURSES_EXPORT
(Ë
ªsize_ãrm
 (, );

433 
NCURSES_EXPORT
(Ë
ªsizëîm
 (, );

434 
NCURSES_EXPORT
(Ë
u£_deÁu…_cﬁ‹s
 ();

435 
NCURSES_EXPORT
(Ë
u£_exãnded_«mes
 (
boﬁ
);

436 
NCURSES_EXPORT
(Ë
u£_Àgacy_codög
 ();

437 
NCURSES_EXPORT
(Ë
wªsize
 (
WINDOW
 *, , );

438 
NCURSES_EXPORT
(Ë
nofûãr
();

440 
	#cur£s_vîsi⁄
(Ë
NCURSES_VERSION


	)

447 #ifde‡
NCURSES_WGETCH_EVENTS


448 #i‡!
deföed
(
__BEOS__
)

449 
	#NCURSES_EVENT_VERSION
 1

	)

455 
	#_NC_EVENT_TIMEOUT_MSEC
 1

	)

456 
	#_NC_EVENT_FILE
 2

	)

457 
	#_NC_EVENT_FILE_READABLE
 2

	)

459 
	#_NC_EVENT_FILE_WRITABLE
 4

	)

460 
	#_NC_EVENT_FILE_EXCEPTION
 8

	)

465 
	gty≥
;

468 
	gtimeout_m£c
;

471 
	gÊags
;

472 
	gfd
;

473 
	gªsu…
;

474 } 
	g„v
;

475 } 
	gd©a
;

476 } 
	t_nc_evít
;

480 
	gcou¡
;

481 
	gªsu…_Êags
;

482 
_nc_evít
 *
	gevíts
[1];

483 } 
	t_nc_evíéi°
;

485 
NCURSES_EXPORT
(Ë
wgëch_evíts
(
WINDOW
 *, 
_nc_evíéi°
 *);

486 
NCURSES_EXPORT
(Ë
wgën°r_evíts
(
WINDOW
 *,*,,
_nc_evíéi°
 *);

498 #i‡!(
deföed
(
__GNUC__
Ë|| deföed(
__GNUG__
Ë|| deföed(
__©åibuã__
))

499 
	#__©åibuã__
(
p
Ë

	)

506 #i‚de‡
GCC_PRINTFLIKE


507 #i‡
deföed
(
GCC_PRINTF
Ë&& !deföed(
¥ötf
)

508 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,fmt,v¨)))

	)

510 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë

	)

514 #i‚de‡
GCC_SCANFLIKE


515 #i‡
deföed
(
GCC_SCANF
Ë&& !deföed(
sˇnf
)

516 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
sˇnf
,fmt,v¨)))

	)

518 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë

	)

522 #i‚def 
GCC_NORETURN


523 
	#GCC_NORETURN


	)

526 #i‚def 
GCC_UNUSED


527 
	#GCC_UNUSED


	)

537 
NCURSES_EXPORT
(Ë
addch
 (c⁄° 
chty≥
);

538 
NCURSES_EXPORT
(Ë
addchn°r
 (c⁄° 
chty≥
 *, );

539 
NCURSES_EXPORT
(Ë
addch°r
 (c⁄° 
chty≥
 *);

540 
NCURSES_EXPORT
(Ë
addn°r
 (const *, );

541 
NCURSES_EXPORT
(Ë
add°r
 (const *);

542 
NCURSES_EXPORT
(Ë
©åoff
 (
NCURSES_ATTR_T
);

543 
NCURSES_EXPORT
(Ë
©å⁄
 (
NCURSES_ATTR_T
);

544 
NCURSES_EXPORT
(Ë
©å£t
 (
NCURSES_ATTR_T
);

545 
NCURSES_EXPORT
(Ë
©å_gë
 (
©å_t
 *, *, *);

546 
NCURSES_EXPORT
(Ë
©å_off
 (
©å_t
, *);

547 
NCURSES_EXPORT
(Ë
©å_⁄
 (
©å_t
, *);

548 
NCURSES_EXPORT
(Ë
©å_£t
 (
©å_t
, , *);

549 
NCURSES_EXPORT
(Ë
baudøã
 ();

550 
NCURSES_EXPORT
(Ë
bìp
 ();

551 
NCURSES_EXPORT
(Ë
bkgd
 (
chty≥
);

552 
NCURSES_EXPORT
(Ë
bkgd£t
 (
chty≥
);

553 
NCURSES_EXPORT
(Ë
b‹dî
 (
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

554 
NCURSES_EXPORT
(Ë
box
 (
WINDOW
 *, 
chty≥
, chtype);

555 
NCURSES_EXPORT
(
boﬁ
Ë
ˇn_ch™ge_cﬁ‹
 ();

556 
NCURSES_EXPORT
(Ë
cbªak
 ();

557 
NCURSES_EXPORT
(Ë
chg©
 (, 
©å_t
, , const *);

558 
NCURSES_EXPORT
(Ë
˛ór
 ();

559 
NCURSES_EXPORT
(Ë
˛órok
 (
WINDOW
 *,
boﬁ
);

560 
NCURSES_EXPORT
(Ë
˛πobŸ
 ();

561 
NCURSES_EXPORT
(Ë
˛π€ﬁ
 ();

562 
NCURSES_EXPORT
(Ë
cﬁ‹_c⁄ã¡
 (,*,*,*);

563 
NCURSES_EXPORT
(Ë
cﬁ‹_£t
 (,*);

564 
NCURSES_EXPORT
(Ë
COLOR_PAIR
 ();

565 
NCURSES_EXPORT
(Ë
c›ywö
 (c⁄° 
WINDOW
*,WINDOW*,,,,,,,);

566 
NCURSES_EXPORT
(Ë
curs_£t
 ();

567 
NCURSES_EXPORT
(Ë
def_¥og_mode
 ();

568 
NCURSES_EXPORT
(Ë
def_shñl_mode
 ();

569 
NCURSES_EXPORT
(Ë
dñay_ouçut
 ();

570 
NCURSES_EXPORT
(Ë
dñch
 ();

571 
NCURSES_EXPORT
(Ë
dñs¸ìn
 (
SCREEN
 *);

572 
NCURSES_EXPORT
(Ë
dñwö
 (
WINDOW
 *);

573 
NCURSES_EXPORT
(Ë
dñëñn
 ();

574 
NCURSES_EXPORT
(
WINDOW
 *Ë
dîwö
 (WINDOW *,,,,);

575 
NCURSES_EXPORT
(Ë
doupd©e
 ();

576 
NCURSES_EXPORT
(
WINDOW
 *Ë
dupwö
 (WINDOW *);

577 
NCURSES_EXPORT
(Ë
echo
 ();

578 
NCURSES_EXPORT
(Ë
echoch¨
 (c⁄° 
chty≥
);

579 
NCURSES_EXPORT
(Ë
îa£
 ();

580 
NCURSES_EXPORT
(Ë
ídwö
 ();

581 
NCURSES_EXPORT
(Ë
îa£ch¨
 ();

582 
NCURSES_EXPORT
(Ë
fûãr
 ();

583 
NCURSES_EXPORT
(Ë
Êash
 ();

584 
NCURSES_EXPORT
(Ë
Êushöp
 ();

585 
NCURSES_EXPORT
(
chty≥
Ë
gëbkgd
 (
WINDOW
 *);

586 
NCURSES_EXPORT
(Ë
gëch
 ();

587 
NCURSES_EXPORT
(Ë
gën°r
 (*, );

588 
NCURSES_EXPORT
(Ë
gë°r
 (*);

589 
NCURSES_EXPORT
(
WINDOW
 *Ë
gëwö
 (
FILE
 *);

590 
NCURSES_EXPORT
(Ë
hÆfdñay
 ();

591 
NCURSES_EXPORT
(
boﬁ
Ë
has_cﬁ‹s
 ();

592 
NCURSES_EXPORT
(
boﬁ
Ë
has_ic
 ();

593 
NCURSES_EXPORT
(
boﬁ
Ë
has_û
 ();

594 
NCURSES_EXPORT
(Ë
hlöe
 (
chty≥
, );

595 
NCURSES_EXPORT
(Ë
idcok
 (
WINDOW
 *, 
boﬁ
);

596 
NCURSES_EXPORT
(Ë
idlok
 (
WINDOW
 *, 
boﬁ
);

597 
NCURSES_EXPORT
(Ë
immedok
 (
WINDOW
 *, 
boﬁ
);

598 
NCURSES_EXPORT
(
chty≥
Ë
öch
 ();

599 
NCURSES_EXPORT
(Ë
öchn°r
 (
chty≥
 *, );

600 
NCURSES_EXPORT
(Ë
öch°r
 (
chty≥
 *);

601 
NCURSES_EXPORT
(
WINDOW
 *Ë
öôs¸
 ();

602 
NCURSES_EXPORT
(Ë
öô_cﬁ‹
 (,,,);

603 
NCURSES_EXPORT
(Ë
öô_∑ú
 (,,);

604 
NCURSES_EXPORT
(Ë
ön°r
 (*, );

605 
NCURSES_EXPORT
(Ë
ösch
 (
chty≥
);

606 
NCURSES_EXPORT
(Ë
ösdñ 
 ();

607 
NCURSES_EXPORT
(Ë
ö£π 
 ();

608 
NCURSES_EXPORT
(Ë
ö¢°r
 (const *, );

609 
NCURSES_EXPORT
(Ë
ös°r
 (const *);

610 
NCURSES_EXPORT
(Ë
ö°r
 (*);

611 
NCURSES_EXPORT
(Ë
öåÊush
 (
WINDOW
 *,
boﬁ
);

612 
NCURSES_EXPORT
(
boﬁ
Ë
i£ndwö
 ();

613 
NCURSES_EXPORT
(
boﬁ
Ë
is_löëouched
 (
WINDOW
 *,);

614 
NCURSES_EXPORT
(
boﬁ
Ë
is_wötouched
 (
WINDOW
 *);

615 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key«me
 ();

616 
NCURSES_EXPORT
(Ë
key∑d
 (
WINDOW
 *,
boﬁ
);

617 
NCURSES_EXPORT
(Ë
kûlch¨
 ();

618 
NCURSES_EXPORT
(Ë
Àaveok
 (
WINDOW
 *,
boﬁ
);

619 
NCURSES_EXPORT
(*Ë
l⁄g«me
 ();

620 
NCURSES_EXPORT
(Ë
mëa
 (
WINDOW
 *,
boﬁ
);

621 
NCURSES_EXPORT
(Ë
move
 (, );

622 
NCURSES_EXPORT
(Ë
mvaddch
 (, , c⁄° 
chty≥
);

623 
NCURSES_EXPORT
(Ë
mvaddchn°r
 (, , c⁄° 
chty≥
 *, );

624 
NCURSES_EXPORT
(Ë
mvaddch°r
 (, , c⁄° 
chty≥
 *);

625 
NCURSES_EXPORT
(Ë
mvaddn°r
 (, , const *, );

626 
NCURSES_EXPORT
(Ë
mvadd°r
 (, , const *);

627 
NCURSES_EXPORT
(Ë
mvchg©
 (, , , 
©å_t
, , const *);

628 
NCURSES_EXPORT
(Ë
mvcur
 (,,,);

629 
NCURSES_EXPORT
(Ë
mvdñch
 (, );

630 
NCURSES_EXPORT
(Ë
mvdîwö
 (
WINDOW
 *, , );

631 
NCURSES_EXPORT
(Ë
mvgëch
 (, );

632 
NCURSES_EXPORT
(Ë
mvgën°r
 (, , *, );

633 
NCURSES_EXPORT
(Ë
mvgë°r
 (, , *);

634 
NCURSES_EXPORT
(Ë
mvhlöe
 (, , 
chty≥
, );

635 
NCURSES_EXPORT
(
chty≥
Ë
mvöch
 (, );

636 
NCURSES_EXPORT
(Ë
mvöchn°r
 (, , 
chty≥
 *, );

637 
NCURSES_EXPORT
(Ë
mvöch°r
 (, , 
chty≥
 *);

638 
NCURSES_EXPORT
(Ë
mvön°r
 (, , *, );

639 
NCURSES_EXPORT
(Ë
mvösch
 (, , 
chty≥
);

640 
NCURSES_EXPORT
(Ë
mvö¢°r
 (, , const *, );

641 
NCURSES_EXPORT
(Ë
mvös°r
 (, , const *);

642 
NCURSES_EXPORT
(Ë
mvö°r
 (, , *);

643 
NCURSES_EXPORT
(Ë
mv¥ötw
 (,, const *,...)

644 
GCC_PRINTFLIKE
(3,4);

645 
NCURSES_EXPORT
(Ë
mvsˇnw
 (,, 
NCURSES_CONST
 *,...)

646 
GCC_SCANFLIKE
(3,4);

647 
NCURSES_EXPORT
(Ë
mvvlöe
 (, , 
chty≥
, );

648 
NCURSES_EXPORT
(Ë
mvwaddch
 (
WINDOW
 *, , , c⁄° 
chty≥
);

649 
NCURSES_EXPORT
(Ë
mvwaddchn°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *, );

650 
NCURSES_EXPORT
(Ë
mvwaddch°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *);

651 
NCURSES_EXPORT
(Ë
mvwaddn°r
 (
WINDOW
 *, , , const *, );

652 
NCURSES_EXPORT
(Ë
mvwadd°r
 (
WINDOW
 *, , , const *);

653 
NCURSES_EXPORT
(Ë
mvwchg©
 (
WINDOW
 *, , , , 
©å_t
, , const *);

654 
NCURSES_EXPORT
(Ë
mvwdñch
 (
WINDOW
 *, , );

655 
NCURSES_EXPORT
(Ë
mvwgëch
 (
WINDOW
 *, , );

656 
NCURSES_EXPORT
(Ë
mvwgën°r
 (
WINDOW
 *, , , *, );

657 
NCURSES_EXPORT
(Ë
mvwgë°r
 (
WINDOW
 *, , , *);

658 
NCURSES_EXPORT
(Ë
mvwhlöe
 (
WINDOW
 *, , , 
chty≥
, );

659 
NCURSES_EXPORT
(Ë
mvwö
 (
WINDOW
 *,,);

660 
NCURSES_EXPORT
(
chty≥
Ë
mvwöch
 (
WINDOW
 *, , );

661 
NCURSES_EXPORT
(Ë
mvwöchn°r
 (
WINDOW
 *, , , 
chty≥
 *, );

662 
NCURSES_EXPORT
(Ë
mvwöch°r
 (
WINDOW
 *, , , 
chty≥
 *);

663 
NCURSES_EXPORT
(Ë
mvwön°r
 (
WINDOW
 *, , , *, );

664 
NCURSES_EXPORT
(Ë
mvwösch
 (
WINDOW
 *, , , 
chty≥
);

665 
NCURSES_EXPORT
(Ë
mvwö¢°r
 (
WINDOW
 *, , , const *, );

666 
NCURSES_EXPORT
(Ë
mvwös°r
 (
WINDOW
 *, , , const *);

667 
NCURSES_EXPORT
(Ë
mvwö°r
 (
WINDOW
 *, , , *);

668 
NCURSES_EXPORT
(Ë
mvw¥ötw
 (
WINDOW
*,,, const *,...)

669 
GCC_PRINTFLIKE
(4,5);

670 
NCURSES_EXPORT
(Ë
mvwsˇnw
 (
WINDOW
 *,,, 
NCURSES_CONST
 *,...)

671 
GCC_SCANFLIKE
(4,5);

672 
NCURSES_EXPORT
(Ë
mvwvlöe
 (
WINDOW
 *,, , 
chty≥
, );

673 
NCURSES_EXPORT
(Ë
«pms
 ();

674 
NCURSES_EXPORT
(
WINDOW
 *Ë
√w∑d
 (,);

675 
NCURSES_EXPORT
(
SCREEN
 *Ë
√wãrm
 (
NCURSES_CONST
 *,
FILE
 *,FILE *);

676 
NCURSES_EXPORT
(
WINDOW
 *Ë
√wwö
 (,,,);

677 
NCURSES_EXPORT
(Ë
∆
 ();

678 
NCURSES_EXPORT
(Ë
nocbªak
 ();

679 
NCURSES_EXPORT
(Ë
nodñay
 (
WINDOW
 *,
boﬁ
);

680 
NCURSES_EXPORT
(Ë
n€cho
 ();

681 
NCURSES_EXPORT
(Ë
n⁄l
 ();

682 
NCURSES_EXPORT
(Ë
noqiÊush
 ();

683 
NCURSES_EXPORT
(Ë
n‹aw
 ();

684 
NCURSES_EXPORT
(Ë
nŸimeout
 (
WINDOW
 *,
boﬁ
);

685 
NCURSES_EXPORT
(Ë
ovîœy
 (c⁄° 
WINDOW
*,WINDOW *);

686 
NCURSES_EXPORT
(Ë
ovîwrôe
 (c⁄° 
WINDOW
*,WINDOW *);

687 
NCURSES_EXPORT
(Ë
∑ú_c⁄ã¡
 (,*,*);

688 
NCURSES_EXPORT
(Ë
PAIR_NUMBER
 ();

689 
NCURSES_EXPORT
(Ë
≥choch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

690 
NCURSES_EXPORT
(Ë
≤ouåe‰esh
 (
WINDOW
*,,,,,,);

691 
NCURSES_EXPORT
(Ë
¥e‰esh
 (
WINDOW
 *,,,,,,);

692 
NCURSES_EXPORT
(Ë
¥ötw
 (const *,...)

693 
GCC_PRINTFLIKE
(1,2);

694 
NCURSES_EXPORT
(Ë
puç
 (const *);

695 
NCURSES_EXPORT
(Ë
putwö
 (
WINDOW
 *, 
FILE
 *);

696 
NCURSES_EXPORT
(Ë
qiÊush
 ();

697 
NCURSES_EXPORT
(Ë
øw
 ();

698 
NCURSES_EXPORT
(Ë
ªdøwwö
 (
WINDOW
 *);

699 
NCURSES_EXPORT
(Ë
ª‰esh
 ();

700 
NCURSES_EXPORT
(Ë
ª£ây
 ();

701 
NCURSES_EXPORT
(Ë
ª£t_¥og_mode
 ();

702 
NCURSES_EXPORT
(Ë
ª£t_shñl_mode
 ();

703 
NCURSES_EXPORT
(Ë
rùofÊöe
 (, (*)(
WINDOW
 *, ));

704 
NCURSES_EXPORT
(Ë
ßvëty
 ();

705 
NCURSES_EXPORT
(Ë
sˇnw
 (
NCURSES_CONST
 *,...)

706 
GCC_SCANFLIKE
(1,2);

707 
NCURSES_EXPORT
(Ë
s¸_dump
 (const *);

708 
NCURSES_EXPORT
(Ë
s¸_öô
 (const *);

709 
NCURSES_EXPORT
(Ë
s¸l
 ();

710 
NCURSES_EXPORT
(Ë
s¸ﬁl
 (
WINDOW
 *);

711 
NCURSES_EXPORT
(Ë
s¸ﬁlok
 (
WINDOW
 *,
boﬁ
);

712 
NCURSES_EXPORT
(Ë
s¸_ª°‹e
 (const *);

713 
NCURSES_EXPORT
(Ë
s¸_£t
 (const *);

714 
NCURSES_EXPORT
(Ë
£ts¸ªg
 (,);

715 
NCURSES_EXPORT
(
SCREEN
 *Ë
£t_ãrm
 (SCREEN *);

716 
NCURSES_EXPORT
(Ë
¶k_©åoff
 (c⁄° 
chty≥
);

717 
NCURSES_EXPORT
(Ë
¶k_©å_off
 (c⁄° 
©å_t
, *);

718 
NCURSES_EXPORT
(Ë
¶k_©å⁄
 (c⁄° 
chty≥
);

719 
NCURSES_EXPORT
(Ë
¶k_©å_⁄
 (
©å_t
,*);

720 
NCURSES_EXPORT
(Ë
¶k_©å£t
 (c⁄° 
chty≥
);

721 
NCURSES_EXPORT
(
©å_t
Ë
¶k_©å
 ();

722 
NCURSES_EXPORT
(Ë
¶k_©å_£t
 (c⁄° 
©å_t
,,*);

723 
NCURSES_EXPORT
(Ë
¶k_˛ór
 ();

724 
NCURSES_EXPORT
(Ë
¶k_cﬁ‹
 ();

725 
NCURSES_EXPORT
(Ë
¶k_öô
 ();

726 
NCURSES_EXPORT
(*Ë
¶k_œbñ
 ();

727 
NCURSES_EXPORT
(Ë
¶k_nouåe‰esh
 ();

728 
NCURSES_EXPORT
(Ë
¶k_ª‰esh
 ();

729 
NCURSES_EXPORT
(Ë
¶k_ª°‹e
 ();

730 
NCURSES_EXPORT
(Ë
¶k_£t
 (,const *,);

731 
NCURSES_EXPORT
(Ë
¶k_touch
 ();

732 
NCURSES_EXPORT
(Ë
°™dout
 ();

733 
NCURSES_EXPORT
(Ë
°™díd
 ();

734 
NCURSES_EXPORT
(Ë
°¨t_cﬁ‹
 ();

735 
NCURSES_EXPORT
(
WINDOW
 *Ë
sub∑d
 (WINDOW *, , , , );

736 
NCURSES_EXPORT
(
WINDOW
 *Ë
subwö
 (WINDOW *,,,,);

737 
NCURSES_EXPORT
(Ë
syncok
 (
WINDOW
 *, 
boﬁ
);

738 
NCURSES_EXPORT
(
chty≥
Ë
ãrm©ås
 ();

739 
NCURSES_EXPORT
(*Ë
ãrm«me
 ();

740 
NCURSES_EXPORT
(Ë
tigëÊag
 (
NCURSES_CONST
 *);

741 
NCURSES_EXPORT
(Ë
tigënum
 (
NCURSES_CONST
 *);

742 
NCURSES_EXPORT
(*Ë
tigë°r
 (
NCURSES_CONST
 *);

743 
NCURSES_EXPORT
(Ë
timeout
 ();

744 
NCURSES_EXPORT
(Ë
touchlöe
 (
WINDOW
 *, , );

745 
NCURSES_EXPORT
(Ë
touchwö
 (
WINDOW
 *);

746 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ...);

747 
NCURSES_EXPORT
(Ë
ty≥ahód
 ();

748 
NCURSES_EXPORT
(Ë
ungëch
 ();

749 
NCURSES_EXPORT
(Ë
u¡ouchwö
 (
WINDOW
 *);

750 
NCURSES_EXPORT
(Ë
u£_ív
 (
boﬁ
);

751 
NCURSES_EXPORT
(Ë
vid©å
 (
chty≥
);

752 
NCURSES_EXPORT
(Ë
vidputs
 (
chty≥
, (*)());

753 
NCURSES_EXPORT
(Ë
vlöe
 (
chty≥
, );

754 
NCURSES_EXPORT
(Ë
vw¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

755 
NCURSES_EXPORT
(Ë
vw_¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

756 
NCURSES_EXPORT
(Ë
vwsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

757 
NCURSES_EXPORT
(Ë
vw_sˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

758 
NCURSES_EXPORT
(Ë
waddch
 (
WINDOW
 *, c⁄° 
chty≥
);

759 
NCURSES_EXPORT
(Ë
waddchn°r
 (
WINDOW
 *,c⁄° 
chty≥
 *,);

760 
NCURSES_EXPORT
(Ë
waddch°r
 (
WINDOW
 *,c⁄° 
chty≥
 *);

761 
NCURSES_EXPORT
(Ë
waddn°r
 (
WINDOW
 *,const *,);

762 
NCURSES_EXPORT
(Ë
wadd°r
 (
WINDOW
 *,const *);

763 
NCURSES_EXPORT
(Ë
w©å⁄
 (
WINDOW
 *, );

764 
NCURSES_EXPORT
(Ë
w©åoff
 (
WINDOW
 *, );

765 
NCURSES_EXPORT
(Ë
w©å£t
 (
WINDOW
 *, );

766 
NCURSES_EXPORT
(Ë
w©å_gë
 (
WINDOW
 *, 
©å_t
 *, *, *);

767 
NCURSES_EXPORT
(Ë
w©å_⁄
 (
WINDOW
 *, 
©å_t
, *);

768 
NCURSES_EXPORT
(Ë
w©å_off
 (
WINDOW
 *, 
©å_t
, *);

769 
NCURSES_EXPORT
(Ë
w©å_£t
 (
WINDOW
 *, 
©å_t
, , *);

770 
NCURSES_EXPORT
(Ë
wbkgd
 (
WINDOW
 *, 
chty≥
);

771 
NCURSES_EXPORT
(Ë
wbkgd£t
 (
WINDOW
 *,
chty≥
);

772 
NCURSES_EXPORT
(Ë
wb‹dî
 (
WINDOW
 *,
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

773 
NCURSES_EXPORT
(Ë
wchg©
 (
WINDOW
 *, , 
©å_t
, , const *);

774 
NCURSES_EXPORT
(Ë
w˛ór
 (
WINDOW
 *);

775 
NCURSES_EXPORT
(Ë
w˛πobŸ
 (
WINDOW
 *);

776 
NCURSES_EXPORT
(Ë
w˛π€ﬁ
 (
WINDOW
 *);

777 
NCURSES_EXPORT
(Ë
wcﬁ‹_£t
 (
WINDOW
*,,*);

778 
NCURSES_EXPORT
(Ë
wcursyncup
 (
WINDOW
 *);

779 
NCURSES_EXPORT
(Ë
wdñch
 (
WINDOW
 *);

780 
NCURSES_EXPORT
(Ë
wdñëñn
 (
WINDOW
 *);

781 
NCURSES_EXPORT
(Ë
wechoch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

782 
NCURSES_EXPORT
(Ë
wîa£
 (
WINDOW
 *);

783 
NCURSES_EXPORT
(Ë
wgëch
 (
WINDOW
 *);

784 
NCURSES_EXPORT
(Ë
wgën°r
 (
WINDOW
 *,*,);

785 
NCURSES_EXPORT
(Ë
wgë°r
 (
WINDOW
 *, *);

786 
NCURSES_EXPORT
(Ë
whlöe
 (
WINDOW
 *, 
chty≥
, );

787 
NCURSES_EXPORT
(
chty≥
Ë
wöch
 (
WINDOW
 *);

788 
NCURSES_EXPORT
(Ë
wöchn°r
 (
WINDOW
 *, 
chty≥
 *, );

789 
NCURSES_EXPORT
(Ë
wöch°r
 (
WINDOW
 *, 
chty≥
 *);

790 
NCURSES_EXPORT
(Ë
wön°r
 (
WINDOW
 *, *, );

791 
NCURSES_EXPORT
(Ë
wösch
 (
WINDOW
 *, 
chty≥
);

792 
NCURSES_EXPORT
(Ë
wösdñ 
 (
WINDOW
 *,);

793 
NCURSES_EXPORT
(Ë
wö£π 
 (
WINDOW
 *);

794 
NCURSES_EXPORT
(Ë
wö¢°r
 (
WINDOW
 *, const *,);

795 
NCURSES_EXPORT
(Ë
wös°r
 (
WINDOW
 *, const *);

796 
NCURSES_EXPORT
(Ë
wö°r
 (
WINDOW
 *, *);

797 
NCURSES_EXPORT
(Ë
wmove
 (
WINDOW
 *,,);

798 
NCURSES_EXPORT
(Ë
wnouåe‰esh
 (
WINDOW
 *);

799 
NCURSES_EXPORT
(Ë
w¥ötw
 (
WINDOW
 *, const *,...)

800 
GCC_PRINTFLIKE
(2,3);

801 
NCURSES_EXPORT
(Ë
wªdøw 
 (
WINDOW
 *,,);

802 
NCURSES_EXPORT
(Ë
wª‰esh
 (
WINDOW
 *);

803 
NCURSES_EXPORT
(Ë
wsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,...)

804 
GCC_SCANFLIKE
(2,3);

805 
NCURSES_EXPORT
(Ë
ws¸l
 (
WINDOW
 *,);

806 
NCURSES_EXPORT
(Ë
w£ts¸ªg
 (
WINDOW
 *,,);

807 
NCURSES_EXPORT
(Ë
w°™dout
 (
WINDOW
 *);

808 
NCURSES_EXPORT
(Ë
w°™díd
 (
WINDOW
 *);

809 
NCURSES_EXPORT
(Ë
wsyncdown
 (
WINDOW
 *);

810 
NCURSES_EXPORT
(Ë
wsyncup
 (
WINDOW
 *);

811 
NCURSES_EXPORT
(Ë
wtimeout
 (
WINDOW
 *,);

812 
NCURSES_EXPORT
(Ë
wtouch 
 (
WINDOW
 *,,,);

813 
NCURSES_EXPORT
(Ë
wvlöe
 (
WINDOW
 *,
chty≥
,);

818 
NCURSES_EXPORT
(Ë
gëcurx
 (c⁄° 
WINDOW
 *);

819 
NCURSES_EXPORT
(Ë
gëcury
 (c⁄° 
WINDOW
 *);

820 
NCURSES_EXPORT
(Ë
gëbegx
 (c⁄° 
WINDOW
 *);

821 
NCURSES_EXPORT
(Ë
gëbegy
 (c⁄° 
WINDOW
 *);

822 
NCURSES_EXPORT
(Ë
gëmaxx
 (c⁄° 
WINDOW
 *);

823 
NCURSES_EXPORT
(Ë
gëmaxy
 (c⁄° 
WINDOW
 *);

824 
NCURSES_EXPORT
(Ë
gë∑rx
 (c⁄° 
WINDOW
 *);

825 
NCURSES_EXPORT
(Ë
gë∑ry
 (c⁄° 
WINDOW
 *);

830 #i‚de‡
_XOPEN_SOURCE_EXTENDED


831 
	#vid_©å
(
a
,
∑ú
,
›ts
Ë
	`vid©å
◊)

	)

836 
	#NCURSES_ATTR_SHIFT
 8

	)

837 
	#NCURSES_BITS
(
mask
,
shi·
Ë((maskË<< ((shi·Ë+ 
NCURSES_ATTR_SHIFT
))

	)

839 
	#A_NORMAL
 (1UL - 1UL)

	)

840 
	#A_ATTRIBUTES
 
	`NCURSES_BITS
(~(1UL - 1UL),0)

	)

841 
	#A_CHARTEXT
 (
	`NCURSES_BITS
(1UL,0Ë- 1UL)

	)

842 
	#A_COLOR
 
	`NCURSES_BITS
(((1ULË<< 8Ë- 1UL,0)

	)

843 
	#A_STANDOUT
 
	`NCURSES_BITS
(1UL,8)

	)

844 
	#A_UNDERLINE
 
	`NCURSES_BITS
(1UL,9)

	)

845 
	#A_REVERSE
 
	`NCURSES_BITS
(1UL,10)

	)

846 
	#A_BLINK
 
	`NCURSES_BITS
(1UL,11)

	)

847 
	#A_DIM
 
	`NCURSES_BITS
(1UL,12)

	)

848 
	#A_BOLD
 
	`NCURSES_BITS
(1UL,13)

	)

849 
	#A_ALTCHARSET
 
	`NCURSES_BITS
(1UL,14)

	)

850 
	#A_INVIS
 
	`NCURSES_BITS
(1UL,15)

	)

851 
	#A_PROTECT
 
	`NCURSES_BITS
(1UL,16)

	)

852 
	#A_HORIZONTAL
 
	`NCURSES_BITS
(1UL,17)

	)

853 
	#A_LEFT
 
	`NCURSES_BITS
(1UL,18)

	)

854 
	#A_LOW
 
	`NCURSES_BITS
(1UL,19)

	)

855 
	#A_RIGHT
 
	`NCURSES_BITS
(1UL,20)

	)

856 
	#A_TOP
 
	`NCURSES_BITS
(1UL,21)

	)

857 
	#A_VERTICAL
 
	`NCURSES_BITS
(1UL,22)

	)

869 
	#gëyx
(
wö
,
y
,
x
Ë(y = 
	`gëcury
(wö), x = 
	`gëcurx
(wö))

	)

870 
	#gëbegyx
(
wö
,
y
,
x
Ë(y = 
	`gëbegy
(wö), x = 
	`gëbegx
(wö))

	)

871 
	#gëmaxyx
(
wö
,
y
,
x
Ë(y = 
	`gëmaxy
(wö), x = 
	`gëmaxx
(wö))

	)

872 
	#gë∑ryx
(
wö
,
y
,
x
Ë(y = 
	`gë∑ry
(wö), x = 
	`gë∑rx
(wö))

	)

874 
	#gësyx
(
y
,
x
Ëdÿ{ if(
√ws¸
->
_Àaveok
) (y)=(x)=-1; \

875 
	`gëyx
(
√ws¸
,(
y
),(
x
)); \

876 } 0)

	)

877 
	#£tsyx
(
y
,
x
Ëdÿ{ if((y)==-1 && (x)==-1Ë
√ws¸
->
_Àaveok
=
TRUE
; \

878 {
√ws¸
->
_Àaveok
=
FALSE
;
	`wmove
“ews¸,(
y
),(
x
));} \

879 } 0)

	)

881 #i‚de‡
NCURSES_NOMACROS


887 
	#wgë°r
(
w
, 
s
Ë
	`wgën°r
(w, s, -1)

	)

888 
	#gën°r
(
s
, 
n
Ë
	`wgën°r
(
°ds¸
, s,Ç)

	)

890 
	#£âîm
(
ãrm
Ë
	`£tu±îm
—îm, 1, (*)0)

	)

892 
	#fixãrm
(Ë
	`ª£t_¥og_mode
()

	)

893 
	#ª£âîm
(Ë
	`ª£t_shñl_mode
()

	)

894 
	#ßvëîm
(Ë
	`def_¥og_mode
()

	)

895 
	#¸mode
(Ë
	`cbªak
()

	)

896 
	#no¸mode
(Ë
	`nocbªak
()

	)

897 
	#gëtmode
()

	)

900 
	#gë©ås
(
wö
Ë((wö)?(wö)->
_©ås
:
A_NORMAL
)

	)

901 
	#gëcurx
(
wö
Ë((wö)?(wö)->
_curx
:
ERR
)

	)

902 
	#gëcury
(
wö
Ë((wö)?(wö)->
_cury
:
ERR
)

	)

903 
	#gëbegx
(
wö
Ë((wö)?(wö)->
_begx
:
ERR
)

	)

904 
	#gëbegy
(
wö
Ë((wö)?(wö)->
_begy
:
ERR
)

	)

905 
	#gëmaxx
(
wö
Ë((wö)?((wö)->
_maxx
 + 1):
ERR
)

	)

906 
	#gëmaxy
(
wö
Ë((wö)?((wö)->
_maxy
 + 1):
ERR
)

	)

907 
	#gë∑rx
(
wö
Ë((wö)?(wö)->
_∑rx
:
ERR
)

	)

908 
	#gë∑ry
(
wö
Ë((wö)?(wö)->
_∑ry
:
ERR
)

	)

910 
	#w°™dout
(
wö
Ë(
	`w©å£t
(wö,
A_STANDOUT
))

	)

911 
	#w°™díd
(
wö
Ë(
	`w©å£t
(wö,
A_NORMAL
))

	)

913 
	#w©å⁄
(
wö
,
©
Ë
	`w©å_⁄
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

914 
	#w©åoff
(
wö
,
©
Ë
	`w©å_off
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

916 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
) && 0

917 
	#w©å£t
(
wö
,
©
Ë((wö)->
_cﬁ‹
 = 
	`PAIR_NUMBER
(at), \

918 (
wö
)->
_©ås
 = (
©
))

	)

920 
	#w©å£t
(
wö
,
©
Ë((wö)->
_©ås
 = (©))

	)

923 
	#s¸ﬁl
(
wö
Ë
	`ws¸l
(wö,1)

	)

925 
	#touchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 1)

	)

926 
	#touchlöe
(
wö
, 
s
, 
c
Ë
	`wtouch 
((wö), s, c, 1)

	)

927 
	#u¡ouchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 0)

	)

929 
	#box
(
wö
, 
v
, 
h
Ë
	`wb‹dî
(wö, v, v, h, h, 0, 0, 0, 0)

	)

930 
	#b‹dî
(
ls
, 
rs
, 
ts
, 
bs
, 
é
, 
å
, 
bl
, 
br
Ë
	`wb‹dî
(
°ds¸
,Üs,Ñs,Ås, bs,Ål,År, bl, br)

	)

931 
	#hlöe
(
ch
, 
n
Ë
	`whlöe
(
°ds¸
, ch,Ç)

	)

932 
	#vlöe
(
ch
, 
n
Ë
	`wvlöe
(
°ds¸
, ch,Ç)

	)

934 
	#wö°r
(
w
, 
s
Ë
	`wön°r
(w, s, -1)

	)

935 
	#wöch°r
(
w
, 
s
Ë
	`wöchn°r
(w, s, -1)

	)

936 
	#wös°r
(
w
, 
s
Ë
	`wö¢°r
(w, s, -1)

	)

938 
	#ªdøwwö
(
wö
Ë
	`wªdøw 
(wö, 0, (wö)->
_maxy
+1)

	)

939 
	#wadd°r
(
wö
,
°r
Ë
	`waddn°r
(wö,°r,-1)

	)

940 
	#waddch°r
(
wö
,
°r
Ë
	`waddchn°r
(wö,°r,-1)

	)

945 
	#COLOR_PAIR
(
n
Ë
	`NCURSES_BITS
“, 0)

	)

946 
	#PAIR_NUMBER
(
a
Ë(
	`NCURSES_CAST
(,((◊Ë& 
A_COLOR
Ë>> 
NCURSES_ATTR_SHIFT
)))

	)

952 
	#addch
(
ch
Ë
	`waddch
(
°ds¸
,ch)

	)

953 
	#addchn°r
(
°r
,
n
Ë
	`waddchn°r
(
°ds¸
,°r,n)

	)

954 
	#addch°r
(
°r
Ë
	`waddch°r
(
°ds¸
,°r)

	)

955 
	#addn°r
(
°r
,
n
Ë
	`waddn°r
(
°ds¸
,°r,n)

	)

956 
	#add°r
(
°r
Ë
	`waddn°r
(
°ds¸
,°r,-1)

	)

957 
	#©åoff
(
©
Ë
	`w©åoff
(
°ds¸
,©)

	)

958 
	#©å⁄
(
©
Ë
	`w©å⁄
(
°ds¸
,©)

	)

959 
	#©å£t
(
©
Ë
	`w©å£t
(
°ds¸
,©)

	)

960 
	#©å_gë
(
≠
,
˝
,
o
Ë
	`w©å_gë
(
°ds¸
,≠,˝,o)

	)

961 
	#©å_off
(
a
,
o
Ë
	`w©å_off
(
°ds¸
,a,o)

	)

962 
	#©å_⁄
(
a
,
o
Ë
	`w©å_⁄
(
°ds¸
,a,o)

	)

963 
	#©å_£t
(
a
,
c
,
o
Ë
	`w©å_£t
(
°ds¸
,a,c,o)

	)

964 
	#bkgd
(
ch
Ë
	`wbkgd
(
°ds¸
,ch)

	)

965 
	#bkgd£t
(
ch
Ë
	`wbkgd£t
(
°ds¸
,ch)

	)

966 
	#chg©
(
n
,
a
,
c
,
o
Ë
	`wchg©
(
°ds¸
,n,a,c,o)

	)

967 
	#˛ór
(Ë
	`w˛ór
(
°ds¸
)

	)

968 
	#˛πobŸ
(Ë
	`w˛πobŸ
(
°ds¸
)

	)

969 
	#˛π€ﬁ
(Ë
	`w˛π€ﬁ
(
°ds¸
)

	)

970 
	#cﬁ‹_£t
(
c
,
o
Ë
	`wcﬁ‹_£t
(
°ds¸
,c,o)

	)

971 
	#dñch
(Ë
	`wdñch
(
°ds¸
)

	)

972 
	#dñëñn
(Ë
	`wösdñ 
(
°ds¸
,-1)

	)

973 
	#echoch¨
(
c
Ë
	`wechoch¨
(
°ds¸
,c)

	)

974 
	#îa£
(Ë
	`wîa£
(
°ds¸
)

	)

975 
	#gëch
(Ë
	`wgëch
(
°ds¸
)

	)

976 
	#gë°r
(
°r
Ë
	`wgë°r
(
°ds¸
,°r)

	)

977 
	#öch
(Ë
	`wöch
(
°ds¸
)

	)

978 
	#öchn°r
(
s
,
n
Ë
	`wöchn°r
(
°ds¸
,s,n)

	)

979 
	#öch°r
(
s
Ë
	`wöch°r
(
°ds¸
,s)

	)

980 
	#ön°r
(
s
,
n
Ë
	`wön°r
(
°ds¸
,s,n)

	)

981 
	#ösch
(
c
Ë
	`wösch
(
°ds¸
,c)

	)

982 
	#ösdñ 
(
n
Ë
	`wösdñ 
(
°ds¸
,n)

	)

983 
	#ö£π 
(Ë
	`wösdñ 
(
°ds¸
,1)

	)

984 
	#ö¢°r
(
s
,
n
Ë
	`wö¢°r
(
°ds¸
,s,n)

	)

985 
	#ös°r
(
s
Ë
	`wös°r
(
°ds¸
,s)

	)

986 
	#ö°r
(
s
Ë
	`wö°r
(
°ds¸
,s)

	)

987 
	#move
(
y
,
x
Ë
	`wmove
(
°ds¸
,y,x)

	)

988 
	#ª‰esh
(Ë
	`wª‰esh
(
°ds¸
)

	)

989 
	#s¸l
(
n
Ë
	`ws¸l
(
°ds¸
,n)

	)

990 
	#£ts¸ªg
(
t
,
b
Ë
	`w£ts¸ªg
(
°ds¸
,t,b)

	)

991 
	#°™díd
(Ë
	`w°™díd
(
°ds¸
)

	)

992 
	#°™dout
(Ë
	`w°™dout
(
°ds¸
)

	)

993 
	#timeout
(
dñay
Ë
	`wtimeout
(
°ds¸
,dñay)

	)

994 
	#wdñëñn
(
wö
Ë
	`wösdñ 
(wö,-1)

	)

995 
	#wö£π 
(
wö
Ë
	`wösdñ 
(wö,1)

	)

1001 
	#mvwaddch
(
wö
,
y
,
x
,
ch
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddch
(wö,ch))

	)

1002 
	#mvwaddchn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,n))

	)

1003 
	#mvwaddch°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,-1))

	)

1004 
	#mvwaddn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,n))

	)

1005 
	#mvwadd°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,-1))

	)

1006 
	#mvwdñch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wdñch
(wö))

	)

1007 
	#mvwchg©
(
wö
,
y
,
x
,
n
,
a
,
c
,
o
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wchg©
(wö,n,a,c,o))

	)

1008 
	#mvwgëch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgëch
(wö))

	)

1009 
	#mvwgën°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgën°r
(wö,°r,n))

	)

1010 
	#mvwgë°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë°r
(wö,°r))

	)

1011 
	#mvwhlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe
(wö,c,n))

	)

1012 
	#mvwöch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? 
	`NCURSES_CAST
(
chty≥
, ERRË: 
	`wöch
(wö))

	)

1013 
	#mvwöchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöchn°r
(wö,s,n))

	)

1014 
	#mvwöch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöch°r
(wö,s))

	)

1015 
	#mvwön°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wön°r
(wö,s,n))

	)

1016 
	#mvwösch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wösch
(wö,c))

	)

1017 
	#mvwö¢°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö¢°r
(wö,s,n))

	)

1018 
	#mvwös°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös°r
(wö,s))

	)

1019 
	#mvwö°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö°r
(wö,s))

	)

1020 
	#mvwvlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe
(wö,c,n))

	)

1022 
	#mvaddch
(
y
,
x
,
ch
Ë
	`mvwaddch
(
°ds¸
,y,x,ch)

	)

1023 
	#mvaddchn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddchn°r
(
°ds¸
,y,x,°r,n)

	)

1024 
	#mvaddch°r
(
y
,
x
,
°r
Ë
	`mvwaddch°r
(
°ds¸
,y,x,°r)

	)

1025 
	#mvaddn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddn°r
(
°ds¸
,y,x,°r,n)

	)

1026 
	#mvadd°r
(
y
,
x
,
°r
Ë
	`mvwadd°r
(
°ds¸
,y,x,°r)

	)

1027 
	#mvchg©
(
y
,
x
,
n
,
a
,
c
,
o
Ë
	`mvwchg©
(
°ds¸
,y,x,n,a,c,o)

	)

1028 
	#mvdñch
(
y
,
x
Ë
	`mvwdñch
(
°ds¸
,y,x)

	)

1029 
	#mvgëch
(
y
,
x
Ë
	`mvwgëch
(
°ds¸
,y,x)

	)

1030 
	#mvgën°r
(
y
,
x
,
°r
,
n
Ë
	`mvwgën°r
(
°ds¸
,y,x,°r,n)

	)

1031 
	#mvgë°r
(
y
,
x
,
°r
Ë
	`mvwgë°r
(
°ds¸
,y,x,°r)

	)

1032 
	#mvhlöe
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe
(
°ds¸
,y,x,c,n)

	)

1033 
	#mvöch
(
y
,
x
Ë
	`mvwöch
(
°ds¸
,y,x)

	)

1034 
	#mvöchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwöchn°r
(
°ds¸
,y,x,s,n)

	)

1035 
	#mvöch°r
(
y
,
x
,
s
Ë
	`mvwöch°r
(
°ds¸
,y,x,s)

	)

1036 
	#mvön°r
(
y
,
x
,
s
,
n
Ë
	`mvwön°r
(
°ds¸
,y,x,s,n)

	)

1037 
	#mvösch
(
y
,
x
,
c
Ë
	`mvwösch
(
°ds¸
,y,x,c)

	)

1038 
	#mvö¢°r
(
y
,
x
,
s
,
n
Ë
	`mvwö¢°r
(
°ds¸
,y,x,s,n)

	)

1039 
	#mvös°r
(
y
,
x
,
s
Ë
	`mvwös°r
(
°ds¸
,y,x,s)

	)

1040 
	#mvö°r
(
y
,
x
,
s
Ë
	`mvwö°r
(
°ds¸
,y,x,s)

	)

1041 
	#mvvlöe
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe
(
°ds¸
,y,x,c,n)

	)

1046 
	#gëbkgd
(
wö
Ë((wö)->
_bkgd
)

	)

1048 
	#¶k_©å_off
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©åoff
◊))

	)

1049 
	#¶k_©å_⁄
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©å⁄
◊))

	)

1051 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
) && 0

1052 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = (◊Ë& ~
A_COLOR
), \

1053 (
wö
)->
_cﬁ‹
 = (
p
), \

1054 
OK
)

	)

1055 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!0 && (*◊Ë(wö)->
_©ås
)), \

1056 ()((
p
Ë!0 && (*’Ë(
wö
)->
_cﬁ‹
)), \

1057 
OK
)

	)

1059 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = ((◊Ë& ~
A_COLOR
Ë| 
	`COLOR_PAIR
’)), 
OK
)

	)

1060 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!0 && (*◊Ë(wö)->
_©ås
)), \

1061 ()((
p
Ë!0 && (*’Ë
	`PAIR_NUMBER
((
wö
)->
_©ås
))), \

1062 
OK
)

	)

1071 
	#vw_¥ötw
 
vw¥ötw


	)

1072 
	#vw_sˇnw
 
vwsˇnw


	)

1078 
	#vssˇnf
(
a
,
b
,
c
Ë
	`_nc_vssˇnf
◊,b,c)

	)

1079 
NCURSES_EXPORT
(Ë
vssˇnf
(c⁄° *, c⁄° *, 
va_li°
);

1096 
	#KEY_CODE_YES
 0400

	)

1097 
	#KEY_MIN
 0401

	)

1098 
	#KEY_BREAK
 0401

	)

1099 
	#KEY_SRESET
 0530

	)

1100 
	#KEY_RESET
 0531

	)

1104 
	#KEY_DOWN
 0402

	)

1105 
	#KEY_UP
 0403

	)

1106 
	#KEY_LEFT
 0404

	)

1107 
	#KEY_RIGHT
 0405

	)

1108 
	#KEY_HOME
 0406

	)

1109 
	#KEY_BACKSPACE
 0407

	)

1110 
	#KEY_F0
 0410

	)

1111 
	#KEY_F
(
n
Ë(
KEY_F0
+“)Ë

	)

1112 
	#KEY_DL
 0510

	)

1113 
	#KEY_IL
 0511

	)

1114 
	#KEY_DC
 0512

	)

1115 
	#KEY_IC
 0513

	)

1116 
	#KEY_EIC
 0514

	)

1117 
	#KEY_CLEAR
 0515

	)

1118 
	#KEY_EOS
 0516

	)

1119 
	#KEY_EOL
 0517

	)

1120 
	#KEY_SF
 0520

	)

1121 
	#KEY_SR
 0521

	)

1122 
	#KEY_NPAGE
 0522

	)

1123 
	#KEY_PPAGE
 0523

	)

1124 
	#KEY_STAB
 0524

	)

1125 
	#KEY_CTAB
 0525

	)

1126 
	#KEY_CATAB
 0526

	)

1127 
	#KEY_ENTER
 0527

	)

1128 
	#KEY_PRINT
 0532

	)

1129 
	#KEY_LL
 0533

	)

1130 
	#KEY_A1
 0534

	)

1131 
	#KEY_A3
 0535

	)

1132 
	#KEY_B2
 0536

	)

1133 
	#KEY_C1
 0537

	)

1134 
	#KEY_C3
 0540

	)

1135 
	#KEY_BTAB
 0541

	)

1136 
	#KEY_BEG
 0542

	)

1137 
	#KEY_CANCEL
 0543

	)

1138 
	#KEY_CLOSE
 0544

	)

1139 
	#KEY_COMMAND
 0545

	)

1140 
	#KEY_COPY
 0546

	)

1141 
	#KEY_CREATE
 0547

	)

1142 
	#KEY_END
 0550

	)

1143 
	#KEY_EXIT
 0551

	)

1144 
	#KEY_FIND
 0552

	)

1145 
	#KEY_HELP
 0553

	)

1146 
	#KEY_MARK
 0554

	)

1147 
	#KEY_MESSAGE
 0555

	)

1148 
	#KEY_MOVE
 0556

	)

1149 
	#KEY_NEXT
 0557

	)

1150 
	#KEY_OPEN
 0560

	)

1151 
	#KEY_OPTIONS
 0561

	)

1152 
	#KEY_PREVIOUS
 0562

	)

1153 
	#KEY_REDO
 0563

	)

1154 
	#KEY_REFERENCE
 0564

	)

1155 
	#KEY_REFRESH
 0565

	)

1156 
	#KEY_REPLACE
 0566

	)

1157 
	#KEY_RESTART
 0567

	)

1158 
	#KEY_RESUME
 0570

	)

1159 
	#KEY_SAVE
 0571

	)

1160 
	#KEY_SBEG
 0572

	)

1161 
	#KEY_SCANCEL
 0573

	)

1162 
	#KEY_SCOMMAND
 0574

	)

1163 
	#KEY_SCOPY
 0575

	)

1164 
	#KEY_SCREATE
 0576

	)

1165 
	#KEY_SDC
 0577

	)

1166 
	#KEY_SDL
 0600

	)

1167 
	#KEY_SELECT
 0601

	)

1168 
	#KEY_SEND
 0602

	)

1169 
	#KEY_SEOL
 0603

	)

1170 
	#KEY_SEXIT
 0604

	)

1171 
	#KEY_SFIND
 0605

	)

1172 
	#KEY_SHELP
 0606

	)

1173 
	#KEY_SHOME
 0607

	)

1174 
	#KEY_SIC
 0610

	)

1175 
	#KEY_SLEFT
 0611

	)

1176 
	#KEY_SMESSAGE
 0612

	)

1177 
	#KEY_SMOVE
 0613

	)

1178 
	#KEY_SNEXT
 0614

	)

1179 
	#KEY_SOPTIONS
 0615

	)

1180 
	#KEY_SPREVIOUS
 0616

	)

1181 
	#KEY_SPRINT
 0617

	)

1182 
	#KEY_SREDO
 0620

	)

1183 
	#KEY_SREPLACE
 0621

	)

1184 
	#KEY_SRIGHT
 0622

	)

1185 
	#KEY_SRSUME
 0623

	)

1186 
	#KEY_SSAVE
 0624

	)

1187 
	#KEY_SSUSPEND
 0625

	)

1188 
	#KEY_SUNDO
 0626

	)

1189 
	#KEY_SUSPEND
 0627

	)

1190 
	#KEY_UNDO
 0630

	)

1191 
	#KEY_MOUSE
 0631

	)

1192 
	#KEY_RESIZE
 0632

	)

1193 
	#KEY_EVENT
 0633

	)

1195 
	#KEY_MAX
 0777

	)

1204 #i‡
NCURSES_MOUSE_VERSION
 > 1

1205 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 5))

	)

1207 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 6))

	)

1210 
	#NCURSES_BUTTON_RELEASED
 001L

	)

1211 
	#NCURSES_BUTTON_PRESSED
 002L

	)

1212 
	#NCURSES_BUTTON_CLICKED
 004L

	)

1213 
	#NCURSES_DOUBLE_CLICKED
 010L

	)

1214 
	#NCURSES_TRIPLE_CLICKED
 020L

	)

1215 
	#NCURSES_RESERVED_EVENT
 040L

	)

1218 
	#BUTTON1_RELEASED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_RELEASED
)

	)

1219 
	#BUTTON1_PRESSED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_PRESSED
)

	)

1220 
	#BUTTON1_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_CLICKED
)

	)

1221 
	#BUTTON1_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_DOUBLE_CLICKED
)

	)

1222 
	#BUTTON1_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_TRIPLE_CLICKED
)

	)

1224 
	#BUTTON2_RELEASED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_RELEASED
)

	)

1225 
	#BUTTON2_PRESSED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_PRESSED
)

	)

1226 
	#BUTTON2_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_CLICKED
)

	)

1227 
	#BUTTON2_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_DOUBLE_CLICKED
)

	)

1228 
	#BUTTON2_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_TRIPLE_CLICKED
)

	)

1230 
	#BUTTON3_RELEASED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_RELEASED
)

	)

1231 
	#BUTTON3_PRESSED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_PRESSED
)

	)

1232 
	#BUTTON3_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_CLICKED
)

	)

1233 
	#BUTTON3_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_DOUBLE_CLICKED
)

	)

1234 
	#BUTTON3_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_TRIPLE_CLICKED
)

	)

1236 
	#BUTTON4_RELEASED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_RELEASED
)

	)

1237 
	#BUTTON4_PRESSED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_PRESSED
)

	)

1238 
	#BUTTON4_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_CLICKED
)

	)

1239 
	#BUTTON4_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_DOUBLE_CLICKED
)

	)

1240 
	#BUTTON4_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_TRIPLE_CLICKED
)

	)

1246 #i‡
NCURSES_MOUSE_VERSION
 > 1

1248 
	#BUTTON5_RELEASED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_RELEASED
)

	)

1249 
	#BUTTON5_PRESSED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_PRESSED
)

	)

1250 
	#BUTTON5_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_CLICKED
)

	)

1251 
	#BUTTON5_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_DOUBLE_CLICKED
)

	)

1252 
	#BUTTON5_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_TRIPLE_CLICKED
)

	)

1254 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(6, 0001L)

	)

1255 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(6, 0002L)

	)

1256 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(6, 0004L)

	)

1257 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(6, 0010L)

	)

1261 
	#BUTTON1_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_RESERVED_EVENT
)

	)

1262 
	#BUTTON2_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_RESERVED_EVENT
)

	)

1263 
	#BUTTON3_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_RESERVED_EVENT
)

	)

1264 
	#BUTTON4_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_RESERVED_EVENT
)

	)

1266 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(5, 0001L)

	)

1267 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(5, 0002L)

	)

1268 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(5, 0004L)

	)

1269 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(5, 0010L)

	)

1273 
	#ALL_MOUSE_EVENTS
 (
REPORT_MOUSE_POSITION
 - 1)

	)

1276 
	#BUTTON_RELEASE
(
e
, 
x
Ë(”Ë& (001 << (6 * ((xË- 1))))

	)

1277 
	#BUTTON_PRESS
(
e
, 
x
Ë(”Ë& (002 << (6 * ((xË- 1))))

	)

1278 
	#BUTTON_CLICK
(
e
, 
x
Ë(”Ë& (004 << (6 * ((xË- 1))))

	)

1279 
	#BUTTON_DOUBLE_CLICK
(
e
, 
x
Ë(”Ë& (010 << (6 * ((xË- 1))))

	)

1280 
	#BUTTON_TRIPLE_CLICK
(
e
, 
x
Ë(”Ë& (020 << (6 * ((xË- 1))))

	)

1281 
	#BUTTON_RESERVED_EVENT
(
e
, 
x
Ë(”Ë& (040 << (6 * ((xË- 1))))

	)

1285 
	gid
;

1286 
	gx
, 
	gy
, 
	gz
;

1287 
mmask_t
 
	gb°©e
;

1289 
	tMEVENT
;

1291 
NCURSES_EXPORT
(Ë
gëmou£
 (
MEVENT
 *);

1292 
NCURSES_EXPORT
(Ë
ungëmou£
 (
MEVENT
 *);

1293 
NCURSES_EXPORT
(
mmask_t
Ë
mou£mask
 (mmask_t, mmask_t *);

1294 
NCURSES_EXPORT
(
boﬁ
Ë
wí˛o£
 (c⁄° 
WINDOW
 *, , );

1295 
NCURSES_EXPORT
(Ë
mou£öãrvÆ
 ();

1296 
NCURSES_EXPORT
(
boﬁ
Ë
wmou£_åafo
 (c⁄° 
WINDOW
*, *, *, bool);

1297 
NCURSES_EXPORT
(
boﬁ
Ë
mou£_åafo
 (*, *, bool);

1299 
	#mou£_åafo
(
y
,
x
,
to_s¸ìn
Ë
	`wmou£_åafo
(
°ds¸
,y,x,to_s¸ìn)

	)

1303 
NCURSES_EXPORT
(Ë
m˝röt
 (*, );

1304 
NCURSES_EXPORT
(Ë
has_key
 ();

1308 
NCURSES_EXPORT
(Ë
_åa˚f
 (c⁄° *, ...Ë
GCC_PRINTFLIKE
(1,2);

1309 
NCURSES_EXPORT
(Ë
_åa˚dump
 (c⁄° *, 
WINDOW
 *);

1310 
NCURSES_EXPORT
(*Ë
_åa˚©å
 (
©å_t
);

1311 
NCURSES_EXPORT
(*Ë
_åa˚©å2
 (, 
chty≥
);

1312 
NCURSES_EXPORT
(*Ë
_nc_åa˚bôs
 ();

1313 
NCURSES_EXPORT
(*Ë
_åa˚ch¨
 ();

1314 
NCURSES_EXPORT
(*Ë
_åa˚chty≥
 (
chty≥
);

1315 
NCURSES_EXPORT
(*Ë
_åa˚chty≥2
 (, 
chty≥
);

1316 #ifde‡
_XOPEN_SOURCE_EXTENDED


1317 
	#_åa˚ch_t
 
_åa˚cch¨_t


	)

1318 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t
 (c⁄° 
cch¨_t
 *);

1319 
	#_åa˚ch_t2
 
_åa˚cch¨_t2


	)

1320 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t2
 (, c⁄° 
cch¨_t
 *);

1322 
	#_åa˚ch_t
 
_åa˚chty≥


	)

1323 
	#_åa˚ch_t2
 
_åa˚chty≥2


	)

1325 
NCURSES_EXPORT
(*Ë
_åa˚mou£
 (c⁄° 
MEVENT
 *);

1326 
NCURSES_EXPORT
(Ë
åa˚
 (const );

1329 
	#TRACE_DISABLE
 0x0000

	)

1330 
	#TRACE_TIMES
 0x0001

	)

1331 
	#TRACE_TPUTS
 0x0002

	)

1332 
	#TRACE_UPDATE
 0x0004

	)

1333 
	#TRACE_MOVE
 0x0008

	)

1334 
	#TRACE_CHARPUT
 0x0010

	)

1335 
	#TRACE_ORDINARY
 0x001F

	)

1336 
	#TRACE_CALLS
 0x0020

	)

1337 
	#TRACE_VIRTPUT
 0x0040

	)

1338 
	#TRACE_IEVENT
 0x0080

	)

1339 
	#TRACE_BITS
 0x0100

	)

1340 
	#TRACE_ICALLS
 0x0200

	)

1341 
	#TRACE_CCALLS
 0x0400

	)

1342 
	#TRACE_DATABASE
 0x0800

	)

1343 
	#TRACE_ATTRS
 0x1000

	)

1345 
	#TRACE_SHIFT
 13

	)

1346 
	#TRACE_MAXIMUM
 ((1 << 
TRACE_SHIFT
Ë- 1Ë

	)

1348 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1349 
NCURSES_EXPORT_VAR
(Ë
_nc_›timize_íabÀ
;

1350 
NCURSES_EXPORT
(c⁄° *Ë
_nc_visbuf
 (const *);

1351 
	#OPTIMIZE_MVCUR
 0x01

	)

1352 
	#OPTIMIZE_HASHMAP
 0x02

	)

1353 
	#OPTIMIZE_SCROLL
 0x04

	)

1354 
	#OPTIMIZE_ALL
 0xf‡

	)

1357 #ifde‡
__˝lu•lus


1359 #i‚de‡
NCURSES_NOMACROS


1362 #unde‡
box


1363 #unde‡
˛ór


1364 #unde‡
îa£


1365 #unde‡
move


1366 #unde‡
ª‰esh


	@/usr/include/netdb.h

23 #i‚def 
_NETDB_H


24 
	#_NETDB_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<√töë/ö.h
>

29 
	~<°döt.h
>

30 #ifde‡
__USE_MISC


33 
	~<Ωc/√tdb.h
>

36 #ifde‡
__USE_GNU


37 
	#__√ed_sigevít_t


	)

38 
	~<bôs/sigöfo.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

43 
	~<bôs/√tdb.h
>

46 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

47 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

48 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

49 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

50 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

51 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

54 
	g__BEGIN_DECLS


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#NETDB_INTERNAL
 -1

	)

66 
	#NETDB_SUCCESS
 0

	)

67 
	#HOST_NOT_FOUND
 1

	)

68 
	#TRY_AGAIN
 2

	)

70 
	#NO_RECOVERY
 3

	)

72 
	#NO_DATA
 4

	)

74 
	#NO_ADDRESS
 
NO_DATA


	)

76 #ifde‡
__USE_XOPEN2K


78 
	#IPPORT_RESERVED
 1024

	)

81 #ifde‡
__USE_GNU


83 
	#SCOPE_DELIMITER
 '%'

	)

88 
	$hîr‹
 (
__c⁄°
 *
__°r
Ë
__THROW
;

91 
__c⁄°
 *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

96 
	sho°ít


98 *
h_«me
;

99 **
h_Æü£s
;

100 
h_addπy≥
;

101 
h_Àngth
;

102 **
h_addr_li°
;

103 
	#h_addr
 
h_addr_li°
[0]

	)

111 
	`£tho°ít
 (
__°ay_›í
);

117 
	`ídho°ít
 ();

124 
ho°ít
 *
	`gëho°ít
 ();

131 
ho°ít
 *
	`gëho°byaddr
 (
__c⁄°
 *
__addr
, 
__sockÀn_t
 
__Àn
,

132 
__ty≥
);

138 
ho°ít
 *
	`gëho°by«me
 (
__c⁄°
 *
__«me
);

140 #ifde‡
__USE_MISC


149 
ho°ít
 *
	`gëho°by«me2
 (
__c⁄°
 *
__«me
, 
__af
);

161 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

163 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

164 *
__ª°ri˘
 
__h_î∫›
);

166 
	`gëho°byaddr_r
 (
__c⁄°
 *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

167 
__ty≥
,

168 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

169 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

170 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

171 *
__ª°ri˘
 
__h_î∫›
);

173 
	`gëho°by«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

174 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

176 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

177 *
__ª°ri˘
 
__h_î∫›
);

179 
	`gëho°by«me2_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, 
__af
,

180 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

181 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

182 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

183 *
__ª°ri˘
 
__h_î∫›
);

192 
	`£äëít
 (
__°ay_›í
);

198 
	`íd√ã¡
 ();

205 
√ã¡
 *
	`gë√ã¡
 ();

212 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

218 
√ã¡
 *
	`gë√tby«me
 (
__c⁄°
 *
__«me
);

220 #ifdef 
__USE_MISC


231 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

232 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

233 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

234 *
__ª°ri˘
 
__h_î∫›
);

236 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

237 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

238 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

239 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

240 *
__ª°ri˘
 
__h_î∫›
);

242 
	`gë√tby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

243 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

244 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

245 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

246 *
__ª°ri˘
 
__h_î∫›
);

251 
	s£rvít


253 *
s_«me
;

254 **
s_Æü£s
;

255 
s_p‹t
;

256 *
s_¥Ÿo
;

264 
	`£t£rvít
 (
__°ay_›í
);

270 
	`íd£rvít
 ();

277 
£rvít
 *
	`gë£rvít
 ();

284 
£rvít
 *
	`gë£rvby«me
 (
__c⁄°
 *
__«me
,

285 
__c⁄°
 *
__¥Ÿo
);

292 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, 
__c⁄°
 *
__¥Ÿo
);

295 #ifdef 
__USE_MISC


303 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

304 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

305 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

307 
	`gë£rvby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

308 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

309 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

310 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

311 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

313 
	`gë£rvbyp‹t_r
 (
__p‹t
, 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

321 
	s¥Ÿ€¡


323 *
p_«me
;

324 **
p_Æü£s
;

325 
p_¥Ÿo
;

333 
	`£çrŸ€¡
 (
__°ay_›í
);

339 
	`íd¥Ÿ€¡
 ();

346 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

352 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (
__c⁄°
 *
__«me
);

358 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

361 #ifdef 
__USE_MISC


369 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

370 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

371 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

373 
	`gë¥Ÿoby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

374 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

390 
	`£äëgª¡
 (
__c⁄°
 *
__√tgroup
);

398 
	`íd√tgª¡
 ();

407 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

408 **
__ª°ri˘
 
__u£Ω
,

409 **
__ª°ri˘
 
__domaöp
);

418 
	`ö√tgr
 (
__c⁄°
 *
__√tgroup
, __c⁄° *
__ho°
,

419 
__c⁄°
 *
__u£r
, __c⁄° *
domaö
);

427 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

428 **
__ª°ri˘
 
__u£Ω
,

429 **
__ª°ri˘
 
__domaöp
,

430 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

434 #ifde‡
__USE_BSD


446 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

447 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

448 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

449 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

458 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

459 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

460 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

461 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

462 
ß_Ámûy_t
 
__af
);

474 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

475 
__c⁄°
 *
__ª°ri˘
 
__«me
,

476 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

477 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

486 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

487 
__c⁄°
 *
__ª°ri˘
 
__«me
,

488 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

489 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

490 
ß_Ámûy_t
 
__af
);

500 
	`ru£rok
 (
__c⁄°
 *
__rho°
, 
__su£r
,

501 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
);

510 
	`ru£rok_af
 (
__c⁄°
 *
__rho°
, 
__su£r
,

511 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
,

512 
ß_Ámûy_t
 
__af
);

522 
	`ºesvp‹t
 (*
__Æp‹t
);

531 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

536 #ifdef 
__USE_POSIX


538 
	saddröfo


540 
ai_Êags
;

541 
ai_Ámûy
;

542 
ai_sockty≥
;

543 
ai_¥Ÿocﬁ
;

544 
sockÀn_t
 
ai_addæí
;

545 
sockaddr
 *
ai_addr
;

546 *
ai_ˇn⁄«me
;

547 
addröfo
 *
ai_√xt
;

550 #ifde‡
__USE_GNU


552 
	sgaicb


554 c⁄° *
¨_«me
;

555 c⁄° *
¨_£rvi˚
;

556 c⁄° 
addröfo
 *
¨_ªque°
;

557 
addröfo
 *
¨_ªsu…
;

559 
__ªtu∫
;

560 
__unu£d
[5];

564 
	#GAI_WAIT
 0

	)

565 
	#GAI_NOWAIT
 1

	)

569 
	#AI_PASSIVE
 0x0001

	)

570 
	#AI_CANONNAME
 0x0002

	)

571 
	#AI_NUMERICHOST
 0x0004

	)

572 
	#AI_V4MAPPED
 0x0008

	)

573 
	#AI_ALL
 0x0010

	)

574 
	#AI_ADDRCONFIG
 0x0020

	)

576 #ifde‡
__USE_GNU


577 
	#AI_IDN
 0x0040

	)

580 
	#AI_CANONIDN
 0x0080

	)

581 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

583 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

586 
	#AI_NUMERICSERV
 0x0400

	)

589 
	#EAI_BADFLAGS
 -1

	)

590 
	#EAI_NONAME
 -2

	)

591 
	#EAI_AGAIN
 -3

	)

592 
	#EAI_FAIL
 -4

	)

593 
	#EAI_NODATA
 -5

	)

594 
	#EAI_FAMILY
 -6

	)

595 
	#EAI_SOCKTYPE
 -7

	)

596 
	#EAI_SERVICE
 -8

	)

597 
	#EAI_ADDRFAMILY
 -9

	)

598 
	#EAI_MEMORY
 -10

	)

599 
	#EAI_SYSTEM
 -11

	)

600 
	#EAI_OVERFLOW
 -12

	)

601 #ifde‡
__USE_GNU


602 
	#EAI_INPROGRESS
 -100

	)

603 
	#EAI_CANCELED
 -101

	)

604 
	#EAI_NOTCANCELED
 -102

	)

605 
	#EAI_ALLDONE
 -103

	)

606 
	#EAI_INTR
 -104

	)

607 
	#EAI_IDN_ENCODE
 -105

	)

610 
	#NI_MAXHOST
 1025

	)

611 
	#NI_MAXSERV
 32

	)

613 
	#NI_NUMERICHOST
 1

	)

614 
	#NI_NUMERICSERV
 2

	)

615 
	#NI_NOFQDN
 4

	)

616 
	#NI_NAMEREQD
 8

	)

617 
	#NI_DGRAM
 16

	)

618 #ifde‡
__USE_GNU


619 
	#NI_IDN
 32

	)

620 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

622 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

631 
	`gëaddröfo
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

632 
__c⁄°
 *
__ª°ri˘
 
__£rvi˚
,

633 
__c⁄°
 
addröfo
 *
__ª°ri˘
 
__ªq
,

634 
addröfo
 **
__ª°ri˘
 
__∑i
);

637 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

640 
__c⁄°
 *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

646 
	`gë«meöfo
 (
__c⁄°
 
sockaddr
 *
__ª°ri˘
 
__ß
,

647 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

648 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

649 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

652 #ifde‡
__USE_GNU


661 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

662 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

672 
	`gai_su•íd
 (
__c⁄°
 
gaicb
 *__c⁄° 
__li°
[], 
__ít
,

673 
__c⁄°
 
time•ec
 *
__timeout
);

676 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

679 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

682 
__END_DECLS


	@/usr/include/netinet/in.h

19 #i‚def 
_NETINET_IN_H


20 
	#_NETINET_IN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°döt.h
>

24 
	~<sys/sockë.h
>

25 
	~<bôs/ty≥s.h
>

28 
__BEGIN_DECLS


33 
	mIPPROTO_IP
 = 0,

34 
	#IPPROTO_IP
 
IPPROTO_IP


	)

35 
	mIPPROTO_HOPOPTS
 = 0,

36 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

37 
	mIPPROTO_ICMP
 = 1,

38 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

39 
	mIPPROTO_IGMP
 = 2,

40 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

41 
	mIPPROTO_IPIP
 = 4,

42 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

43 
	mIPPROTO_TCP
 = 6,

44 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

45 
	mIPPROTO_EGP
 = 8,

46 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

47 
	mIPPROTO_PUP
 = 12,

48 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

49 
	mIPPROTO_UDP
 = 17,

50 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

51 
	mIPPROTO_IDP
 = 22,

52 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

53 
	mIPPROTO_TP
 = 29,

54 
	#IPPROTO_TP
 
IPPROTO_TP


	)

55 
	mIPPROTO_IPV6
 = 41,

56 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

57 
	mIPPROTO_ROUTING
 = 43,

58 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

59 
	mIPPROTO_FRAGMENT
 = 44,

60 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

61 
	mIPPROTO_RSVP
 = 46,

62 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

63 
	mIPPROTO_GRE
 = 47,

64 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

65 
	mIPPROTO_ESP
 = 50,

66 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

67 
	mIPPROTO_AH
 = 51,

68 
	#IPPROTO_AH
 
IPPROTO_AH


	)

69 
	mIPPROTO_ICMPV6
 = 58,

70 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

71 
	mIPPROTO_NONE
 = 59,

72 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

73 
	mIPPROTO_DSTOPTS
 = 60,

74 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

75 
	mIPPROTO_MTP
 = 92,

76 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

77 
	mIPPROTO_ENCAP
 = 98,

78 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

79 
	mIPPROTO_PIM
 = 103,

80 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

81 
	mIPPROTO_COMP
 = 108,

82 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

83 
	mIPPROTO_SCTP
 = 132,

84 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

85 
	mIPPROTO_RAW
 = 255,

86 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

87 
	mIPPROTO_MAX


92 
uöt16_t
 
	tö_p‹t_t
;

97 
	mIPPORT_ECHO
 = 7,

98 
	mIPPORT_DISCARD
 = 9,

99 
	mIPPORT_SYSTAT
 = 11,

100 
	mIPPORT_DAYTIME
 = 13,

101 
	mIPPORT_NETSTAT
 = 15,

102 
	mIPPORT_FTP
 = 21,

103 
	mIPPORT_TELNET
 = 23,

104 
	mIPPORT_SMTP
 = 25,

105 
	mIPPORT_TIMESERVER
 = 37,

106 
	mIPPORT_NAMESERVER
 = 42,

107 
	mIPPORT_WHOIS
 = 43,

108 
	mIPPORT_MTP
 = 57,

110 
	mIPPORT_TFTP
 = 69,

111 
	mIPPORT_RJE
 = 77,

112 
	mIPPORT_FINGER
 = 79,

113 
	mIPPORT_TTYLINK
 = 87,

114 
	mIPPORT_SUPDUP
 = 95,

117 
	mIPPORT_EXECSERVER
 = 512,

118 
	mIPPORT_LOGINSERVER
 = 513,

119 
	mIPPORT_CMDSERVER
 = 514,

120 
	mIPPORT_EFSSERVER
 = 520,

123 
	mIPPORT_BIFFUDP
 = 512,

124 
	mIPPORT_WHOSERVER
 = 513,

125 
	mIPPORT_ROUTESERVER
 = 520,

128 
	mIPPORT_RESERVED
 = 1024,

131 
	mIPPORT_USERRESERVED
 = 5000

136 
uöt32_t
 
	tö_addr_t
;

137 
	sö_addr


139 
ö_addr_t
 
	ms_addr
;

148 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

149 
	#IN_CLASSA_NET
 0xff000000

	)

150 
	#IN_CLASSA_NSHIFT
 24

	)

151 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

152 
	#IN_CLASSA_MAX
 128

	)

154 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

155 
	#IN_CLASSB_NET
 0xffff0000

	)

156 
	#IN_CLASSB_NSHIFT
 16

	)

157 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

158 
	#IN_CLASSB_MAX
 65536

	)

160 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

161 
	#IN_CLASSC_NET
 0xffffff00

	)

162 
	#IN_CLASSC_NSHIFT
 8

	)

163 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

165 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

166 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

168 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

169 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

172 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

174 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

176 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

179 
	#IN_LOOPBACKNET
 127

	)

181 #i‚de‡
INADDR_LOOPBACK


182 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

186 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

187 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

188 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

189 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

193 
	sö6_addr


197 
uöt8_t
 
	mu6_addr8
[16];

198 
uöt16_t
 
	mu6_addr16
[8];

199 
uöt32_t
 
	mu6_addr32
[4];

200 } 
	mö6_u
;

201 
	#s6_addr
 
ö6_u
.
u6_addr8


	)

202 
	#s6_addr16
 
ö6_u
.
u6_addr16


	)

203 
	#s6_addr32
 
ö6_u
.
u6_addr32


	)

206 c⁄° 
ö6_addr
 
ö6addr_™y
;

207 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

208 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

209 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

211 
	#INET_ADDRSTRLEN
 16

	)

212 
	#INET6_ADDRSTRLEN
 46

	)

215 
	~<bôs/sockë.h
>

219 
	ssockaddr_ö


221 
__SOCKADDR_COMMON
 (
sö_
);

222 
ö_p‹t_t
 
	msö_p‹t
;

223 
ö_addr
 
	msö_addr
;

226 
	msö_zîo
[ (
sockaddr
) -

227 
__SOCKADDR_COMMON_SIZE
 -

228  (
ö_p‹t_t
) -

229  (
ö_addr
)];

233 
	ssockaddr_ö6


235 
__SOCKADDR_COMMON
 (
sö6_
);

236 
ö_p‹t_t
 
	msö6_p‹t
;

237 
uöt32_t
 
	msö6_Êowöfo
;

238 
ö6_addr
 
	msö6_addr
;

239 
uöt32_t
 
	msö6_sc›e_id
;

244 
	sù_mªq


247 
ö_addr
 
	mimr_mu…üddr
;

250 
ö_addr
 
	mimr_öãrÁ˚
;

253 
	sù_mªq_sour˚


256 
ö_addr
 
	mimr_mu…üddr
;

259 
ö_addr
 
	mimr_öãrÁ˚
;

262 
ö_addr
 
	mimr_sour˚addr
;

266 
	sùv6_mªq


269 
ö6_addr
 
	mùv6mr_mu…üddr
;

272 
	mùv6mr_öãrÁ˚
;

277 
	sgroup_ªq


280 
uöt32_t
 
	mgr_öãrÁ˚
;

283 
sockaddr_°‹age
 
	mgr_group
;

286 
	sgroup_sour˚_ªq


289 
uöt32_t
 
	mg§_öãrÁ˚
;

292 
sockaddr_°‹age
 
	mg§_group
;

295 
sockaddr_°‹age
 
	mg§_sour˚
;

300 
	sù_msfûãr


303 
ö_addr
 
	mimsf_mu…üddr
;

306 
ö_addr
 
	mimsf_öãrÁ˚
;

309 
uöt32_t
 
	mimsf_fmode
;

312 
uöt32_t
 
	mimsf_num§c
;

314 
ö_addr
 
	mimsf_¶i°
[1];

317 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

318 -  (
ö_addr
) \

319 + (
num§c
Ë*  (
ö_addr
))

	)

321 
	sgroup_fûãr


324 
uöt32_t
 
	mgf_öãrÁ˚
;

327 
sockaddr_°‹age
 
	mgf_group
;

330 
uöt32_t
 
	mgf_fmode
;

333 
uöt32_t
 
	mgf_num§c
;

335 
sockaddr_°‹age
 
	mgf_¶i°
[1];

338 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

339 -  (
sockaddr_°‹age
) \

340 + ((
num§c
) \

341 *  (
sockaddr_°‹age
)))

	)

345 
	~<bôs/ö.h
>

354 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

355 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

356 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

357 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

358 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

359 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

360 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

362 
	~<ídün.h
>

365 
	~<bôs/byãsw≠.h
>

367 #ifde‡
__OPTIMIZE__


371 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


374 
	#¡ohl
(
x
Ë(x)

	)

375 
	#¡ohs
(
x
Ë(x)

	)

376 
	#ht⁄l
(
x
Ë(x)

	)

377 
	#ht⁄s
(
x
Ë(x)

	)

379 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


380 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

381 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

382 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

383 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

388 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

389 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

390 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

391 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

392 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

394 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

395 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

396 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

397 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

398 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

400 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

402 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

403 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

404 =
	`ht⁄l
 (0x„800000))

	)

406 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

407 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

408 =
	`ht⁄l
 (0x„c00000))

	)

410 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

411 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

412 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

413 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

415 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

416 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

417 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

418 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

419 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

421 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

422 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

423 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

424 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

425 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

428 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

431 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

432 
__THROW
;

435 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

436 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

437 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

439 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

440 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

441 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

443 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

444 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

445 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

447 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

448 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

449 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

451 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

452 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

453 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

456 
	sö6_pktöfo


458 
ö6_addr
 
ùi6_addr
;

459 
ùi6_ifödex
;

463 
	sù6_mtuöfo


465 
sockaddr_ö6
 
ù6m_addr
;

466 
uöt32_t
 
ù6m_mtu
;

470 #ifde‡
__USE_GNU


472 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

473 
__THROW
 
__©åibuã_dïªˇãd__
;

474 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

475 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

476 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

477 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

478 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

479 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

480 
__mu…x
, 
__∂usy
)

481 
__THROW
 
__©åibuã_dïªˇãd__
;

482 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

483 
uöt8_t
 **
__çåp
)

484 
__THROW
 
__©åibuã_dïªˇãd__
;

485 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

486 
uöt8_t
 **
__çåp
, 
__ty≥
)

487 
__THROW
 
__©åibuã_dïªˇãd__
;

491 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

492 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

493 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

494 **
__d©abuÂ
Ë
__THROW
;

495 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

496 
__THROW
;

497 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

498 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

499 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

500 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

501 **
__d©abuÂ
Ë
__THROW
;

502 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

503 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

504 **
__d©abuÂ
Ë
__THROW
;

505 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

506 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

510 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

511 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

512 
__£gmíts
Ë
__THROW
;

513 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

514 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

515 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

516 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

517 
__THROW
;

523 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

524 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

525 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

526 
__THROW
;

529 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

530 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

531 
uöt32_t
 
__num§c
,

532 
__c⁄°
 
ö_addr
 *
__¶i°
)

533 
__THROW
;

537 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

538 
__c⁄°
 
sockaddr
 *
__group
,

539 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

540 
uöt32_t
 *
__num§c
,

541 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

544 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

545 
__c⁄°
 
sockaddr
 *
__group
,

546 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

547 
uöt32_t
 
__num§c
,

548 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

551 
__END_DECLS


	@/usr/include/pthread.h

19 #i‚de‡
_PTHREAD_H


20 
	#_PTHREAD_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<ídün.h
>

24 
	~<sched.h
>

25 
	~<time.h
>

27 
	#__√ed_sig£t_t


	)

28 
	~<sig«l.h
>

29 
	~<bôs/±hªadty≥s.h
>

30 
	~<bôs/£tjmp.h
>

31 
	~<bôs/w‹dsize.h
>

37 
	mPTHREAD_CREATE_JOINABLE
,

38 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

39 
	mPTHREAD_CREATE_DETACHED


40 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

47 
	mPTHREAD_MUTEX_TIMED_NP
,

48 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

49 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

50 
	mPTHREAD_MUTEX_ADAPTIVE_NP


51 #ifde‡
__USE_UNIX98


53 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

54 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

55 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

56 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


58 #ifde‡
__USE_GNU


60 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


65 #ifde‡
__USE_GNU


69 
	mPTHREAD_MUTEX_STALLED_NP
,

70 
	mPTHREAD_MUTEX_ROBUST_NP


75 #ifde‡
__USE_UNIX98


79 
	mPTHREAD_PRIO_NONE
,

80 
	mPTHREAD_PRIO_INHERIT
,

81 
	mPTHREAD_PRIO_PROTECT


87 #i‡
__WORDSIZE
 == 64

88 
	#PTHREAD_MUTEX_INITIALIZER
 \

89 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

90 #ifde‡
__USE_GNU


91 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

92 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

93 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

94 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

95 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

96 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

99 
	#PTHREAD_MUTEX_INITIALIZER
 \

100 { { 0, 0, 0, 0, 0, { 0 } } }

	)

101 #ifde‡
__USE_GNU


102 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

103 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

104 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

105 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

106 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

107 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

113 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


116 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

119 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


123 
	#PTHREAD_RWLOCK_INITIALIZER
 \

124 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

125 #ifde‡
__USE_GNU


126 #i‡
__WORDSIZE
 == 64

127 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

129 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

131 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


132 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

133 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

134 0, 0, 0, 0 } }

	)

136 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

137 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

138 0 } }

	)

148 
	mPTHREAD_INHERIT_SCHED
,

149 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

150 
	mPTHREAD_EXPLICIT_SCHED


151 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

158 
	mPTHREAD_SCOPE_SYSTEM
,

159 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

160 
	mPTHREAD_SCOPE_PROCESS


161 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

168 
	mPTHREAD_PROCESS_PRIVATE
,

169 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

170 
	mPTHREAD_PROCESS_SHARED


171 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

177 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

181 
	s_±hªad_˛ónup_buf„r


183 (*
	m__routöe
) (*);

184 *
	m__¨g
;

185 
	m__ˇn˚…y≥
;

186 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

192 
	mPTHREAD_CANCEL_ENABLE
,

193 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

194 
	mPTHREAD_CANCEL_DISABLE


195 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

199 
	mPTHREAD_CANCEL_DEFERRED
,

200 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

201 
	mPTHREAD_CANCEL_ASYNCHRONOUS


202 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

204 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

208 
	#PTHREAD_ONCE_INIT
 0

	)

211 #ifde‡
__USE_XOPEN2K


215 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

219 
__BEGIN_DECLS


224 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

225 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

226 *(*
__°¨t_routöe
) (*),

227 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

233 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

241 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

243 #ifde‡
__USE_GNU


246 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

254 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

255 
__c⁄°
 
time•ec
 *
__ab°ime
);

262 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

266 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

269 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

277 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

280 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1));

284 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

285 *
__dëach°©e
)

286 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

289 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

290 
__dëach°©e
)

291 
__THROW
 
	`__n⁄nuŒ
 ((1));

295 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

296 
size_t
 *
__gu¨dsize
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

300 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

301 
size_t
 
__gu¨dsize
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1));

306 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


307 
__©å
,

308 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

309 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

312 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

313 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


314 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

317 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


318 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

319 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

322 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

326 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


327 
__©å
, *
__ª°ri˘
 
__öhîô
)

328 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

331 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

332 
__öhîô
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1));

337 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

338 *
__ª°ri˘
 
__sc›e
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

343 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


347 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

354 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

355 *
__°ackaddr
)

356 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

359 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


360 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

366 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

367 
size_t
 
__°acksize
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1));

370 #ifde‡
__USE_XOPEN2K


372 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

373 **
__ª°ri˘
 
__°ackaddr
,

374 
size_t
 *
__ª°ri˘
 
__°acksize
)

375 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

380 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

381 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

384 #ifde‡
__USE_GNU


387 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

388 
size_t
 
__˝u£tsize
,

389 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

394 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

395 
size_t
 
__˝u£tsize
,

396 
˝u_£t_t
 *
__˝u£t
)

397 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

403 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

404 
__THROW
 
	`__n⁄nuŒ
 ((2));

412 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

413 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

414 
__THROW
 
	`__n⁄nuŒ
 ((3));

417 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

418 *
__ª°ri˘
 
__pﬁicy
,

419 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

420 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

423 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

424 
__THROW
;

427 #ifde‡
__USE_UNIX98


429 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

432 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

435 #ifde‡
__USE_GNU


440 
	$±hªad_yõld
 (Ë
__THROW
;

445 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

446 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

447 
__THROW
 
	`__n⁄nuŒ
 ((3));

450 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

451 
˝u_£t_t
 *
__˝u£t
)

452 
__THROW
 
	`__n⁄nuŒ
 ((3));

465 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

466 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

477 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

481 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

484 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

489 
	`±hªad_ã°ˇn˚l
 ();

498 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

499 
__mask_was_ßved
;

500 } 
__ˇn˚l_jmp_buf
[1];

501 *
__∑d
[4];

502 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

505 #i‚de‡
__˛ónup_f˘_©åibuã


506 
	#__˛ónup_f˘_©åibuã


	)

511 
	s__±hªad_˛ónup_‰ame


513 (*
__ˇn˚l_routöe
) (*);

514 *
__ˇn˚l_¨g
;

515 
__do_ô
;

516 
__ˇn˚l_ty≥
;

519 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


520 #ifde‡
__˝lu•lus


522 ˛as†
	c__±hªad_˛ónup_˛ass


524 (*
__ˇn˚l_routöe
) (*);

525 *
__ˇn˚l_¨g
;

526 
__do_ô
;

527 
__ˇn˚l_ty≥
;

529 
public
:

530 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

531 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	`__do_ô
 (1) { }

532 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

533 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

534 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

535 &
__ˇn˚l_ty≥
); 
	}
}

536 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

546 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

548 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

552 
	#±hªad_˛ónup_p›
(
execuã
) \

553 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

554 } 0)

	)

556 #ifde‡
__USE_GNU


560 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

562 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

563 
__˛‰ame
.
	`__de„r
 ()

	)

568 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

569 
__˛‰ame
.
	`__ª°‹e
 (); \

570 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

571 } 0)

	)

578 
__ölöe
 

579 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

581 i‡(
__‰ame
->
__do_ô
)

582 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

583 
	}
}

592 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

594 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

595 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

596 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

597 .
__do_ô
 = 1 };

	)

601 
	#±hªad_˛ónup_p›
(
execuã
) \

602 
__˛‰ame
.
__do_ô
 = (
execuã
); \

603 } 0)

	)

605 #ifde‡
__USE_GNU


609 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

611 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

612 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

613 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

614 .
__do_ô
 = 1 }; \

615 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

616 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

621 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

622 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

623 
__˛‰ame
.
__do_ô
 = (
execuã
); \

624 } 0)

	)

635 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

637 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

638 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

639 *
__ˇn˚l_¨g
 = (
¨g
); \

640 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) \

641 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

642 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

644 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

645 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

649 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

650 dÿ{

	)

651 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

652 
__˛ónup_f˘_©åibuã
;

656 
	#±hªad_˛ónup_p›
(
execuã
) \

658 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

659 i‡(
execuã
) \

660 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

661 } 0)

	)

662 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

663 
__˛ónup_f˘_©åibuã
;

665 #ifde‡
__USE_GNU


669 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

671 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

672 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

673 *
__ˇn˚l_¨g
 = (
¨g
); \

674 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) \

675 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

676 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

678 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

679 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

683 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

684 dÿ{

	)

685 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

686 
__˛ónup_f˘_©åibuã
;

691 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

693 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

694 i‡(
execuã
) \

695 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

696 
	}
} 0)

	)

697 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

698 
__˛ónup_f˘_©åibuã
;

702 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

703 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

704 #i‚de‡
SHARED


705 
	`__©åibuã__
 ((
__wók__
))

711 
__jmp_buf_èg
;

712 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

718 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

719 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

720 
__THROW
 
	`__n⁄nuŒ
 ((1));

723 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1));

727 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

728 
__THROW
 
	`__n⁄nuŒ
 ((1));

731 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

732 
__THROW
 
	`__n⁄nuŒ
 ((1));

734 #ifde‡
__USE_XOPEN2K


736 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

737 
__c⁄°
 
time•ec
 *
__ª°ri˘


738 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

742 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROW
 
	`__n⁄nuŒ
 ((1));

746 #ifde‡
__USE_UNIX98


748 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

749 
__ª°ri˘
 
__muãx
,

750 *
__ª°ri˘
 
__¥io˚ûög
)

751 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

755 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

756 
__¥io˚ûög
,

757 *
__ª°ri˘
 
__ﬁd_˚ûög
)

758 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

762 #ifde‡
__USE_GNU


764 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1));

773 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

774 
__THROW
 
	`__n⁄nuŒ
 ((1));

777 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

781 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

782 
__ª°ri˘
 
__©å
,

783 *
__ª°ri˘
 
__psh¨ed
)

784 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

787 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

788 
__psh¨ed
)

789 
__THROW
 
	`__n⁄nuŒ
 ((1));

791 #ifde‡
__USE_UNIX98


793 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


794 
__©å
, *
__ª°ri˘
 
__köd
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

800 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1));

804 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

805 
__ª°ri˘
 
__©å
,

806 *
__ª°ri˘
 
__¥Ÿocﬁ
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

811 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

812 
__¥Ÿocﬁ
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1));

816 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

817 
__ª°ri˘
 
__©å
,

818 *
__ª°ri˘
 
__¥io˚ûög
)

819 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

822 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

823 
__¥io˚ûög
)

824 
__THROW
 
	`__n⁄nuŒ
 ((1));

827 #ifde‡
__USE_GNU


829 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

830 *
__robu°√ss
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

834 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

835 
__robu°√ss
)

836 
__THROW
 
	`__n⁄nuŒ
 ((1));

840 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


845 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

846 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


847 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

850 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

851 
__THROW
 
	`__n⁄nuŒ
 ((1));

854 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

855 
__THROW
 
	`__n⁄nuŒ
 ((1));

858 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

859 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 #ifde‡
__USE_XOPEN2K


863 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

864 
__c⁄°
 
time•ec
 *
__ª°ri˘


865 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

869 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

870 
__THROW
 
	`__n⁄nuŒ
 ((1));

873 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

876 #ifde‡
__USE_XOPEN2K


878 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

879 
__c⁄°
 
time•ec
 *
__ª°ri˘


880 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

884 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

891 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

892 
__THROW
 
	`__n⁄nuŒ
 ((1));

895 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

896 
__THROW
 
	`__n⁄nuŒ
 ((1));

899 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

900 
__ª°ri˘
 
__©å
,

901 *
__ª°ri˘
 
__psh¨ed
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

905 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

906 
__psh¨ed
)

907 
__THROW
 
	`__n⁄nuŒ
 ((1));

910 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

911 
__ª°ri˘
 
__©å
,

912 *
__ª°ri˘
 
__¥ef
)

913 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

916 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

917 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

926 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


927 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

930 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

931 
__THROW
 
	`__n⁄nuŒ
 ((1));

934 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

935 
__THROW
 
	`__n⁄nuŒ
 ((1));

938 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

939 
__THROW
 
	`__n⁄nuŒ
 ((1));

946 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

947 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

948 
	`__n⁄nuŒ
 ((1, 2));

957 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

958 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

959 
__c⁄°
 
time•ec
 *
__ª°ri˘


960 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

965 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

966 
__THROW
 
	`__n⁄nuŒ
 ((1));

969 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

970 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

974 
__ª°ri˘
 
__©å
,

975 *
__ª°ri˘
 
__psh¨ed
)

976 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

979 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

980 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

982 #ifde‡
__USE_XOPEN2K


984 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

985 
__ª°ri˘
 
__©å
,

986 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

987 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

990 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

991 
__˛ockid_t
 
__˛ock_id
)

992 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 #ifde‡
__USE_XOPEN2K


1001 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1002 
__THROW
 
	`__n⁄nuŒ
 ((1));

1005 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1010 
__THROW
 
	`__n⁄nuŒ
 ((1));

1013 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1));

1017 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1018 
__THROW
 
	`__n⁄nuŒ
 ((1));

1025 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1026 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1027 
__©å
, 
__cou¡
)

1028 
__THROW
 
	`__n⁄nuŒ
 ((1));

1031 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1032 
__THROW
 
	`__n⁄nuŒ
 ((1));

1035 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1036 
__THROW
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1048 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1049 
__ª°ri˘
 
__©å
,

1050 *
__ª°ri˘
 
__psh¨ed
)

1051 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1054 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1055 
__psh¨ed
)

1056 
__THROW
 
	`__n⁄nuŒ
 ((1));

1068 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1069 (*
__de°r_fun˘i⁄
) (*))

1070 
__THROW
 
	`__n⁄nuŒ
 ((1));

1073 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1076 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1079 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1080 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1083 #ifde‡
__USE_XOPEN2K


1085 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1086 
__˛ockid_t
 *
__˛ock_id
)

1087 
__THROW
 
	`__n⁄nuŒ
 ((2));

1102 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1103 (*
__∑ª¡
) (),

1104 (*
__chûd
Ë()Ë
__THROW
;

1107 #ifde‡
__USE_EXTERN_INLINES


1109 
__ölöe
 

1110 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1112  
__thªad1
 =
__thªad2
;

1113 
	}
}

1116 
__END_DECLS


	@/usr/include/regex.h

22 #i‚de‡
_REGEX_H


23 
	#_REGEX_H
 1

	)

25 
	~<sys/ty≥s.h
>

28 #ifde‡
__˝lu•lus


36 
	ts_ªg_t
;

37 
	ta˘ive_ªg_t
;

44 
	tªg_sy¡ax_t
;

48 
	#RE_BACKSLASH_ESCAPE_IN_LISTS
 ((Ë1)

	)

53 
	#RE_BK_PLUS_QM
 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 << 1)

	)

59 
	#RE_CHAR_CLASSES
 (
RE_BK_PLUS_QM
 << 1)

	)

73 
	#RE_CONTEXT_INDEP_ANCHORS
 (
RE_CHAR_CLASSES
 << 1)

	)

81 
	#RE_CONTEXT_INDEP_OPS
 (
RE_CONTEXT_INDEP_ANCHORS
 << 1)

	)

85 
	#RE_CONTEXT_INVALID_OPS
 (
RE_CONTEXT_INDEP_OPS
 << 1)

	)

89 
	#RE_DOT_NEWLINE
 (
RE_CONTEXT_INVALID_OPS
 << 1)

	)

93 
	#RE_DOT_NOT_NULL
 (
RE_DOT_NEWLINE
 << 1)

	)

97 
	#RE_HAT_LISTS_NOT_NEWLINE
 (
RE_DOT_NOT_NULL
 << 1)

	)

102 
	#RE_INTERVALS
 (
RE_HAT_LISTS_NOT_NEWLINE
 << 1)

	)

106 
	#RE_LIMITED_OPS
 (
RE_INTERVALS
 << 1)

	)

110 
	#RE_NEWLINE_ALT
 (
RE_LIMITED_OPS
 << 1)

	)

115 
	#RE_NO_BK_BRACES
 (
RE_NEWLINE_ALT
 << 1)

	)

119 
	#RE_NO_BK_PARENS
 (
RE_NO_BK_BRACES
 << 1)

	)

123 
	#RE_NO_BK_REFS
 (
RE_NO_BK_PARENS
 << 1)

	)

127 
	#RE_NO_BK_VBAR
 (
RE_NO_BK_REFS
 << 1)

	)

133 
	#RE_NO_EMPTY_RANGES
 (
RE_NO_BK_VBAR
 << 1)

	)

137 
	#RE_UNMATCHED_RIGHT_PAREN_ORD
 (
RE_NO_EMPTY_RANGES
 << 1)

	)

141 
	#RE_NO_POSIX_BACKTRACKING
 (
RE_UNMATCHED_RIGHT_PAREN_ORD
 << 1)

	)

145 
	#RE_NO_GNU_OPS
 (
RE_NO_POSIX_BACKTRACKING
 << 1)

	)

153 
	#RE_DEBUG
 (
RE_NO_GNU_OPS
 << 1)

	)

158 
	#RE_INVALID_INTERVAL_ORD
 (
RE_DEBUG
 << 1)

	)

162 
	#RE_ICASE
 (
RE_INVALID_INTERVAL_ORD
 << 1)

	)

167 
	#RE_CARET_ANCHORS_HERE
 (
RE_ICASE
 << 1)

	)

171 
	#RE_CONTEXT_INVALID_DUP
 (
RE_CARET_ANCHORS_HERE
 << 1)

	)

175 
	#RE_NO_SUB
 (
RE_CONTEXT_INVALID_DUP
 << 1)

	)

181 
ªg_sy¡ax_t
 
ª_sy¡ax_›ti⁄s
;

187 
	#RE_SYNTAX_EMACS
 0

	)

189 
	#RE_SYNTAX_AWK
 \

190 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 | 
RE_DOT_NOT_NULL
 \

191 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

192 | 
RE_NO_BK_VBAR
 | 
RE_NO_EMPTY_RANGES
 \

193 | 
RE_DOT_NEWLINE
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

194 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
 | 
RE_NO_GNU_OPS
)

	)

196 
	#RE_SYNTAX_GNU_AWK
 \

197 ((
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 | 
RE_DEBUG
) \

198 & ~(
RE_DOT_NOT_NULL
 | 
RE_INTERVALS
 | 
RE_CONTEXT_INDEP_OPS
 \

199 | 
RE_CONTEXT_INVALID_OPS
 ))

	)

201 
	#RE_SYNTAX_POSIX_AWK
 \

202 (
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 \

203 | 
RE_INTERVALS
 | 
RE_NO_GNU_OPS
)

	)

205 
	#RE_SYNTAX_GREP
 \

206 (
RE_BK_PLUS_QM
 | 
RE_CHAR_CLASSES
 \

207 | 
RE_HAT_LISTS_NOT_NEWLINE
 | 
RE_INTERVALS
 \

208 | 
RE_NEWLINE_ALT
)

	)

210 
	#RE_SYNTAX_EGREP
 \

211 (
RE_CHAR_CLASSES
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

212 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_HAT_LISTS_NOT_NEWLINE
 \

213 | 
RE_NEWLINE_ALT
 | 
RE_NO_BK_PARENS
 \

214 | 
RE_NO_BK_VBAR
)

	)

216 
	#RE_SYNTAX_POSIX_EGREP
 \

217 (
RE_SYNTAX_EGREP
 | 
RE_INTERVALS
 | 
RE_NO_BK_BRACES
 \

218 | 
RE_INVALID_INTERVAL_ORD
)

	)

221 
	#RE_SYNTAX_ED
 
RE_SYNTAX_POSIX_BASIC


	)

223 
	#RE_SYNTAX_SED
 
RE_SYNTAX_POSIX_BASIC


	)

226 
	#_RE_SYNTAX_POSIX_COMMON
 \

227 (
RE_CHAR_CLASSES
 | 
RE_DOT_NEWLINE
 | 
RE_DOT_NOT_NULL
 \

228 | 
RE_INTERVALS
 | 
RE_NO_EMPTY_RANGES
)

	)

230 
	#RE_SYNTAX_POSIX_BASIC
 \

231 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_BK_PLUS_QM
 | 
RE_CONTEXT_INVALID_DUP
)

	)

236 
	#RE_SYNTAX_POSIX_MINIMAL_BASIC
 \

237 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_LIMITED_OPS
)

	)

239 
	#RE_SYNTAX_POSIX_EXTENDED
 \

240 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

241 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_NO_BK_BRACES
 \

242 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_VBAR
 \

243 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

247 
	#RE_SYNTAX_POSIX_MINIMAL_EXTENDED
 \

248 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

249 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_NO_BK_BRACES
 \

250 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

251 | 
RE_NO_BK_VBAR
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

257 #ifde‡
RE_DUP_MAX


258 #unde‡
RE_DUP_MAX


261 
	#RE_DUP_MAX
 (0x7fff)

	)

268 
	#REG_EXTENDED
 1

	)

272 
	#REG_ICASE
 (
REG_EXTENDED
 << 1)

	)

277 
	#REG_NEWLINE
 (
REG_ICASE
 << 1)

	)

281 
	#REG_NOSUB
 (
REG_NEWLINE
 << 1)

	)

291 
	#REG_NOTBOL
 1

	)

294 
	#REG_NOTEOL
 (1 << 1)

	)

298 
	#REG_STARTEND
 (1 << 2)

	)

305 #ifde‡
_XOPEN_SOURCE


306 
	gREG_ENOSYS
 = -1,

309 
	gREG_NOERROR
 = 0,

310 
	gREG_NOMATCH
,

314 
	gREG_BADPAT
,

315 
	gREG_ECOLLATE
,

316 
	gREG_ECTYPE
,

317 
	gREG_EESCAPE
,

318 
	gREG_ESUBREG
,

319 
	gREG_EBRACK
,

320 
	gREG_EPAREN
,

321 
	gREG_EBRACE
,

322 
	gREG_BADBR
,

323 
	gREG_ERANGE
,

324 
	gREG_ESPACE
,

325 
	gREG_BADRPT
,

328 
	gREG_EEND
,

329 
	gREG_ESIZE
,

330 
	gREG_ERPAREN


331 } 
	tªg_îrcode_t
;

339 #i‚de‡
RE_TRANSLATE_TYPE


340 
	#RE_TRANSLATE_TYPE
 *

	)

343 
	sª_∑âîn_buf„r


348 *
	gbuf„r
;

351 
	gÆloˇãd
;

354 
	gu£d
;

357 
ªg_sy¡ax_t
 
	gsy¡ax
;

362 *
	gÁ°m≠
;

368 
RE_TRANSLATE_TYPE
 
	gå™¶©e
;

371 
size_t
 
	gª_nsub
;

377 
	gˇn_be_nuŒ
 : 1;

383 
	#REGS_UNALLOCATED
 0

	)

384 
	#REGS_REALLOCATE
 1

	)

385 
	#REGS_FIXED
 2

	)

386 
	gªgs_Æloˇãd
 : 2;

390 
	gÁ°m≠_accuøã
 : 1;

394 
	gno_sub
 : 1;

398 
	gnŸ_bﬁ
 : 1;

401 
	gnŸ_eﬁ
 : 1;

404 
	g√wlöe_™ch‹
 : 1;

407 
ª_∑âîn_buf„r
 
	tªgex_t
;

410 
	tªgoff_t
;

415 
	sª_ªgi°îs


417 
	gnum_ªgs
;

418 
ªgoff_t
 *
	g°¨t
;

419 
ªgoff_t
 *
	gíd
;

426 #i‚de‡
RE_NREGS


427 
	#RE_NREGS
 30

	)

436 
ªgoff_t
 
	grm_so
;

437 
ªgoff_t
 
	grm_eo
;

438 } 
	tªgm©ch_t
;

444 
ªg_sy¡ax_t
 
ª_£t_sy¡ax
 (ªg_sy¡ax_à
__sy¡ax
);

449 c⁄° *
ª_compûe_∑âîn
 (c⁄° *
__∑âîn
, 
size_t
 
__Àngth
,

450 
ª_∑âîn_buf„r
 *
__buf„r
);

456 
ª_compûe_Á°m≠
 (
ª_∑âîn_buf„r
 *
__buf„r
);

464 
ª_£¨ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

465 
__Àngth
, 
__°¨t
, 
__ønge
,

466 
ª_ªgi°îs
 *
__ªgs
);

471 
ª_£¨ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

472 c⁄° *
__°rög1
, 
__Àngth1
,

473 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

474 
__ønge
, 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

479 
ª_m©ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

480 
__Àngth
, 
__°¨t
, 
ª_ªgi°îs
 *
__ªgs
);

484 
ª_m©ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

485 c⁄° *
__°rög1
, 
__Àngth1
,

486 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

487 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

502 
ª_£t_ªgi°îs
 (
ª_∑âîn_buf„r
 *
__buf„r
,

503 
ª_ªgi°îs
 *
__ªgs
,

504 
__num_ªgs
,

505 
ªgoff_t
 *
__°¨ts
,Ñegoff_à*
__íds
);

507 #i‡
deföed
 
_REGEX_RE_COMP
 || deföed 
_LIBC


508 #i‚de‡
_CRAY


510 *
ª_comp
 (const *);

511 
ª_exec
 (const *);

517 #i‚de‡
__ª°ri˘


518 #i‡! (2 < 
__GNUC__
 || (2 =__GNUC__ && 95 <
__GNUC_MINOR__
))

519 #i‡
deföed
 
ª°ri˘
 || 199901L <
__STDC_VERSION__


520 
	#__ª°ri˘
 
ª°ri˘


	)

522 
	#__ª°ri˘


	)

527 #i‚de‡
__ª°ri˘_¨r


528 #i‡(
__GNUC__
 > 3 || (__GNUC__ =3 && 
__GNUC_MINOR__
 >= 1)) \

529 && !
deföed
 
	g__GNUG__


530 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

532 
	#__ª°ri˘_¨r


	)

537 
ªgcomp
 (
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

538 c⁄° *
__ª°ri˘
 
__∑âîn
,

539 
__cÊags
);

541 
ªgexec
 (c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

542 c⁄° *
__ª°ri˘
 
__°rög
, 
size_t
 
__nm©ch
,

543 
ªgm©ch_t
 
__pm©ch
[
__ª°ri˘_¨r
],

544 
__eÊags
);

546 
size_t
 
ªgîr‹
 (
__îrcode
, c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

547 *
__ª°ri˘
 
__îrbuf
, 
size_t
 
__îrbuf_size
);

549 
ªg‰ì
 (
ªgex_t
 *
__¥eg
);

552 #ifde‡
__˝lu•lus


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

75 (*
	t__sigh™dÀr_t
) ();

80 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

82 #ifde‡
__USE_GNU


83 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

84 
__THROW
;

90 
__BEGIN_NAMESPACE_STD


91 #ifde‡
__USE_BSD


92 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

96 #ifde‡
__REDIRECT_NTH


97 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

98 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

99 
__sysv_sig«l
);

101 
	#sig«l
 
__sysv_sig«l


	)

104 
__END_NAMESPACE_STD


106 #ifde‡
__USE_XOPEN


109 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

110 
__THROW
;

116 #ifde‡
__USE_POSIX


117 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

120 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


124 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

127 
__BEGIN_NAMESPACE_STD


129 
	$øi£
 (
__sig
Ë
__THROW
;

130 
__END_NAMESPACE_STD


132 #ifde‡
__USE_SVID


134 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

135 
__THROW
;

136 
	$gsig«l
 (
__sig
Ë
__THROW
;

139 #ifde‡
__USE_MISC


141 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 #ifde‡
__FAVOR_BSD


158 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

160 #ifde‡
__USE_XOPEN


161 #ifde‡
__GNUC__


162 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

165 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

171 #ifde‡
__USE_BSD


178 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

181 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

184 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

187 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

191 #ifde‡
__USE_MISC


192 
	#NSIG
 
_NSIG


	)

195 #ifde‡
__USE_GNU


196 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

200 #ifde‡
__USE_BSD


201 
__sigh™dÀr_t
 
	tsig_t
;

204 #ifde‡
__USE_POSIX


206 #ifde‡
__USE_POSIX199309


208 
	#__√ed_time•ec


	)

209 
	~<time.h
>

212 
	~<bôs/sigöfo.h
>

216 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

229 
__THROW
 
	`__n⁄nuŒ
 ((1));

231 #ifde‡
__USE_GNU


233 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

236 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

237 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

240 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

241 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	~<bôs/siga˘i⁄.h
>

249 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

250 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

257 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

260 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

261 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

264 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

271 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 #ifde‡
__USE_POSIX199309


279 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

280 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

287 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

288 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

289 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

290 
	`__n⁄nuŒ
 ((1));

294 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

295 
__THROW
;

300 #ifde‡
__USE_BSD


304 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

305 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

308 
	ssigvec


310 
__sigh™dÀr_t
 
sv_h™dÀr
;

311 
sv_mask
;

313 
sv_Êags
;

314 
	#sv_⁄°ack
 
sv_Êags


	)

318 
	#SV_ONSTACK
 (1 << 0)

	)

319 
	#SV_INTERRUPT
 (1 << 1)

	)

320 
	#SV_RESETHAND
 (1 << 2)

	)

328 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

329 
sigvec
 *
__ovec
Ë
__THROW
;

333 
	~<bôs/sigc⁄ãxt.h
>

336 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

341 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


346 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

348 
	~<bôs/sig°ack.h
>

349 #ifde‡
__USE_XOPEN


351 
	~<sys/uc⁄ãxt.h
>

357 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

358 
__THROW
 
__©åibuã_dïªˇãd__
;

362 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

363 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

367 #ifde‡
__USE_XOPEN_EXTENDED


371 
	$sighﬁd
 (
__sig
Ë
__THROW
;

374 
	$sigªl£
 (
__sig
Ë
__THROW
;

377 
	$sigign‹e
 (
__sig
Ë
__THROW
;

380 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

383 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


386 
	~<bôs/±hªadty≥s.h
>

387 
	~<bôs/sigthªad.h
>

394 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

396 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

400 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
__BEGIN_NAMESPACE_STD


46 
_IO_FILE
 
	tFILE
;

47 
	g__END_NAMESPACE_STD


48 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

49 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

50 || 
deföed
 
__USE_POSIX2


51 
	$__USING_NAMESPACE_STD
(
FILE
)

54 
	#__FILE_deföed
 1

	)

56 #unde‡
__√ed_FILE


59 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


62 
_IO_FILE
 
	t__FILE
;

64 
	#____FILE_deföed
 1

	)

66 #unde‡
__√ed___FILE


69 #ifdef 
_STDIO_H


70 
	#_STDIO_USES_IOSTREAM


	)

72 
	~<libio.h
>

74 #ifde‡
__USE_XOPEN


75 #ifde‡
__GNUC__


76 #i‚de‡
_VA_LIST_DEFINED


77 
_G_va_li°
 
	tva_li°
;

78 
	#_VA_LIST_DEFINED


	)

81 
	~<°d¨g.h
>

86 
__BEGIN_NAMESPACE_STD


87 #i‚de‡
__USE_FILE_OFFSET64


88 
_G_Âos_t
 
	tÂos_t
;

90 
_G_Âos64_t
 
	tÂos_t
;

92 
__END_NAMESPACE_STD


93 #ifde‡
__USE_LARGEFILE64


94 
_G_Âos64_t
 
	tÂos64_t
;

98 
	#_IOFBF
 0

	)

99 
	#_IOLBF
 1

	)

100 
	#_IONBF
 2

	)

104 #i‚de‡
BUFSIZ


105 
	#BUFSIZ
 
_IO_BUFSIZ


	)

111 #i‚de‡
EOF


112 
	#EOF
 (-1)

	)

118 
	#SEEK_SET
 0

	)

119 
	#SEEK_CUR
 1

	)

120 
	#SEEK_END
 2

	)

123 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


125 
	#P_tmpdú
 "/tmp"

	)

138 
	~<bôs/°dio_lim.h
>

142 
_IO_FILE
 *
°dö
;

143 
_IO_FILE
 *
°dout
;

144 
_IO_FILE
 *
°dîr
;

145 #ifde‡
__STDC__


147 
	#°dö
 
°dö


	)

148 
	#°dout
 
°dout


	)

149 
	#°dîr
 
°dîr


	)

152 
__BEGIN_NAMESPACE_STD


154 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

156 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_ATFILE


161 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

162 
__c⁄°
 *
__√w
Ë
__THROW
;

165 
__BEGIN_NAMESPACE_STD


170 #i‚de‡
__USE_FILE_OFFSET64


171 
FILE
 *
	`tmpfûe
 ();

173 #ifde‡
__REDIRECT


174 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
);

176 
	#tmpfûe
 
tmpfûe64


	)

180 #ifde‡
__USE_LARGEFILE64


181 
FILE
 *
	`tmpfûe64
 ();

185 *
	$tm≤am
 (*
__s
Ë
__THROW
;

186 
__END_NAMESPACE_STD


188 #ifde‡
__USE_MISC


191 *
	$tm≤am_r
 (*
__s
Ë
__THROW
;

195 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


203 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

204 
__THROW
 
__©åibuã_mÆloc__
;

208 
__BEGIN_NAMESPACE_STD


213 
	`f˛o£
 (
FILE
 *
__°ªam
);

218 
	`fÊush
 (
FILE
 *
__°ªam
);

219 
__END_NAMESPACE_STD


221 #ifde‡
__USE_MISC


228 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

231 #ifde‡
__USE_GNU


238 
	`f˛o£Æl
 ();

242 
__BEGIN_NAMESPACE_STD


243 #i‚de‡
__USE_FILE_OFFSET64


248 
FILE
 *
	`f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

249 
__c⁄°
 *
__ª°ri˘
 
__modes
);

254 
FILE
 *
	`‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

255 
__c⁄°
 *
__ª°ri˘
 
__modes
,

256 
FILE
 *
__ª°ri˘
 
__°ªam
);

258 #ifde‡
__REDIRECT


259 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

260 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
);

261 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

262 
__c⁄°
 *
__ª°ri˘
 
__modes
,

263 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
);

265 
	#f›í
 
f›í64


	)

266 
	#‰e›í
 
‰e›í64


	)

269 
__END_NAMESPACE_STD


270 #ifde‡
__USE_LARGEFILE64


271 
FILE
 *
	`f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

272 
__c⁄°
 *
__ª°ri˘
 
__modes
);

273 
FILE
 *
	`‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
);

278 #ifdef 
__USE_POSIX


280 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
;

283 #ifdef 
__USE_GNU


286 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

287 
__c⁄°
 *
__ª°ri˘
 
__modes
,

288 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
;

291 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
Ë
__THROW
;

296 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

300 
__BEGIN_NAMESPACE_STD


303 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

307 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

308 
__modes
, 
size_t
 
__n
Ë
__THROW
;

309 
__END_NAMESPACE_STD


311 #ifdef 
__USE_BSD


314 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

315 
size_t
 
__size
Ë
__THROW
;

318 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

322 
__BEGIN_NAMESPACE_STD


327 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

328 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

333 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

335 
	$•rötf
 (*
__ª°ri˘
 
__s
,

336 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

342 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

343 
_G_va_li°
 
__¨g
);

348 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

350 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

351 
_G_va_li°
 
__¨g
Ë
__THROW
;

352 
__END_NAMESPACE_STD


354 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


355 
__BEGIN_NAMESPACE_C99


357 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

359 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

361 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

362 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

363 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

364 
__END_NAMESPACE_C99


367 #ifde‡
__USE_GNU


370 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

371 
_G_va_li°
 
__¨g
)

372 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

373 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

374 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

375 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

376 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

377 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

378 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

386 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

387 
_G_va_li°
 
__¨g
)

388 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

389 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

390 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

394 
__BEGIN_NAMESPACE_STD


399 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

400 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

405 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

407 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

408 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

409 
__END_NAMESPACE_STD


411 #ifdef 
__USE_ISOC99


412 
__BEGIN_NAMESPACE_C99


417 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

418 
_G_va_li°
 
__¨g
)

419 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

425 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

426 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

429 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

430 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

431 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

432 
__END_NAMESPACE_C99


436 
__BEGIN_NAMESPACE_STD


441 
	`fgëc
 (
FILE
 *
__°ªam
);

442 
	`gëc
 (
FILE
 *
__°ªam
);

448 
	`gëch¨
 ();

449 
__END_NAMESPACE_STD


453 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

455 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


460 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

461 
	`gëch¨_u∆ocked
 ();

464 #ifde‡
__USE_MISC


471 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

475 
__BEGIN_NAMESPACE_STD


483 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

484 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

490 
	`putch¨
 (
__c
);

491 
__END_NAMESPACE_STD


495 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

497 #ifde‡
__USE_MISC


504 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

507 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


512 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

513 
	`putch¨_u∆ocked
 (
__c
);

517 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

518 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

520 
	`gëw
 (
FILE
 *
__°ªam
);

523 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

527 
__BEGIN_NAMESPACE_STD


532 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

533 
__wur
;

540 *
	$gës
 (*
__s
Ë
__wur
;

541 
__END_NAMESPACE_STD


543 #ifde‡
__USE_GNU


550 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

551 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

555 #ifdef 
__USE_GNU


566 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

567 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

568 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

569 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

570 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

571 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

579 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

580 
size_t
 *
__ª°ri˘
 
__n
,

581 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

585 
__BEGIN_NAMESPACE_STD


590 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

596 
	`puts
 (
__c⁄°
 *
__s
);

603 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

610 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

611 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

616 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

617 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__wur
;

618 
__END_NAMESPACE_STD


620 #ifde‡
__USE_GNU


627 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

628 
FILE
 *
__ª°ri˘
 
__°ªam
);

631 #ifde‡
__USE_MISC


638 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

639 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

640 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

641 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

645 
__BEGIN_NAMESPACE_STD


650 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

655 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

660 
	`ªwöd
 (
FILE
 *
__°ªam
);

661 
__END_NAMESPACE_STD


668 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


669 #i‚de‡
__USE_FILE_OFFSET64


674 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

679 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

681 #ifde‡
__REDIRECT


682 
	`__REDIRECT
 (
f£eko
,

683 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

684 
f£eko64
);

685 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

687 
	#f£eko
 
f£eko64


	)

688 
	#·ñlo
 
·ñlo64


	)

693 
__BEGIN_NAMESPACE_STD


694 #i‚de‡
__USE_FILE_OFFSET64


699 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

704 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

708 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

709 
	`__REDIRECT
 (
f£ços
,

710 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

712 
	#fgëpos
 
fgëpos64


	)

713 
	#f£ços
 
f£ços64


	)

716 
__END_NAMESPACE_STD


718 #ifde‡
__USE_LARGEFILE64


719 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

720 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

721 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

722 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

725 
__BEGIN_NAMESPACE_STD


727 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

729 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

731 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

732 
__END_NAMESPACE_STD


734 #ifde‡
__USE_MISC


736 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

737 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

738 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

742 
__BEGIN_NAMESPACE_STD


747 
	`≥º‹
 (
__c⁄°
 *
__s
);

748 
__END_NAMESPACE_STD


754 
	~<bôs/sys_îæi°.h
>

757 #ifdef 
__USE_POSIX


759 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

762 #ifde‡
__USE_MISC


764 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

768 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

769 
deföed
 
__USE_MISC
)

774 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

780 
	`p˛o£
 (
FILE
 *
__°ªam
);

784 #ifdef 
__USE_POSIX


786 *
	$˘îmid
 (*
__s
Ë
__THROW
;

790 #ifde‡
__USE_XOPEN


792 *
	`cu£rid
 (*
__s
);

796 #ifdef 
__USE_GNU


797 
ob°ack
;

800 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

801 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

802 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

803 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

804 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

805 
_G_va_li°
 
__¨gs
)

806 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

810 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


814 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

818 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

821 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

824 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


828 
	#__√ed_gë›t


	)

829 
	~<gë›t.h
>

834 #ifde‡
__USE_EXTERN_INLINES


835 
	~<bôs/°dio.h
>

837 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


838 
	~<bôs/°dio2.h
>

840 #ifde‡
__LDBL_COMPAT


841 
	~<bôs/°dio-ldbl.h
>

844 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 ({ uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; } 
__u
; \

53 
__u
.
__ö
 = (
°©us
); __u.
__i
; }))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
(
	`__WAIT_INT
(°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

279 
	$__°πod_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

280 **
__ª°ri˘
 
__íd±r
, 
__group
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

282 
	$__°πof_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

283 **
__ª°ri˘
 
__íd±r
, 
__group
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

285 
	$__°πﬁd_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

286 **
__ª°ri˘
 
__íd±r
,

287 
__group
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

289 #i‚de‡
__°πﬁ_öã∫Æ_deföed


290 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

291 **
__ª°ri˘
 
__íd±r
,

292 
__ba£
, 
__group
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

294 
	#__°πﬁ_öã∫Æ_deföed
 1

	)

296 #i‚de‡
__°πoul_öã∫Æ_deföed


297 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
,

299 
__ba£
, 
__group
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

301 
	#__°πoul_öã∫Æ_deföed
 1

	)

303 #i‡
deföed
 
__GNUC__
 || deföed 
__USE_ISOC99


304 #i‚de‡
__°πﬁl_öã∫Æ_deföed


305 
__exãnsi⁄__


306 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

307 **
__ª°ri˘
 
__íd±r
,

308 
__ba£
, 
__group
)

309 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

310 
	#__°πﬁl_öã∫Æ_deföed
 1

	)

312 #i‚de‡
__°πouŒ_öã∫Æ_deföed


313 
__exãnsi⁄__


314 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

315 
__ª°ri˘
 
__≈å
,

316 **
__ª°ri˘
 
__íd±r
,

317 
__ba£
, 
__group
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 
	#__°πouŒ_öã∫Æ_deföed
 1

	)

323 #ifde‡
__USE_EXTERN_INLINES


326 
__BEGIN_NAMESPACE_STD


327 
__ölöe
 

328 
	`__NTH
 (
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

330  
	`__°πod_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

331 
	}
}

332 
__ölöe
 

333 
__NTH
 (
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

334 
__ba£
))

336  
	`__°πﬁ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

337 
	}
}

338 
__ölöe
 

339 
__NTH
 (
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

340 
__ba£
))

342  
	`__°πoul_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

343 
	}
}

344 
__END_NAMESPACE_STD


346 #ifde‡
__USE_ISOC99


347 
__BEGIN_NAMESPACE_C99


348 
__ölöe
 

349 
__NTH
 (
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

351  
	`__°πof_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

352 
	}
}

353 #i‚de‡
__LDBL_COMPAT


354 
__ölöe
 

355 
__NTH
 (
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
))

357  
	`__°πﬁd_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

358 
	}
}

360 
__END_NAMESPACE_C99


363 #ifde‡
__USE_BSD


364 
__exãnsi⁄__
 
__ölöe
 

365 
__NTH
 (
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

366 
__ba£
))

368  
	`__°πﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

369 
	}
}

370 
__exãnsi⁄__
 
__ölöe
 

371 
__NTH
 (
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

372 
__ba£
))

374  
	`__°πouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

375 
	}
}

378 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


379 
__BEGIN_NAMESPACE_C99


380 
__exãnsi⁄__
 
__ölöe
 

381 
__NTH
 (
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

382 
__ba£
))

384  
	`__°πﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

385 
	}
}

386 
__exãnsi⁄__
 
__ölöe
 

387 
__NTH
 (
	$°πouŒ
 (
__c⁄°
 * 
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

388 
__ba£
))

390  
	`__°πouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

391 
	}
}

392 
__END_NAMESPACE_C99


395 
__BEGIN_NAMESPACE_STD


396 
__ölöe
 

397 
__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

399  
	`°πod
 (
__≈å
, (**Ë
NULL
);

400 
	}
}

401 
__ölöe
 

402 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

404  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

405 
	}
}

406 
__ölöe
 

407 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

409  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

410 
	}
}

411 
__END_NAMESPACE_STD


413 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


414 
__BEGIN_NAMESPACE_C99


415 
__exãnsi⁄__
 
__ölöe
 

416 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

418  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

419 
	}
}

420 
__END_NAMESPACE_C99


425 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


429 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

432 
	$a64l
 (
__c⁄°
 *
__s
)

433 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

437 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


438 
	~<sys/ty≥s.h
>

445 
	$øndom
 (Ë
__THROW
;

448 
	$§™dom
 (
__£ed
Ë
__THROW
;

454 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

455 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

459 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 #ifde‡
__USE_MISC


467 
	søndom_d©a


469 
öt32_t
 *
Âå
;

470 
öt32_t
 *
Ωå
;

471 
öt32_t
 *
°©e
;

472 
ønd_ty≥
;

473 
ønd_deg
;

474 
ønd_£p
;

475 
öt32_t
 *
íd_±r
;

478 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

479 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

481 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

482 
__THROW
 
	`__n⁄nuŒ
 ((2));

484 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

485 
size_t
 
__°©ñí
,

486 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

487 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

489 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

490 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

491 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

496 
__BEGIN_NAMESPACE_STD


498 
	$ønd
 (Ë
__THROW
;

500 
	$§™d
 (
__£ed
Ë
__THROW
;

501 
__END_NAMESPACE_STD


503 #ifde‡
__USE_POSIX


505 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

509 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


513 
	$dønd48
 (Ë
__THROW
;

514 
	`î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

517 
	$Ã™d48
 (Ë
__THROW
;

518 
	`ƒ™d48
 (
__xsubi
[3])

519 
__THROW
 
	`__n⁄nuŒ
 ((1));

522 
	$mønd48
 (Ë
__THROW
;

523 
	`jønd48
 (
__xsubi
[3])

524 
__THROW
 
	`__n⁄nuŒ
 ((1));

527 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

528 *
	`£ed48
 (
__£ed16v
[3])

529 
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
	`lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

532 #ifde‡
__USE_MISC


536 
	sdønd48_d©a


538 
__x
[3];

539 
__ﬁd_x
[3];

540 
__c
;

541 
__öô
;

542 
__a
;

546 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

547 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

548 
	`î™d48_r
 (
__xsubi
[3],

549 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

550 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

553 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

554 *
__ª°ri˘
 
__ªsu…
)

555 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

556 
	`ƒ™d48_r
 (
__xsubi
[3],

557 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

558 *
__ª°ri˘
 
__ªsu…
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

563 *
__ª°ri˘
 
__ªsu…
)

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

565 
	`jønd48_r
 (
__xsubi
[3],

566 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

567 *
__ª°ri˘
 
__ªsu…
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

572 
__THROW
 
	`__n⁄nuŒ
 ((2));

574 
	`£ed48_r
 (
__£ed16v
[3],

575 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 
	`lc⁄g48_r
 (
__∑øm
[7],

578 
dønd48_d©a
 *
__buf„r
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


586 
	#__mÆloc_™d_ˇŒoc_deföed


	)

587 
__BEGIN_NAMESPACE_STD


589 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

591 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

592 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

593 
__END_NAMESPACE_STD


596 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


597 
__BEGIN_NAMESPACE_STD


600 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

601 
__THROW
 
__©åibuã_mÆloc__
 
__©åibuã_w¨n_unu£d_ªsu…__
;

603 
	$‰ì
 (*
__±r
Ë
__THROW
;

604 
__END_NAMESPACE_STD


606 #ifdef 
__USE_MISC


608 
	$c‰ì
 (*
__±r
Ë
__THROW
;

611 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


612 
	~<Æloˇ.h
>

615 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


617 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

620 #ifde‡
__USE_XOPEN2K


622 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

623 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
__BEGIN_NAMESPACE_STD


628 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

632 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

633 
__END_NAMESPACE_STD


635 #ifdef 
__USE_MISC


638 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

639 
__THROW
 
	`__n⁄nuŒ
 ((1));

642 
__BEGIN_NAMESPACE_STD


646 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

647 
__END_NAMESPACE_STD


649 #ifde‡
__USE_ISOC99


650 
__BEGIN_NAMESPACE_C99


653 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

654 
__END_NAMESPACE_C99


658 
__BEGIN_NAMESPACE_STD


660 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

661 
__END_NAMESPACE_STD


665 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

666 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

668 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


672 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

675 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


678 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

679 
__THROW
 
	`__n⁄nuŒ
 ((2));

682 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

685 #ifdef 
__USE_MISC


689 
	$˛óªnv
 (Ë
__THROW
;

693 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


698 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

708 #i‚de‡
__USE_FILE_OFFSET64


709 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 #ifde‡
__REDIRECT


712 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

713 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

715 
	#mk°emp
 
mk°emp64


	)

718 #ifde‡
__USE_LARGEFILE64


719 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 #ifde‡
__USE_BSD


729 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

733 
__BEGIN_NAMESPACE_STD


738 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

739 
__END_NAMESPACE_STD


742 #ifdef 
__USE_GNU


746 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

747 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

750 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


756 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

757 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

762 #i‚de‡
__COMPAR_FN_T


763 
	#__COMPAR_FN_T


	)

764 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

766 #ifdef 
__USE_GNU


767 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

771 
__BEGIN_NAMESPACE_STD


774 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

775 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

776 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

780 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

781 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

785 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

786 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
__END_NAMESPACE_STD


789 #ifde‡
__USE_ISOC99


790 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

795 
__BEGIN_NAMESPACE_STD


799 
div_t
 
	$div
 (
__numî
, 
__díom
)

800 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

801 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

802 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

803 
__END_NAMESPACE_STD


805 #ifde‡
__USE_ISOC99


806 
__BEGIN_NAMESPACE_C99


807 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

808 
__díom
)

809 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

810 
__END_NAMESPACE_C99


814 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


821 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

822 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

827 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

828 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

837 #ifde‡
__USE_MISC


839 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

840 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

841 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

842 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

843 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

844 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

845 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

846 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

851 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

852 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

853 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

854 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

855 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

856 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

858 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

859 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

860 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

861 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

862 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

863 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

864 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

865 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

870 
__BEGIN_NAMESPACE_STD


873 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

876 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

877 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

880 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

884 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

885 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

887 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

888 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

889 
__THROW
;

890 
__END_NAMESPACE_STD


893 #ifde‡
__USE_SVID


898 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

902 #ifde‡
__USE_XOPEN_EXTENDED


909 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

910 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

911 **
__ª°ri˘
 
__vÆuï
)

912 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

916 #ifde‡
__USE_XOPEN


918 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

924 #ifde‡
__USE_XOPEN2K


926 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

929 #ifde‡
__USE_XOPEN


934 
	$gø¡±
 (
__fd
Ë
__THROW
;

938 
	$u∆ock±
 (
__fd
Ë
__THROW
;

943 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

946 #ifde‡
__USE_GNU


950 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

951 
__THROW
 
	`__n⁄nuŒ
 ((2));

954 
	`gë±
 ();

957 #ifde‡
__USE_BSD


961 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

962 
__THROW
 
	`__n⁄nuŒ
 ((1));

967 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


968 
	~<bôs/°dlib.h
>

970 #ifde‡
__LDBL_COMPAT


971 
	~<bôs/°dlib-ldbl.h
>

975 #unde‡
__√ed_mÆloc_™d_ˇŒoc


977 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 
__BEGIN_NAMESPACE_STD


38 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

39 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

40 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

43 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

44 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

45 
__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


51 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

52 
__c
, 
size_t
 
__n
)

53 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

57 
__BEGIN_NAMESPACE_STD


59 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

62 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

63 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

66 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

67 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

68 
__END_NAMESPACE_STD


70 #ifde‡
__USE_GNU


73 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

74 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

82 
__BEGIN_NAMESPACE_STD


84 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

85 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

87 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

88 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

89 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

92 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

93 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

95 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

96 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

99 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

100 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

102 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

106 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

109 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

110 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

111 
__THROW
 
	`__n⁄nuŒ
 ((2));

112 
__END_NAMESPACE_STD


114 #ifde‡
__USE_GNU


118 
	~<xloˇÀ.h
>

121 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

124 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

125 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

128 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


130 *
	$°rdup
 (
__c⁄°
 *
__s
)

131 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

137 #i‡
deföed
 
__USE_GNU


138 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

139 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

142 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


144 
	#°rdu∑
(
s
) \

145 (
__exãnsi⁄__
 \

147 
__c⁄°
 *
__ﬁd
 = (
s
); \

148 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

149 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

150 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

151 
	}
}))

	)

154 
	#°∫du∑
(
s
, 
n
) \

155 (
__exãnsi⁄__
 \

157 
__c⁄°
 *
__ﬁd
 = (
s
); \

158 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

159 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

160 
__√w
[
__Àn
] = '\0'; \

161 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

162 }))

	)

165 
__BEGIN_NAMESPACE_STD


167 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

168 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

170 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

171 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

172 
__END_NAMESPACE_STD


174 #ifde‡
__USE_GNU


177 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

178 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

181 
__BEGIN_NAMESPACE_STD


184 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

185 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

188 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

189 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

191 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

192 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

194 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

195 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

199 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

200 
__THROW
 
	`__n⁄nuŒ
 ((2));

201 
__END_NAMESPACE_STD


205 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

206 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

207 **
__ª°ri˘
 
__ßve_±r
)

208 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

209 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


210 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

211 **
__ª°ri˘
 
__ßve_±r
)

212 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

215 #ifde‡
__USE_GNU


217 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

218 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

221 #ifde‡
__USE_GNU


225 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

226 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

231 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

232 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

233 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

234 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

235 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

236 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

240 
__BEGIN_NAMESPACE_STD


242 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

243 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__END_NAMESPACE_STD


246 #ifdef 
__USE_GNU


249 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

250 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

254 
__BEGIN_NAMESPACE_STD


256 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

257 
__END_NAMESPACE_STD


258 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


266 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


269 #ifde‡
__REDIRECT_NTH


270 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

271 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

272 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

274 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

275 
__THROW
 
	`__n⁄nuŒ
 ((2));

276 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

281 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

282 
__THROW
 
	`__n⁄nuŒ
 ((2));

288 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_BSD


292 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

296 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

300 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

303 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

304 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

307 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

308 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

312 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

316 #ifdef 
__USE_GNU


317 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

318 #ifde‡
__GNUC__


319 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

320 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

325 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

326 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

329 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

330 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

333 #ifdef 
__USE_GNU


336 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

337 
__loˇÀ_t
 
__loc
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

340 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

341 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

345 #ifdef 
__USE_BSD


348 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

349 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

350 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

353 #ifdef 
__USE_GNU


355 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

356 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

359 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

362 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

364 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

365 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

369 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

370 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

373 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

377 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

380 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

382 #i‚de‡
ba£«me


387 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

392 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

393 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

394 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


414 
	~<bôs/°rög.h
>

417 
	~<bôs/°rög2.h
>

420 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


422 
	~<bôs/°rög3.h
>

426 
__END_DECLS


	@/usr/include/sys/poll.h

20 #i‚def 
_SYS_POLL_H


21 
	#_SYS_POLL_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/pﬁl.h
>

27 #ifde‡
__USE_GNU


29 
	~<bôs/sig£t.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

37 
	tnfds_t
;

40 
	spﬁlfd


42 
	mfd
;

43 
	mevíts
;

44 
	mªvíts
;

48 
__BEGIN_DECLS


58 
pﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, 
__timeout
);

60 #ifde‡
__USE_GNU


67 
µﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

68 
__c⁄°
 
time•ec
 *
__timeout
,

69 
__c⁄°
 
__sig£t_t
 *
__ss
);

72 
	g__END_DECLS


	@/usr/include/sys/socket.h

20 #i‚def 
_SYS_SOCKET_H


21 
	#_SYS_SOCKET_H
 1

	)

23 
	~<„©uªs.h
>

25 
	g__BEGIN_DECLS


27 
	~<sys/uio.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

35 
	~<bôs/sockë.h
>

37 #ifde‡
__USE_BSD


40 
	sosockaddr


42 
	mß_Ámûy
;

43 
	mß_d©a
[14];

51 
	mSHUT_RD
 = 0,

52 
	#SHUT_RD
 
SHUT_RD


	)

53 
	mSHUT_WR
,

54 
	#SHUT_WR
 
SHUT_WR


	)

55 
	mSHUT_RDWR


56 
	#SHUT_RDWR
 
SHUT_RDWR


	)

65 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


66 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

67 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

71 
	#__SOCKADDR_ALLTYPES
 \

72 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

73 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

74 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

75 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

86 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

87 uni⁄ { 
	m__SOCKADDR_ALLTYPES


88 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

89 #unde‡
__SOCKADDR_ONETYPE


90 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

91 uni⁄ { 
	m__SOCKADDR_ALLTYPES


92 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

93 #unde‡
__SOCKADDR_ONETYPE


100 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

106 
	`sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

107 
__fds
[2]Ë
__THROW
;

110 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

111 
__THROW
;

114 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

115 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

124 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

128 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

129 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

136 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

143 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

150 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

151 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

152 
sockÀn_t
 
__addr_Àn
);

161 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

162 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

163 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

171 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

172 
__Êags
);

179 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

185 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

186 *
__ª°ri˘
 
__›tvÆ
,

187 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

192 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

193 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

199 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

209 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

210 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

218 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

221 #ifde‡
__USE_XOPEN2K


223 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

227 #ifde‡
__USE_MISC


231 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

236 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


237 
	~<bôs/sockë2.h
>

240 
__END_DECLS


	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	`utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	`lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	`futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_ATFILE


156 
	`futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/time.h

24 #i‚def 
_TIME_H


26 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

27 ! 
deföed
 
	g__√ed_time•ec
)

28 
	#_TIME_H
 1

	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 #ifdef 
_TIME_H


37 
	#__√ed_size_t


	)

38 
	#__√ed_NULL


	)

39 
	~<°ddef.h
>

43 
	~<bôs/time.h
>

46 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


47 #i‚de‡
CLK_TCK


48 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

54 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

55 
	#__˛ock_t_deföed
 1

	)

57 
	~<bôs/ty≥s.h
>

59 
__BEGIN_NAMESPACE_STD


61 
__˛ock_t
 
	t˛ock_t
;

62 
	g__END_NAMESPACE_STD


63 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


64 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

68 #unde‡
__√ed_˛ock_t


70 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

71 
	#__time_t_deföed
 1

	)

73 
	~<bôs/ty≥s.h
>

75 
__BEGIN_NAMESPACE_STD


77 
__time_t
 
	ttime_t
;

78 
__END_NAMESPACE_STD


79 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


80 
	$__USING_NAMESPACE_STD
(
time_t
)

84 #unde‡
__√ed_time_t


86 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

87 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

88 
	#__˛ockid_t_deföed
 1

	)

90 
	~<bôs/ty≥s.h
>

93 
__˛ockid_t
 
	t˛ockid_t
;

96 #unde‡
__˛ockid_time_t


98 #i‡!
deföed
 
__timî_t_deföed
 && \

99 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

100 
	#__timî_t_deföed
 1

	)

102 
	~<bôs/ty≥s.h
>

105 
__timî_t
 
	ttimî_t
;

108 #unde‡
__√ed_timî_t


111 #i‡!
deföed
 
__time•ec_deföed
 && \

112 ((
deföed
 
_TIME_H
 && \

113 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

114 
deföed
 
__√ed_time•ec
)

115 
	#__time•ec_deföed
 1

	)

117 
	~<bôs/ty≥s.h
>

121 
	stime•ec


123 
__time_t
 
tv_£c
;

124 
tv_n£c
;

128 #unde‡
__√ed_time•ec


131 #ifdef 
_TIME_H


132 
__BEGIN_NAMESPACE_STD


134 
	stm


136 
tm_£c
;

137 
tm_mö
;

138 
tm_hour
;

139 
tm_mday
;

140 
tm_m⁄
;

141 
tm_yór
;

142 
tm_wday
;

143 
tm_yday
;

144 
tm_isd°
;

146 #ifdef 
__USE_BSD


147 
tm_gmtoff
;

148 
__c⁄°
 *
tm_z⁄e
;

150 
__tm_gmtoff
;

151 
__c⁄°
 *
__tm_z⁄e
;

154 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


156 
	$__USING_NAMESPACE_STD
(
tm
)

160 #ifde‡
__USE_POSIX199309


162 
	sôimî•ec


164 
time•ec
 
ô_öãrvÆ
;

165 
time•ec
 
ô_vÆue
;

169 
sigevít
;

173 #ifde‡
__USE_XOPEN2K


174 #i‚de‡
__pid_t_deföed


175 
__pid_t
 
	tpid_t
;

176 
	#__pid_t_deföed


	)

181 
__BEGIN_NAMESPACE_STD


184 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

187 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

190 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

191 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

194 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

200 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

201 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

202 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

203 
__END_NAMESPACE_STD


205 #ifde‡
__USE_XOPEN


208 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

209 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

210 
__THROW
;

213 #ifde‡
__USE_GNU


216 
	~<xloˇÀ.h
>

218 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

219 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

220 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

221 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

224 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

225 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 
__BEGIN_NAMESPACE_STD


232 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

236 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
__END_NAMESPACE_STD


239 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


242 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

243 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

247 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

248 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

251 
__BEGIN_NAMESPACE_STD


254 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

257 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

258 
__END_NAMESPACE_STD


260 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


265 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

266 *
__ª°ri˘
 
__buf
Ë
__THROW
;

269 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

270 *
__ª°ri˘
 
__buf
Ë
__THROW
;

275 *
__tz«me
[2];

276 
__daylight
;

277 
__timez⁄e
;

280 #ifdef 
__USE_POSIX


282 *
tz«me
[2];

286 
	$tz£t
 (Ë
__THROW
;

289 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


290 
daylight
;

291 
timez⁄e
;

294 #ifde‡
__USE_SVID


297 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

303 
	#__i¶óp
(
yór
) \

304 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

307 #ifde‡
__USE_MISC


312 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

315 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

318 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifde‡
__USE_POSIX199309


327 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

328 
time•ec
 *
__ªmaöög
);

332 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

335 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

338 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

339 
__THROW
;

341 #ifde‡
__USE_XOPEN2K


346 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

347 
__c⁄°
 
time•ec
 *
__ªq
,

348 
time•ec
 *
__ªm
);

351 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

356 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

357 
sigevít
 *
__ª°ri˘
 
__evp
,

358 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

361 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

364 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

365 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

366 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

369 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

370 
__THROW
;

373 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

377 #ifde‡
__USE_XOPEN_EXTENDED


389 
gëd©e_îr
;

398 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

401 #ifde‡
__USE_GNU


412 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

413 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

416 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


34 
	#_POSIX_VERSION
 200112L

	)

40 
	#_POSIX2_VERSION
 200112L

	)

44 
	#_POSIX2_C_BIND
 200112L

	)

48 
	#_POSIX2_C_DEV
 200112L

	)

52 
	#_POSIX2_SW_DEV
 200112L

	)

56 
	#_POSIX2_LOCALEDEF
 200112L

	)

59 #ifde‡
__USE_XOPEN2K


60 
	#_XOPEN_VERSION
 600

	)

61 #ñi‡
deföed
 
__USE_UNIX98


62 
	#_XOPEN_VERSION
 500

	)

64 
	#_XOPEN_VERSION
 4

	)

68 
	#_XOPEN_XCU_VERSION
 4

	)

71 
	#_XOPEN_XPG2
 1

	)

72 
	#_XOPEN_XPG3
 1

	)

73 
	#_XOPEN_XPG4
 1

	)

76 
	#_XOPEN_UNIX
 1

	)

79 
	#_XOPEN_CRYPT
 1

	)

83 
	#_XOPEN_ENH_I18N
 1

	)

86 
	#_XOPEN_LEGACY
 1

	)

173 
	~<bôs/posix_›t.h
>

176 #ifde‡
__USE_UNIX98


177 
	~<bôs/ívú⁄míts.h
>

181 
	#STDIN_FILENO
 0

	)

182 
	#STDOUT_FILENO
 1

	)

183 
	#STDERR_FILENO
 2

	)

188 
	~<bôs/ty≥s.h
>

190 #i‚def 
__ssize_t_deföed


191 
__ssize_t
 
	tssize_t
;

192 
	#__ssize_t_deföed


	)

195 
	#__√ed_size_t


	)

196 
	#__√ed_NULL


	)

197 
	~<°ddef.h
>

199 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


202 #i‚de‡
__gid_t_deföed


203 
__gid_t
 
	tgid_t
;

204 
	#__gid_t_deföed


	)

207 #i‚de‡
__uid_t_deföed


208 
__uid_t
 
	tuid_t
;

209 
	#__uid_t_deföed


	)

212 #i‚de‡
__off_t_deföed


213 #i‚de‡
__USE_FILE_OFFSET64


214 
__off_t
 
	toff_t
;

216 
__off64_t
 
	toff_t
;

218 
	#__off_t_deföed


	)

220 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


221 
__off64_t
 
	toff64_t
;

222 
	#__off64_t_deföed


	)

225 #i‚de‡
__u£c⁄ds_t_deföed


226 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

227 
	#__u£c⁄ds_t_deföed


	)

230 #i‚de‡
__pid_t_deföed


231 
__pid_t
 
	tpid_t
;

232 
	#__pid_t_deföed


	)

236 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


237 #i‚de‡
__öçå_t_deföed


238 
__öçå_t
 
	töçå_t
;

239 
	#__öçå_t_deföed


	)

243 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


244 #i‚de‡
__sockÀn_t_deföed


245 
__sockÀn_t
 
	tsockÀn_t
;

246 
	#__sockÀn_t_deföed


	)

252 
	#R_OK
 4

	)

253 
	#W_OK
 2

	)

254 
	#X_OK
 1

	)

255 
	#F_OK
 0

	)

258 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

260 #ifde‡
__USE_GNU


263 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

264 
__THROW
 
	`__n⁄nuŒ
 ((1));

267 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

268 
__THROW
 
	`__n⁄nuŒ
 ((1));

271 #ifde‡
__USE_ATFILE


275 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

276 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

281 #i‚def 
_STDIO_H


282 
	#SEEK_SET
 0

	)

283 
	#SEEK_CUR
 1

	)

284 
	#SEEK_END
 2

	)

287 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


289 
	#L_SET
 
SEEK_SET


	)

290 
	#L_INCR
 
SEEK_CUR


	)

291 
	#L_XTND
 
SEEK_END


	)

300 #i‚de‡
__USE_FILE_OFFSET64


301 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

303 #ifde‡
__REDIRECT_NTH


304 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

305 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

306 
l£ek64
);

308 
	#l£ek
 
l£ek64


	)

311 #ifde‡
__USE_LARGEFILE64


312 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

313 
__THROW
;

320 
	`˛o£
 (
__fd
);

327 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

333 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

335 #ifde‡
__USE_UNIX98


336 #i‚de‡
__USE_FILE_OFFSET64


343 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

344 
__off_t
 
__off£t
Ë
__wur
;

351 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

352 
__off_t
 
__off£t
Ë
__wur
;

354 #ifde‡
__REDIRECT


355 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

356 
__off64_t
 
__off£t
),

357 
¥ód64
Ë
__wur
;

358 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

359 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

360 
pwrôe64
Ë
__wur
;

362 
	#¥ód
 
¥ód64


	)

363 
	#pwrôe
 
pwrôe64


	)

367 #ifde‡
__USE_LARGEFILE64


371 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

372 
__off64_t
 
__off£t
Ë
__wur
;

375 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

376 
__off64_t
 
__off£t
Ë
__wur
;

384 
	`pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

393 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

405 
	`¶ìp
 (
__£c⁄ds
);

407 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


412 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

413 
__THROW
;

420 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

429 
	`∑u£
 ();

433 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

434 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

436 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


438 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

443 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

444 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

448 #ifde‡
__USE_ATFILE


451 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

452 
__gid_t
 
__group
, 
__Êag
)

453 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

457 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

459 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

471 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

473 #ifdef 
__USE_GNU


477 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

480 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


484 *
	$gëwd
 (*
__buf
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

490 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

493 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

496 **
__ívú⁄
;

497 #ifde‡
__USE_GNU


498 **
ívú⁄
;

504 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

505 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

507 #ifde‡
__USE_GNU


510 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

511 
__THROW
;

516 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

517 
__THROW
 
	`__n⁄nuŒ
 ((1));

521 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

522 
__THROW
 
	`__n⁄nuŒ
 ((1));

526 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

527 
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

532 
__THROW
 
	`__n⁄nuŒ
 ((1));

537 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

538 
__THROW
 
	`__n⁄nuŒ
 ((1));

541 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


543 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

548 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
	~<bôs/c⁄‚ame.h
>

557 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

558 
__THROW
 
	`__n⁄nuŒ
 ((1));

561 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

564 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

566 #ifdef 
__USE_POSIX2


568 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

573 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

576 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

580 #i‚de‡
__FAVOR_BSD


581 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

583 #ifde‡
__REDIRECT_NTH


584 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

586 
	#gëpgΩ
 
__gëpgid


	)

591 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

592 #ifde‡
__USE_XOPEN_EXTENDED


593 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

600 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

602 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


613 #i‚de‡
__FAVOR_BSD


617 
	$£çgΩ
 (Ë
__THROW
;

622 #ifde‡
__REDIRECT_NTH


623 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

625 
	#£çgΩ
 
£çgid


	)

634 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

636 #ifde‡
__USE_XOPEN_EXTENDED


638 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

642 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

645 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

648 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

651 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

656 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

658 #ifdef 
__USE_GNU


660 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

667 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

669 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


672 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

675 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


677 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

684 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

686 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


689 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

692 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


694 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

697 #ifde‡
__USE_GNU


700 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

701 
__THROW
;

705 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

706 
__THROW
;

710 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

711 
__THROW
;

715 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

716 
__THROW
;

723 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


730 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

736 *
	$ây«me
 (
__fd
Ë
__THROW
;

740 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

741 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

745 
	$ißây
 (
__fd
Ë
__THROW
;

747 #i‡
deföed
 
__USE_BSD
 \

748 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

751 
	$ây¶Ÿ
 (Ë
__THROW
;

756 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

757 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

759 #ifde‡
__USE_ATFILE


762 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

763 
__c⁄°
 *
__to
, 
__Êags
)

764 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

767 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


769 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

770 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

775 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

776 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

777 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

780 #ifde‡
__USE_ATFILE


782 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

783 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

786 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

787 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

788 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

792 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

794 #ifde‡
__USE_ATFILE


796 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

797 
__THROW
 
	`__n⁄nuŒ
 ((2));

801 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

805 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

808 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

815 *
	`gëlogö
 ();

816 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


823 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

826 #ifdef 
__USE_BSD


828 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

832 #ifdef 
__USE_POSIX2


836 
	#__√ed_gë›t


	)

837 
	~<gë›t.h
>

841 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


845 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

849 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

852 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

853 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

857 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

863 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

865 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

866 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

872 
	$vh™gup
 (Ë
__THROW
;

875 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

883 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

884 
size_t
 
__off£t
, 
__sˇÀ
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

891 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

895 *
	$gëu£rshñl
 (Ë
__THROW
;

896 
	$ídu£rshñl
 (Ë
__THROW
;

897 
	$£tu£rshñl
 (Ë
__THROW
;

903 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

907 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

910 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

918 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


923 
	`fsync
 (
__fd
);

927 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


930 
	`gëho°id
 ();

933 
	$sync
 (Ë
__THROW
;

938 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

943 
	$gëdèbÀsize
 (Ë
__THROW
;

947 #i‚de‡
__USE_FILE_OFFSET64


948 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

951 #ifde‡
__REDIRECT_NTH


952 
	`__REDIRECT_NTH
 (
åunˇã
,

953 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

954 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

956 
	#åunˇã
 
åunˇã64


	)

959 #ifde‡
__USE_LARGEFILE64


960 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


969 #i‚de‡
__USE_FILE_OFFSET64


970 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

972 #ifde‡
__REDIRECT_NTH


973 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

974 
·runˇã64
Ë
__wur
;

976 
	#·runˇã
 
·runˇã64


	)

979 #ifde‡
__USE_LARGEFILE64


980 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

986 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


990 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

996 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1000 #ifde‡
__USE_MISC


1011 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1016 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1028 
	#F_ULOCK
 0

	)

1029 
	#F_LOCK
 1

	)

1030 
	#F_TLOCK
 2

	)

1031 
	#F_TEST
 3

	)

1033 #i‚de‡
__USE_FILE_OFFSET64


1034 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1036 #ifde‡
__REDIRECT


1037 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1038 
lockf64
Ë
__wur
;

1040 
	#lockf
 
lockf64


	)

1043 #ifde‡
__USE_LARGEFILE64


1044 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1049 #ifde‡
__USE_GNU


1054 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1055 (
__exãnsi⁄__
 \

1056 ({ 
__ªsu…
; \

1057 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1058 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1059 
__ªsu…
; 
	}
}))

	)

1062 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1065 
fd©async
 (
__fûdes
);

1071 #ifdef 
__USE_XOPEN


1073 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1074 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1078 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1086 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1092 #ifde‡
__USE_XOPEN


1094 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1099 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


1100 
	~<bôs/uni°d.h
>

1103 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/byteswap.h

20 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H


24 #i‚de‡
_BITS_BYTESWAP_H


25 
	#_BITS_BYTESWAP_H
 1

	)

27 
	~<bôs/w‹dsize.h
>

30 
	#__bsw≠_c⁄°™t_16
(
x
) \

31 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

33 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

34 
	#__bsw≠_16
(
x
) \

35 (
__exãnsi⁄__
 \

36 ({ 
__v
, 
__x
 = (
x
); \

37 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

38 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

40 
	`__asm__
 ("rorw $8, %w0" \

41 : "Ù" (
__v
) \

42 : "0" (
__x
) \

44 
__v
; }))

	)

47 
	#__bsw≠_16
(
x
) \

48 (
__exãnsi⁄__
 \

49 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

54 
	#__bsw≠_c⁄°™t_32
(
x
) \

55 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

56 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

58 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

59 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

60 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

61 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

62 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

63 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

64 || 
deföed
 
	g__amdÁm10__
)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

74 
__v
; }))

	)

76 
	#__bsw≠_32
(
x
) \

77 (
__exãnsi⁄__
 \

78 ({ 
__v
, 
__x
 = (
x
); \

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

80 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

82 
	`__asm__
 ("rorw $8, %w0;" \

85 : "Ù" (
__v
) \

86 : "0" (
__x
) \

88 
__v
; }))

	)

91 
	#__bsw≠_32
(
x
) \

92 (
__exãnsi⁄__
 \

93 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

97 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

99 
	#__bsw≠_c⁄°™t_64
(
x
) \

100 ((((
x
) & 0xff00000000000000ull) >> 56) \

101 | (((
x
) & 0x00ff000000000000ull) >> 40) \

102 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

103 | (((
x
) & 0x000000ff00000000ull) >> 8) \

104 | (((
x
) & 0x00000000ff000000ull) << 8) \

105 | (((
x
) & 0x0000000000ff0000ull) << 24) \

106 | (((
x
) & 0x000000000000ff00ull) << 40) \

107 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

109 #i‡
__WORDSIZE
 == 64

110 
	#__bsw≠_64
(
x
) \

111 (
__exãnsi⁄__
 \

112 ({ 
__v
, 
__x
 = (
x
); \

113 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

114 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

116 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

117 
__v
; }))

	)

119 
	#__bsw≠_64
(
x
) \

120 (
__exãnsi⁄__
 \

121 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

122 
__l
[2]; } 
__w
, 
__r
; \

123 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

124 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

127 
__w
.
__Œ
 = (
x
); \

128 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

129 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

131 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS


502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

508 
	m_CS_PATH
,

509 
	#_CS_PATH
 
_CS_PATH


	)

511 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

512 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

514 
	m_CS_GNU_LIBC_VERSION
,

515 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

516 
	m_CS_GNU_LIBPTHREAD_VERSION
,

517 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

519 
	m_CS_LFS_CFLAGS
 = 1000,

520 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

521 
	m_CS_LFS_LDFLAGS
,

522 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

523 
	m_CS_LFS_LIBS
,

524 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

525 
	m_CS_LFS_LINTFLAGS
,

526 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

527 
	m_CS_LFS64_CFLAGS
,

528 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

529 
	m_CS_LFS64_LDFLAGS
,

530 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

531 
	m_CS_LFS64_LIBS
,

532 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

533 
	m_CS_LFS64_LINTFLAGS
,

534 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

536 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

537 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

538 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

539 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

540 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

541 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

542 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

543 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

544 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

545 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

546 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

547 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

548 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

549 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

550 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

551 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

552 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

553 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

554 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

555 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

556 
	m_CS_XBS5_LP64_OFF64_LIBS
,

557 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

558 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

559 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

560 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

561 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

562 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

563 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

564 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

565 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

566 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

567 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

569 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

570 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

571 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

572 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

573 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

574 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

575 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

576 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

577 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

578 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

579 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

580 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

581 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

582 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

583 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

584 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

585 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

586 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

587 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

588 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

589 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

590 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

591 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

592 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

593 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

594 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

595 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

596 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

597 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

598 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

599 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


600 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

41 #i‡
__WORDSIZE
 == 64

53 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

54 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LP64_OFF64
 1

	)

58 
	#_XBS5_LP64_OFF64
 1

	)

64 
	#_POSIX_V6_ILP32_OFF32
 1

	)

65 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

66 
	#_XBS5_ILP32_OFF32
 1

	)

67 
	#_XBS5_ILP32_OFFBIG
 1

	)

82 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

83 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

84 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

85 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

86 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

87 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_OPTIONS
 4

	)

29 
	#IP_HDRINCL
 3

	)

30 
	#IP_TOS
 1

	)

31 
	#IP_TTL
 2

	)

32 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

35 
	#IP_RETOPTS
 7

	)

36 
	#IP_MULTICAST_IF
 32

	)

37 
	#IP_MULTICAST_TTL
 33

	)

38 
	#IP_MULTICAST_LOOP
 34

	)

39 
	#IP_ADD_MEMBERSHIP
 35

	)

40 
	#IP_DROP_MEMBERSHIP
 36

	)

41 
	#IP_UNBLOCK_SOURCE
 37

	)

42 
	#IP_BLOCK_SOURCE
 38

	)

43 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

44 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

45 
	#IP_MSFILTER
 41

	)

46 
	#MCAST_JOIN_GROUP
 42

	)

47 
	#MCAST_BLOCK_SOURCE
 43

	)

48 
	#MCAST_UNBLOCK_SOURCE
 44

	)

49 
	#MCAST_LEAVE_GROUP
 45

	)

50 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

51 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

52 
	#MCAST_MSFILTER
 48

	)

54 
	#MCAST_EXCLUDE
 0

	)

55 
	#MCAST_INCLUDE
 1

	)

57 
	#IP_ROUTER_ALERT
 5

	)

58 
	#IP_PKTINFO
 8

	)

59 
	#IP_PKTOPTIONS
 9

	)

60 
	#IP_PMTUDISC
 10

	)

61 
	#IP_MTU_DISCOVER
 10

	)

62 
	#IP_RECVERR
 11

	)

63 
	#IP_RECVTTL
 12

	)

64 
	#IP_RECVTOS
 13

	)

68 
	#IP_PMTUDISC_DONT
 0

	)

69 
	#IP_PMTUDISC_WANT
 1

	)

70 
	#IP_PMTUDISC_DO
 2

	)

73 
	#SOL_IP
 0

	)

75 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

76 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

77 
	#IP_MAX_MEMBERSHIPS
 20

	)

82 
	sù_›ts


84 
ö_addr
 
	mù_d°
;

85 
	mù_›ts
[40];

89 
	sù_mªqn


91 
ö_addr
 
	mimr_mu…üddr
;

92 
ö_addr
 
	mimr_addªss
;

93 
	mimr_ifödex
;

97 
	sö_pktöfo


99 
	mùi_ifödex
;

100 
ö_addr
 
	mùi_•ec_d°
;

101 
ö_addr
 
	mùi_addr
;

107 
	#IPV6_ADDRFORM
 1

	)

108 
	#IPV6_2292PKTINFO
 2

	)

109 
	#IPV6_2292HOPOPTS
 3

	)

110 
	#IPV6_2292DSTOPTS
 4

	)

111 
	#IPV6_2292RTHDR
 5

	)

112 
	#IPV6_2292PKTOPTIONS
 6

	)

113 
	#IPV6_CHECKSUM
 7

	)

114 
	#IPV6_2292HOPLIMIT
 8

	)

116 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

118 
	#IPV6_NEXTHOP
 9

	)

119 
	#IPV6_AUTHHDR
 10

	)

120 
	#IPV6_UNICAST_HOPS
 16

	)

121 
	#IPV6_MULTICAST_IF
 17

	)

122 
	#IPV6_MULTICAST_HOPS
 18

	)

123 
	#IPV6_MULTICAST_LOOP
 19

	)

124 
	#IPV6_JOIN_GROUP
 20

	)

125 
	#IPV6_LEAVE_GROUP
 21

	)

126 
	#IPV6_ROUTER_ALERT
 22

	)

127 
	#IPV6_MTU_DISCOVER
 23

	)

128 
	#IPV6_MTU
 24

	)

129 
	#IPV6_RECVERR
 25

	)

130 
	#IPV6_V6ONLY
 26

	)

131 
	#IPV6_JOIN_ANYCAST
 27

	)

132 
	#IPV6_LEAVE_ANYCAST
 28

	)

133 
	#IPV6_IPSEC_POLICY
 34

	)

134 
	#IPV6_XFRM_POLICY
 35

	)

136 
	#IPV6_RECVPKTINFO
 49

	)

137 
	#IPV6_PKTINFO
 50

	)

138 
	#IPV6_RECVHOPLIMIT
 51

	)

139 
	#IPV6_HOPLIMIT
 52

	)

140 
	#IPV6_RECVHOPOPTS
 53

	)

141 
	#IPV6_HOPOPTS
 54

	)

142 
	#IPV6_RTHDRDSTOPTS
 55

	)

143 
	#IPV6_RECVRTHDR
 56

	)

144 
	#IPV6_RTHDR
 57

	)

145 
	#IPV6_RECVDSTOPTS
 58

	)

146 
	#IPV6_DSTOPTS
 59

	)

148 
	#IPV6_RECVTCLASS
 66

	)

149 
	#IPV6_TCLASS
 67

	)

152 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

153 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

154 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

155 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

158 
	#IPV6_PMTUDISC_DONT
 0

	)

159 
	#IPV6_PMTUDISC_WANT
 1

	)

160 
	#IPV6_PMTUDISC_DO
 2

	)

163 
	#SOL_IPV6
 41

	)

164 
	#SOL_ICMPV6
 58

	)

167 
	#IPV6_RTHDR_LOOSE
 0

	)

168 
	#IPV6_RTHDR_STRICT
 1

	)

170 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/netdb.h

19 #i‚de‡
_NETDB_H


27 
	s√ã¡


29 *
	mn_«me
;

30 **
	mn_Æü£s
;

31 
	mn_addπy≥
;

32 
uöt32_t
 
	mn_√t
;

	@/usr/include/bits/poll.h

19 #i‚de‡
_SYS_POLL_H


26 
	#POLLIN
 0x001

	)

27 
	#POLLPRI
 0x002

	)

28 
	#POLLOUT
 0x004

	)

30 #ifde‡
__USE_XOPEN


32 
	#POLLRDNORM
 0x040

	)

33 
	#POLLRDBAND
 0x080

	)

34 
	#POLLWRNORM
 0x100

	)

35 
	#POLLWRBAND
 0x200

	)

38 #ifde‡
__USE_GNU


40 
	#POLLMSG
 0x400

	)

41 
	#POLLREMOVE
 0x1000

	)

42 
	#POLLRDHUP
 0x2000

	)

48 
	#POLLERR
 0x008

	)

49 
	#POLLHUP
 0x010

	)

50 
	#POLLNVAL
 0x020

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_POSIX_OPT_H


21 
	#_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200112L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200112L

	)

36 
	#_POSIX_FSYNC
 200112L

	)

39 
	#_POSIX_MAPPED_FILES
 200112L

	)

42 
	#_POSIX_MEMLOCK
 200112L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200112L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200112L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 1

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200112L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200112L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200112L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200112L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200112L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200112L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200112L

	)

93 
	#_POSIX_SEMAPHORES
 200112L

	)

96 
	#_POSIX_REALTIME_SIGNALS
 200112L

	)

99 
	#_POSIX_ASYNCHRONOUS_IO
 200112L

	)

100 
	#_POSIX_ASYNC_IO
 1

	)

102 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

104 
	#_POSIX_PRIORITIZED_IO
 200112L

	)

107 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

110 
	#_LFS_LARGEFILE
 1

	)

111 
	#_LFS64_LARGEFILE
 1

	)

112 
	#_LFS64_STDIO
 1

	)

115 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200112L

	)

118 
	#_POSIX_CPUTIME
 0

	)

121 
	#_POSIX_THREAD_CPUTIME
 0

	)

124 
	#_POSIX_REGEXP
 1

	)

127 
	#_POSIX_READER_WRITER_LOCKS
 200112L

	)

130 
	#_POSIX_SHELL
 1

	)

133 
	#_POSIX_TIMEOUTS
 200112L

	)

136 
	#_POSIX_SPIN_LOCKS
 200112L

	)

139 
	#_POSIX_SPAWN
 200112L

	)

142 
	#_POSIX_TIMERS
 200112L

	)

145 
	#_POSIX_BARRIERS
 200112L

	)

148 
	#_POSIX_MESSAGE_PASSING
 200112L

	)

151 
	#_POSIX_THREAD_PROCESS_SHARED
 200112L

	)

154 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

157 
	#_POSIX_CLOCK_SELECTION
 200112L

	)

160 
	#_POSIX_ADVISORY_INFO
 200112L

	)

163 
	#_POSIX_IPV6
 200112L

	)

166 
	#_POSIX_RAW_SOCKETS
 200112L

	)

169 
	#_POSIX2_CHAR_TERM
 200112L

	)

172 
	#_POSIX_SPORADIC_SERVER
 -1

	)

173 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

176 
	#_POSIX_TRACE
 -1

	)

177 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

178 
	#_POSIX_TRACE_INHERIT
 -1

	)

179 
	#_POSIX_TRACE_LOG
 -1

	)

182 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

20 #i‚def 
_SIGSET_H_ty≥s


21 
	#_SIGSET_H_ty≥s
 1

	)

23 
	t__sig_©omic_t
;

27 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

30 
	m__vÆ
[
_SIGSET_NWORDS
];

31 } 
	t__sig£t_t
;

42 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


43 
	#_SIGSET_H_‚s
 1

	)

45 #i‚de‡
_EXTERN_INLINE


46 
	#_EXTERN_INLINE
 
__ölöe


	)

50 
	#__sigmask
(
sig
) \

51 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

54 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

56 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

57 
	#__sigem±y£t
(
£t
) \

58 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

59 
sig£t_t
 *
__£t
 = (
£t
); \

60 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

61 0; }))

	)

62 
	#__sigfûl£t
(
£t
) \

63 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

64 
sig£t_t
 *
__£t
 = (
£t
); \

65 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

66 0; }))

	)

68 #ifde‡
__USE_GNU


72 
	#__sigi£m±y£t
(
£t
) \

73 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

74 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

75 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

76 !
__ªt
 && --
__˙t
 >= 0) \

77 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

78 
__ªt
 =0; }))

	)

79 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

80 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

81 
sig£t_t
 *
__de°
 = (
de°
); \

82 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

83 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

84 --
__˙t
 >= 0) \

85 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

86 & 
__right
->
__vÆ
[
__˙t
]); \

87 0; }))

	)

88 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

89 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

90 
sig£t_t
 *
__de°
 = (
de°
); \

91 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

92 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

93 --
__˙t
 >= 0) \

94 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

95 | 
__right
->
__vÆ
[
__˙t
]); \

96 0; }))

	)

103 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

104 
__sigadd£t
 (
__sig£t_t
 *, );

105 
__sigdñ£t
 (
__sig£t_t
 *, );

107 #ifde‡
__USE_EXTERN_INLINES


108 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

109 
_EXTERN_INLINE
 \

110 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

112 
__mask
 = 
	`__sigmask
 (
__sig
); \

113 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

114  
BODY
; \

115 }

	)

117 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

118 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

119 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

121 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

	@/usr/include/bits/socket.h

20 #i‚de‡
__BITS_SOCKET_H


21 
	#__BITS_SOCKET_H


	)

23 #i‡!
deföed
 
_SYS_SOCKET_H
 && !deföed 
_NETINET_IN_H


27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

31 
	~<limôs.h
>

32 
	~<sys/ty≥s.h
>

35 #i‚de‡
__sockÀn_t_deföed


36 
__sockÀn_t
 
	tsockÀn_t
;

37 
	#__sockÀn_t_deföed


	)

41 
	e__sockë_ty≥


43 
	mSOCK_STREAM
 = 1,

45 
	#SOCK_STREAM
 
SOCK_STREAM


	)

46 
	mSOCK_DGRAM
 = 2,

48 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

49 
	mSOCK_RAW
 = 3,

50 
	#SOCK_RAW
 
SOCK_RAW


	)

51 
	mSOCK_RDM
 = 4,

52 
	#SOCK_RDM
 
SOCK_RDM


	)

53 
	mSOCK_SEQPACKET
 = 5,

55 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

56 
	mSOCK_PACKET
 = 10

59 
	#SOCK_PACKET
 
SOCK_PACKET


	)

63 
	#PF_UNSPEC
 0

	)

64 
	#PF_LOCAL
 1

	)

65 
	#PF_UNIX
 
PF_LOCAL


	)

66 
	#PF_FILE
 
PF_LOCAL


	)

67 
	#PF_INET
 2

	)

68 
	#PF_AX25
 3

	)

69 
	#PF_IPX
 4

	)

70 
	#PF_APPLETALK
 5

	)

71 
	#PF_NETROM
 6

	)

72 
	#PF_BRIDGE
 7

	)

73 
	#PF_ATMPVC
 8

	)

74 
	#PF_X25
 9

	)

75 
	#PF_INET6
 10

	)

76 
	#PF_ROSE
 11

	)

77 
	#PF_DEC√t
 12

	)

78 
	#PF_NETBEUI
 13

	)

79 
	#PF_SECURITY
 14

	)

80 
	#PF_KEY
 15

	)

81 
	#PF_NETLINK
 16

	)

82 
	#PF_ROUTE
 
PF_NETLINK


	)

83 
	#PF_PACKET
 17

	)

84 
	#PF_ASH
 18

	)

85 
	#PF_ECONET
 19

	)

86 
	#PF_ATMSVC
 20

	)

87 
	#PF_SNA
 22

	)

88 
	#PF_IRDA
 23

	)

89 
	#PF_PPPOX
 24

	)

90 
	#PF_WANPIPE
 25

	)

91 
	#PF_BLUETOOTH
 31

	)

92 
	#PF_MAX
 32

	)

95 
	#AF_UNSPEC
 
PF_UNSPEC


	)

96 
	#AF_LOCAL
 
PF_LOCAL


	)

97 
	#AF_UNIX
 
PF_UNIX


	)

98 
	#AF_FILE
 
PF_FILE


	)

99 
	#AF_INET
 
PF_INET


	)

100 
	#AF_AX25
 
PF_AX25


	)

101 
	#AF_IPX
 
PF_IPX


	)

102 
	#AF_APPLETALK
 
PF_APPLETALK


	)

103 
	#AF_NETROM
 
PF_NETROM


	)

104 
	#AF_BRIDGE
 
PF_BRIDGE


	)

105 
	#AF_ATMPVC
 
PF_ATMPVC


	)

106 
	#AF_X25
 
PF_X25


	)

107 
	#AF_INET6
 
PF_INET6


	)

108 
	#AF_ROSE
 
PF_ROSE


	)

109 
	#AF_DEC√t
 
PF_DEC√t


	)

110 
	#AF_NETBEUI
 
PF_NETBEUI


	)

111 
	#AF_SECURITY
 
PF_SECURITY


	)

112 
	#AF_KEY
 
PF_KEY


	)

113 
	#AF_NETLINK
 
PF_NETLINK


	)

114 
	#AF_ROUTE
 
PF_ROUTE


	)

115 
	#AF_PACKET
 
PF_PACKET


	)

116 
	#AF_ASH
 
PF_ASH


	)

117 
	#AF_ECONET
 
PF_ECONET


	)

118 
	#AF_ATMSVC
 
PF_ATMSVC


	)

119 
	#AF_SNA
 
PF_SNA


	)

120 
	#AF_IRDA
 
PF_IRDA


	)

121 
	#AF_PPPOX
 
PF_PPPOX


	)

122 
	#AF_WANPIPE
 
PF_WANPIPE


	)

123 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

124 
	#AF_MAX
 
PF_MAX


	)

130 
	#SOL_RAW
 255

	)

131 
	#SOL_DECNET
 261

	)

132 
	#SOL_X25
 262

	)

133 
	#SOL_PACKET
 263

	)

134 
	#SOL_ATM
 264

	)

135 
	#SOL_AAL
 265

	)

136 
	#SOL_IRDA
 266

	)

139 
	#SOMAXCONN
 128

	)

142 
	~<bôs/sockaddr.h
>

145 
	ssockaddr


147 
__SOCKADDR_COMMON
 (
ß_
);

148 
	mß_d©a
[14];

154 #i‡
ULONG_MAX
 > 0xffffffff

155 
	#__ss_Æig¡y≥
 
__uöt64_t


	)

157 
	#__ss_Æig¡y≥
 
__uöt32_t


	)

159 
	#_SS_SIZE
 128

	)

160 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

162 
	ssockaddr_°‹age


164 
__SOCKADDR_COMMON
 (
ss_
);

165 
__ss_Æig¡y≥
 
	m__ss_Æign
;

166 
	m__ss_∑ddög
[
_SS_PADSIZE
];

173 
	mMSG_OOB
 = 0x01,

174 
	#MSG_OOB
 
MSG_OOB


	)

175 
	mMSG_PEEK
 = 0x02,

176 
	#MSG_PEEK
 
MSG_PEEK


	)

177 
	mMSG_DONTROUTE
 = 0x04,

178 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

179 #ifde‡
__USE_GNU


181 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

182 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

184 
	mMSG_CTRUNC
 = 0x08,

185 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

186 
	mMSG_PROXY
 = 0x10,

187 
	#MSG_PROXY
 
MSG_PROXY


	)

188 
	mMSG_TRUNC
 = 0x20,

189 
	#MSG_TRUNC
 
MSG_TRUNC


	)

190 
	mMSG_DONTWAIT
 = 0x40,

191 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

192 
	mMSG_EOR
 = 0x80,

193 
	#MSG_EOR
 
MSG_EOR


	)

194 
	mMSG_WAITALL
 = 0x100,

195 
	#MSG_WAITALL
 
MSG_WAITALL


	)

196 
	mMSG_FIN
 = 0x200,

197 
	#MSG_FIN
 
MSG_FIN


	)

198 
	mMSG_SYN
 = 0x400,

199 
	#MSG_SYN
 
MSG_SYN


	)

200 
	mMSG_CONFIRM
 = 0x800,

201 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

202 
	mMSG_RST
 = 0x1000,

203 
	#MSG_RST
 
MSG_RST


	)

204 
	mMSG_ERRQUEUE
 = 0x2000,

205 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

206 
	mMSG_NOSIGNAL
 = 0x4000,

207 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

208 
	mMSG_MORE
 = 0x8000

209 
	#MSG_MORE
 
MSG_MORE


	)

215 
	smsghdr


217 *
	mmsg_«me
;

218 
sockÀn_t
 
	mmsg_«mñí
;

220 
iovec
 *
	mmsg_iov
;

221 
size_t
 
	mmsg_iovÀn
;

223 *
	mmsg_c⁄åﬁ
;

224 
size_t
 
	mmsg_c⁄åﬁÀn
;

229 
	mmsg_Êags
;

233 
	scmsghdr


235 
size_t
 
	mcmsg_Àn
;

240 
	mcmsg_Àvñ
;

241 
	mcmsg_ty≥
;

242 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

243 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

248 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

249 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

251 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

253 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

254 
	#CMSG_FIRSTHDR
(
mhdr
) \

255 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

256 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë
NULL
)

	)

257 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

258 & (
size_t
Ë~( (size_tË- 1))

	)

259 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

260 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

261 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

263 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

264 
cmsghdr
 *
__cmsg
Ë
__THROW
;

265 #ifde‡
__USE_EXTERN_INLINES


266 #i‚de‡
_EXTERN_INLINE


267 
	#_EXTERN_INLINE
 
__ölöe


	)

269 
_EXTERN_INLINE
 
cmsghdr
 *

270 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

272 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

276 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

277 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

278 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


279 + 
__mhdr
->
msg_c⁄åﬁÀn
)

280 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

281 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

284  
__cmsg
;

285 
	}
}

292 
SCM_RIGHTS
 = 0x01

293 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

294 #ifde‡
__USE_BSD


295 , 
SCM_CREDENTIALS
 = 0x02

296 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

302 
	su¸ed


304 
pid_t
 
	mpid
;

305 
uid_t
 
	muid
;

306 
gid_t
 
	mgid
;

310 
	~<asm/sockë.h
>

314 
	slögî


316 
	ml_⁄off
;

317 
	ml_lögî
;

	@/usr/include/bits/socket2.h

20 #i‚de‡
_SYS_SOCKET_H


24 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

25 
__Êags
);

26 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

27 
__Êags
), 
ªcv
);

29 
__Æways_ölöe
 
ssize_t


30 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

32 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

33 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos0
 (
__buf
)))

34  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

35  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

36 
	}
}

38 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

39 
size_t
 
__buÊí
, 
__Êags
,

40 
__SOCKADDR_ARG
 
__addr
,

41 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

42 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

43 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

44 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

45 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

47 
__Æways_ölöe
 
ssize_t


48 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

49 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

51 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

52 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos0
 (
__buf
)))

53  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

54 
__addr
, 
__addr_Àn
);

55  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

56 
	}
}

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

32 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

33 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

34 
__END_NAMESPACE_STD


36 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


37 
__BEGIN_NAMESPACE_C99


38 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

39 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

40 
__END_NAMESPACE_C99


43 #ifdef 
__USE_ISOC99


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

46 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

47 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

48 
__END_NAMESPACE_C99


51 #ifde‡
__USE_GNU


52 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

53 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

54 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

55 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

56 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

57 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

58 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

61 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


62 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

63 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

64 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


65 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

66 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #ifde‡
__˝lu•lus


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


33 
__STDIO_INLINE
 

34 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

36  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

37 
	}
}

40 
__STDIO_INLINE
 

41 
	$gëch¨
 ()

43  
	`_IO_gëc
 (
°dö
);

44 
	}
}

47 #ifde‡
__USE_MISC


49 
__STDIO_INLINE
 

50 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

52  
	`_IO_gëc_u∆ocked
 (
__Â
);

53 
	}
}

57 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


59 
__STDIO_INLINE
 

60 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

62  
	`_IO_gëc_u∆ocked
 (
__Â
);

63 
	}
}

66 
__STDIO_INLINE
 

67 
	$gëch¨_u∆ocked
 ()

69  
	`_IO_gëc_u∆ocked
 (
°dö
);

70 
	}
}

75 
__STDIO_INLINE
 

76 
	$putch¨
 (
__c
)

78  
	`_IO_putc
 (
__c
, 
°dout
);

79 
	}
}

82 #ifde‡
__USE_MISC


84 
__STDIO_INLINE
 

85 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

87  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

88 
	}
}

92 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


94 
__STDIO_INLINE
 

95 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

97  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

98 
	}
}

101 
__STDIO_INLINE
 

102 
	$putch¨_u∆ocked
 (
__c
)

104  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

105 
	}
}

109 #ifdef 
__USE_GNU


111 
__STDIO_INLINE
 
_IO_ssize_t


112 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

114  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

115 
	}
}

119 #ifde‡
__USE_MISC


121 
__STDIO_INLINE
 

122 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

124  
	`_IO_„of_u∆ocked
 (
__°ªam
);

125 
	}
}

128 
__STDIO_INLINE
 

129 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

131  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

132 
	}
}

138 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__


140 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

141 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

142 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

143 && (
size_t
Ë(
size
) != 0) \

144 ? ({ *
__±r
 = (*Ë(
±r
); \

145 
FILE
 *
__°ªam
 = (
°ªam
); \

146 
size_t
 
__˙t
; \

147 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

148 
__˙t
 > 0; --__cnt) \

150 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

151 i‡(
__c
 =
EOF
) \

153 *
__±r
++ = 
__c
; \

155 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

156 / (
size_t
Ë(
size
); }) \

157 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

158 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

160 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

161 (Ë(
n
), (
size_t
) 0) \

162 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

164 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

165 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

166 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

167 && (
size_t
Ë(
size
) != 0) \

168 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

169 
FILE
 *
__°ªam
 = (
°ªam
); \

170 
size_t
 
__˙t
; \

171 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

172 
__˙t
 > 0; --__cnt) \

173 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

175 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

176 / (
size_t
Ë(
size
); }) \

177 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

178 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

180 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

181 (Ë(
n
), (
size_t
) 0) \

182 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

186 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 
	#•rötf
(
°r
, ...) \

31 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

32 
__VA_ARGS__
)

	)

33 
	#v•rötf
(
°r
, 
fmt
, 
≠
) \

34 
	`__buûtö___v•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (°r), 
fmt
, 
≠
)

	)

36 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


38 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

39 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

40 ...Ë
__THROW
;

41 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

42 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

43 
_G_va_li°
 
__≠
Ë
__THROW
;

45 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

46 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

47 
__VA_ARGS__
)

	)

48 
	#v¢¥ötf
(
°r
, 
Àn
, 
fmt
, 
≠
) \

49 
	`__buûtö___v¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

50 
fmt
, 
≠
)

	)

54 #i‡
__USE_FORTIFY_LEVEL
 > 1

56 
	`__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

57 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

58 
	`__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

59 
	`__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

60 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

61 
	`__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

62 
_G_va_li°
 
__≠
);

64 #i‡
	`__GNUC_PREREQ
 (4, 0)

65 
	#¥ötf
(...) \

66 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

67 
	#Ârötf
(
°ªam
, ...) \

68 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

69 
	#v¥ötf
(
f‹m©
, 
≠
) \

70 
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

71 
	#vÂrötf
(
°ªam
, 
f‹m©
, 
≠
) \

72 
	`__vÂrötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

74 
	#¥ötf
(...) \

75 
	`__buûtö___¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

76 
	#Ârötf
(
°ªam
, ...) \

77 
	`__buûtö___Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

78 
	#v¥ötf
(
f‹m©
, 
≠
) \

79 
	`__buûtö___v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

80 
	#vÂrötf
(
°ªam
, 
f‹m©
, 
≠
) \

81 
	`__buûtö___vÂrötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

86 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

87 *
	`__REDIRECT
 (
__gës_Æüs
, (*
__°r
), 
gës
Ë
__wur
;

89 
__Æways_ölöe
 
__wur
 *

90 
	$gës
 (*
__°r
)

92 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

93  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

94  
	`__gës_Æüs
 (
__°r
);

95 
	}
}

97 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

98 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

99 *
	`__REDIRECT
 (
__fgës_Æüs
,

100 (*
__ª°ri˘
 
__s
, 
__n
,

101 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

103 
__Æways_ölöe
 
__wur
 *

104 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

106 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

107 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

108  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

109  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

110 
	}
}

112 #ifde‡
__USE_GNU


113 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

114 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

115 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

116 (*
__ª°ri˘
 
__s
, 
__n
,

117 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

119 
__Æways_ölöe
 
__wur
 *

120 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

122 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

123 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

124  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

125  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

126 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 
	#L_cu£rid
 9

	)

34 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


35 #unde‡
FOPEN_MAX


36 
	#FOPEN_MAX
 16

	)

39 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


40 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 
	$__LDBL_REDIR1_DECL
 (
__°πﬁd_öã∫Æ
, 
__°πod_öã∫Æ
)

36 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


37 #ifde‡
__USE_MISC


38 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

40 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

41 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

42 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

31 
__Æways_ölöe
 
__wur
 *

32 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

34 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

35  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

37  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

38 
	}
}

41 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

42 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

43 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

44 
size_t
 
__buÊí
), 
±¢ame_r
)

45 
	`__n⁄nuŒ
 ((2));

47 
__Æways_ölöe
 

48 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

50 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

51 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

52  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

53  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

54 
	}
}

57 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

58 
__THROW
 
__wur
;

59 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

60 
w˘omb
Ë
__wur
;

62 
__Æways_ölöe
 
__wur
 

63 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

68 
	#__STDLIB_MB_LEN_MAX
 16

	)

69 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


72 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

73  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

74  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

75 
	}
}

78 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

79 
__c⁄°
 *
__ª°ri˘
 
__§c
,

80 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

81 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

82 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

83 
__c⁄°
 *
__ª°ri˘
 
__§c
,

84 
size_t
 
__Àn
), 
mb°owcs
);

86 
__Æways_ölöe
 
size_t


87 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

88 
size_t
 
__Àn
))

90 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

91 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
)

92 || 
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
)))

93  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

94 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

95  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

96 
	}
}

99 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

100 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

103 (*
__ª°ri˘
 
__d°
,

104 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
wc°ombs
);

107 
__Æways_ölöe
 
size_t


108 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

109 
size_t
 
__Àn
))

111 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

112 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__d°
)))

113  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

114  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

115 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 ? (((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)) \

1170 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1173 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1174 
__STRING_INLINE
 *

1175 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1177 *
__ªsu…
;

1178 i‡(
__s
 =
NULL
)

1179 
__s
 = *
__√xç
;

1180 *
__s
 =
__£p
)

1181 ++
__s
;

1182 
__ªsu…
 = 
NULL
;

1183 i‡(*
__s
 != '\0')

1185 
__ªsu…
 = 
__s
++;

1186 *
__s
 != '\0')

1187 i‡(*
__s
++ =
__£p
)

1189 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1194  
__ªsu…
;

1195 
	}
}

1196 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1197 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1202 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1203 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1205 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1206 
	#__°r£p
(
s
, 
ªje˘
) \

1207 
__exãnsi⁄__
 \

1208 ({ 
__r0
, 
__r1
, 
__r2
; \

1209 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1210 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1211 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1212 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1213 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1214 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1215 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1216 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1217 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1218 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1220 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1223 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1224 
__STRING_INLINE
 *

1225 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1227 *
__ªtvÆ
 = *
__s
;

1228 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1229 *(*
__s
)++ = '\0';

1230  
__ªtvÆ
;

1231 
	}
}

1233 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1234 
__STRING_INLINE
 *

1235 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1237 *
__ªtvÆ
 = *
__s
;

1238 i‡(
__ªtvÆ
 !
NULL
)

1240 *
__˝
 = 
__ªtvÆ
;

1243 i‡(*
__˝
 == '\0')

1245 
__˝
 = 
NULL
;

1248 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1250 *
__˝
++ = '\0';

1253 ++
__˝
;

1255 *
__s
 = 
__˝
;

1257  
__ªtvÆ
;

1258 
	}
}

1260 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1261 
__ªje˘3
);

1262 
__STRING_INLINE
 *

1263 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1265 *
__ªtvÆ
 = *
__s
;

1266 i‡(
__ªtvÆ
 !
NULL
)

1268 *
__˝
 = 
__ªtvÆ
;

1271 i‡(*
__˝
 == '\0')

1273 
__˝
 = 
NULL
;

1276 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1278 *
__˝
++ = '\0';

1281 ++
__˝
;

1283 *
__s
 = 
__˝
;

1285  
__ªtvÆ
;

1286 
	}
}

1287 #ifde‡
__USE_BSD


1288 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1295 #ifde‡
__USE_MISC


1297 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1298 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1299 
	~<°dlib.h
>

1302 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1304 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1305 
	#__°rdup
(
s
) \

1306 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1307 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1308 ? (*Ë
	`ˇŒoc
 (1, 1) \

1309 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1310 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1311 i‡(
__ªtvÆ
 !
NULL
) \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1313 
__ªtvÆ
; 
	}
})) \

1314 : 
	`__°rdup
 (
s
)))

	)

1316 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1317 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1321 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1323 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1324 
__THROW
 
__©åibuã_mÆloc__
;

1325 
	#__°∫dup
(
s
, 
n
) \

1326 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1327 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1328 ? (*Ë
	`ˇŒoc
 (1, 1) \

1329 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1330 
size_t
 
__n
 = (
n
); \

1331 *
__ªtvÆ
; \

1332 i‡(
__n
 < 
__Àn
) \

1333 
__Àn
 = 
__n
 + 1; \

1334 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1335 i‡(
__ªtvÆ
 !
NULL
) \

1337 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1338 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1339 
__Àn
 - 1); \

1341 
__ªtvÆ
; 
	}
})) \

1342 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1344 #ifde‡
__USE_GNU


1345 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1351 #i‚de‡
_FORCE_INLINES


1352 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


26 #unde‡
mem˝y


27 #unde‡
memmove


28 #unde‡
mem£t


29 #unde‡
°rˇt


30 #unde‡
°r˝y


31 #unde‡
°∫ˇt


32 #unde‡
°∫˝y


33 #ifde‡
__USE_GNU


34 #unde‡
memp˝y


35 #unde‡
°p˝y


37 #ifde‡
__USE_BSD


38 #unde‡
bc›y


39 #unde‡
bzîo


43 
	#mem˝y
(
de°
, 
§c
, 
Àn
) \

44 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

45 ? 
	`__buûtö___mem˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

46 : 
	`__mem˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

47 
__Æways_ölöe
 *

48 
__NTH
 (
	$__mem˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

49 
size_t
 
__Àn
))

51  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

52 
	}
}

55 
	#memmove
(
de°
, 
§c
, 
Àn
) \

56 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

57 ? 
	`__buûtö___memmove_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

58 : 
	`__memmove_ichk
 (
de°
, 
§c
, 
Àn
))

	)

59 
__Æways_ölöe
 *

60 
__NTH
 (
	$__memmove_ichk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

62  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

63 
	}
}

66 #ifde‡
__USE_GNU


67 
	#memp˝y
(
de°
, 
§c
, 
Àn
) \

68 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

69 ? 
	`__buûtö___memp˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

70 : 
	`__memp˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

71 
__Æways_ölöe
 *

72 
__NTH
 (
	$__memp˝y_ichk
 (*
__ª°ri˘
 
__de°
,

73 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
))

75  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

76 
	}
}

85 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

87 
	#mem£t
(
de°
, 
ch
, 
Àn
) \

88 (
	`__buûtö_c⁄°™t_p
 (
Àn
) && (len) == 0 \

89 ? (
	`__w¨n_mem£t_zîo_Àn
 (), (Ë(
ch
), (Ë(
Àn
), (*Ë(
de°
)) \

90 : ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

91 ? 
	`__buûtö___mem£t_chk
 (
de°
, 
ch
, 
Àn
, 
	`__bos0
 (dest)) \

92 : 
	`__mem£t_ichk
 (
de°
, 
ch
, 
Àn
)))

	)

93 
__Æways_ölöe
 *

94 
__NTH
 (
	$__mem£t_ichk
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

96  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

97 
	}
}

99 #ifde‡
__USE_BSD


100 
	#bc›y
(
§c
, 
de°
, 
Àn
) (() \

101 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

102 ? 
	`__buûtö___memmove_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos0
 (dest)) \

103 : 
	`__memmove_ichk
 (
de°
, 
§c
, 
Àn
)))

	)

104 
	#bzîo
(
de°
, 
Àn
) (() \

105 ((
	`__bos0
 (
de°
Ë!(
size_t
) -1) \

106 ? 
	`__buûtö___mem£t_chk
 (
de°
, '\0', 
Àn
, 
	`__bos0
 (dest)) \

107 : 
	`__mem£t_ichk
 (
de°
, '\0', 
Àn
)))

	)

111 
	#°r˝y
(
de°
, 
§c
) \

112 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

113 ? 
	`__buûtö___°r˝y_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

114 : 
	`__°r˝y_ichk
 (
de°
, 
§c
))

	)

115 
__Æways_ölöe
 *

116 
__NTH
 (
	$__°r˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

118  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

119 
	}
}

122 #ifde‡
__USE_GNU


123 
	#°p˝y
(
de°
, 
§c
) \

124 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

125 ? 
	`__buûtö___°p˝y_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

126 : 
	`__°p˝y_ichk
 (
de°
, 
§c
))

	)

127 
__Æways_ölöe
 *

128 
__NTH
 (
	$__°p˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

130  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

131 
	}
}

135 
	#°∫˝y
(
de°
, 
§c
, 
Àn
) \

136 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

137 ? 
	`__buûtö___°∫˝y_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos
 (dest)) \

138 : 
	`__°∫˝y_ichk
 (
de°
, 
§c
, 
Àn
))

	)

139 
__Æways_ölöe
 *

140 
__NTH
 (
	$__°∫˝y_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

141 
size_t
 
__Àn
))

143  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

144 
	}
}

148 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

149 
size_t
 
__de°Àn
Ë
__THROW
;

150 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

151 
__c⁄°
 *
__§c
,

152 
size_t
 
__n
), 
°≤˝y
);

154 
__Æways_ölöe
 *

155 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

158 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

159  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

160  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

161 
	}
}

164 
	#°rˇt
(
de°
, 
§c
) \

165 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

166 ? 
	`__buûtö___°rˇt_chk
 (
de°
, 
§c
, 
	`__bos
 (dest)) \

167 : 
	`__°rˇt_ichk
 (
de°
, 
§c
))

	)

168 
__Æways_ölöe
 *

169 
__NTH
 (
	$__°rˇt_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

171  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

172 
	}
}

175 
	#°∫ˇt
(
de°
, 
§c
, 
Àn
) \

176 ((
	`__bos
 (
de°
Ë!(
size_t
) -1) \

177 ? 
	`__buûtö___°∫ˇt_chk
 (
de°
, 
§c
, 
Àn
, 
	`__bos
 (dest)) \

178 : 
	`__°∫ˇt_ichk
 (
de°
, 
§c
, 
Àn
))

	)

179 
__Æways_ölöe
 *

180 
__NTH
 (
	$__°∫ˇt_ichk
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

181 
size_t
 
__Àn
))

183  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

184 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

30 
	#__√ed_size_t


	)

31 
	~<°ddef.h
>

34 
	t__u_ch¨
;

35 
	t__u_sh‹t
;

36 
	t__u_öt
;

37 
	t__u_l⁄g
;

40 sig√d 
	t__öt8_t
;

41 
	t__uöt8_t
;

42 sig√d 
	t__öt16_t
;

43 
	t__uöt16_t
;

44 sig√d 
	t__öt32_t
;

45 
	t__uöt32_t
;

46 #i‡
__WORDSIZE
 == 64

47 sig√d 
	t__öt64_t
;

48 
	t__uöt64_t
;

49 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


50 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

51 
__exãnsi⁄__
 
	t__uöt64_t
;

55 #i‡
__WORDSIZE
 == 64

56 
	t__quad_t
;

57 
	t__u_quad_t
;

58 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


59 
__exãnsi⁄__
 
	t__quad_t
;

60 
__exãnsi⁄__
 
	t__u_quad_t
;

64 
	m__vÆ
[2];

65 } 
	t__quad_t
;

68 
__u_l⁄g
 
	m__vÆ
[2];

69 } 
	t__u_quad_t
;

102 
	#__S16_TYPE
 

	)

103 
	#__U16_TYPE
 

	)

104 
	#__S32_TYPE
 

	)

105 
	#__U32_TYPE
 

	)

106 
	#__SLONGWORD_TYPE
 

	)

107 
	#__ULONGWORD_TYPE
 

	)

108 #i‡
__WORDSIZE
 == 32

109 
	#__SQUAD_TYPE
 
__quad_t


	)

110 
	#__UQUAD_TYPE
 
__u_quad_t


	)

111 
	#__SWORD_TYPE
 

	)

112 
	#__UWORD_TYPE
 

	)

113 
	#__SLONG32_TYPE
 

	)

114 
	#__ULONG32_TYPE
 

	)

115 
	#__S64_TYPE
 
__quad_t


	)

116 
	#__U64_TYPE
 
__u_quad_t


	)

119 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

120 #ñi‡
__WORDSIZE
 == 64

121 
	t__SQUAD_TYPE
 

	)

122 
	t__UQUAD_TYPE
 

	)

123 
	t__SWORD_TYPE
 

	)

124 
	t__UWORD_TYPE
 

	)

125 
	t__SLONG32_TYPE
 

	)

126 
	t__ULONG32_TYPE
 

	)

127 
	t__S64_TYPE
 

	)

128 
	t__U64_TYPE
 

	)

130 
	t__STD_TYPE
 

	)

134 
	~<bôs/ty≥sizes.h
>

137 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

138 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

139 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

140 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

141 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

142 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

143 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

144 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

145 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

146 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

147 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

148 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

149 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

150 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

151 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

152 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

153 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

154 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

156 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

157 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

158 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

161 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

164 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

167 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

172 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

173 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

176 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

177 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

180 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

181 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

183 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

187 
__off64_t
 
	t__loff_t
;

188 
__quad_t
 *
	t__qaddr_t
;

189 *
	t__ˇddr_t
;

192 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

195 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

198 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

29 
__Æways_ölöe
 
__wur
 
ssize_t


30 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

32 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

33 && (!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
Ë|| __nbyã†> 
	`__bos0
 (
__buf
)))

34  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

35  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

36 
	}
}

38 #ifde‡
__USE_UNIX98


39 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

40 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

41 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

42 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

43 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

44 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

45 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

46 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

47 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

48 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
__Æways_ölöe
 
__wur
 
ssize_t


52 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

54 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

55 && (!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
Ë|| __nbyã†> 
	`__bos0
 (
__buf
)))

56  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

57  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

58 
	}
}

60 
__Æways_ölöe
 
__wur
 
ssize_t


61 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

63 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

64 && (!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
Ë|| __nbyã†> 
	`__bos0
 (
__buf
)))

65  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

66  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

67 
	}
}

70 #ifde‡
__USE_LARGEFILE64


71 
__Æways_ölöe
 
__wur
 
ssize_t


72 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1

75 && (!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
Ë|| __nbyã†> 
	`__bos0
 (
__buf
)))

76  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

77  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

78 
	}
}

82 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


83 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

84 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

85 
size_t
 
__buÊí
)

86 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

87 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

88 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

89 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

90 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

92 
__Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


93 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

94 
size_t
 
__Àn
))

96 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

97 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__buf
)))

98  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

99  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

100 
	}
}

103 #ifde‡
__USE_ATFILE


104 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

105 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

106 
size_t
 
__buÊí
)

107 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

108 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

109 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

110 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

111 
ªadlök©
)

112 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

114 
__Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


115 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

116 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

118 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

119 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__buf
)))

120  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

121  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

122 
	}
}

125 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

126 
__THROW
 
__wur
;

127 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

128 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

130 
__Æways_ölöe
 
__wur
 *

131 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

133 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

134 && (!
	`__buûtö_c⁄°™t_p
 (
__size
Ë|| __sizê> 
	`__bos
 (
__buf
)))

135  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

136  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

137 
	}
}

139 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


140 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

141 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

142 *
	`__REDIRECT_NTH
 (
__gëwd_Æüs
, (*
__buf
), 
gëwd
)

143 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

145 
__Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

146 
	`__NTH
 (
	$gëwd
 (*
__buf
))

148 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

149  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

150  
	`__gëwd_Æüs
 (
__buf
);

151 
	}
}

154 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

155 
size_t
 
__buÊí
Ë
__THROW
;

156 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

157 
size_t
 
__Àn
), 
c⁄f°r
);

159 
__Æways_ölöe
 
size_t


160 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

162 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

163 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| 
	`__bos
 (
__buf
) < __len))

164  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

165  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

166 
	}
}

169 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
li°Àn
)

170 
__THROW
 
__wur
;

171 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

172 
gëgroups
Ë
__wur
;

174 
__Æways_ölöe
 

175 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

177 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1

178 && (!
	`__buûtö_c⁄°™t_p
 (
__size
)

179 || 
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
)

180 || 
__size
 < 0))

181  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

182  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

183 
	}
}

186 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

187 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

188 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

189 
size_t
 
__buÊí
), 
ây«me_r
)

190 
	`__n⁄nuŒ
 ((2));

192 
__Æways_ölöe
 

193 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

195 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

196 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

197  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

198  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

199 
	}
}

202 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


203 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

204 
	`__n⁄nuŒ
 ((1));

205 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

206 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

208 
__Æways_ölöe
 

209 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

211 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

212 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

213  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

214  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

215 
	}
}

219 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


220 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

221 
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

223 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

225 
__Æways_ölöe
 

226 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

228 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

229 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

230  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

231  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

232 
	}
}

236 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

237 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

238 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

239 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

240 
size_t
 
__buÊí
),

241 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

243 
__Æways_ölöe
 

244 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

246 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1

247 && (!
	`__buûtö_c⁄°™t_p
 (
__buÊí
Ë|| __buÊí > 
	`__bos
 (
__buf
)))

248  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

249  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

250 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_GNU


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

93 #unde‡
__USE_ISOC99


94 #unde‡
__USE_POSIX


95 #unde‡
__USE_POSIX2


96 #unde‡
__USE_POSIX199309


97 #unde‡
__USE_POSIX199506


98 #unde‡
__USE_XOPEN


99 #unde‡
__USE_XOPEN_EXTENDED


100 #unde‡
__USE_UNIX98


101 #unde‡
__USE_XOPEN2K


102 #unde‡
__USE_LARGEFILE


103 #unde‡
__USE_LARGEFILE64


104 #unde‡
__USE_FILE_OFFSET64


105 #unde‡
__USE_BSD


106 #unde‡
__USE_SVID


107 #unde‡
__USE_MISC


108 #unde‡
__USE_ATFILE


109 #unde‡
__USE_GNU


110 #unde‡
__USE_REENTRANT


111 #unde‡
__USE_FORTIFY_LEVEL


112 #unde‡
__FAVOR_BSD


113 #unde‡
__KERNEL_STRICT_NAMES


117 #i‚de‡
_LOOSE_KERNEL_NAMES


118 
	#__KERNEL_STRICT_NAMES


	)

122 
	#__USE_ANSI
 1

	)

131 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


132 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

133 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

135 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

140 #i‡
deföed
 
_BSD_SOURCE
 && \

141 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

142 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

143 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

144 
	#__FAVOR_BSD
 1

	)

148 #ifde‡
_GNU_SOURCE


149 #unde‡
_ISOC99_SOURCE


150 
	#_ISOC99_SOURCE
 1

	)

151 #unde‡
_POSIX_SOURCE


152 
	#_POSIX_SOURCE
 1

	)

153 #unde‡
_POSIX_C_SOURCE


154 
	#_POSIX_C_SOURCE
 200112L

	)

155 #unde‡
_XOPEN_SOURCE


156 
	#_XOPEN_SOURCE
 600

	)

157 #unde‡
_XOPEN_SOURCE_EXTENDED


158 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

159 #unde‡
_LARGEFILE64_SOURCE


160 
	#_LARGEFILE64_SOURCE
 1

	)

161 #unde‡
_BSD_SOURCE


162 
	#_BSD_SOURCE
 1

	)

163 #unde‡
_SVID_SOURCE


164 
	#_SVID_SOURCE
 1

	)

165 #unde‡
_ATFILE_SOURCE


166 
	#_ATFILE_SOURCE
 1

	)

171 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

172 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

173 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

174 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

175 
	#_BSD_SOURCE
 1

	)

176 
	#_SVID_SOURCE
 1

	)

183 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

184 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

185 
	#__USE_ISOC99
 1

	)

190 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

191 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

192 
	#_POSIX_SOURCE
 1

	)

193 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

194 
	#_POSIX_C_SOURCE
 2

	)

195 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

196 
	#_POSIX_C_SOURCE
 199506L

	)

198 
	#_POSIX_C_SOURCE
 200112L

	)

202 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


203 
	#__USE_POSIX
 1

	)

206 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


207 
	#__USE_POSIX2
 1

	)

210 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

211 
	#__USE_POSIX199309
 1

	)

214 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

215 
	#__USE_POSIX199506
 1

	)

218 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

219 
	#__USE_XOPEN2K
 1

	)

222 #ifdef 
_XOPEN_SOURCE


223 
	#__USE_XOPEN
 1

	)

224 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

225 
	#__USE_XOPEN_EXTENDED
 1

	)

226 
	#__USE_UNIX98
 1

	)

227 #unde‡
_LARGEFILE_SOURCE


228 
	#_LARGEFILE_SOURCE
 1

	)

229 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

230 
	#__USE_XOPEN2K
 1

	)

231 #unde‡
__USE_ISOC99


232 
	#__USE_ISOC99
 1

	)

235 #ifde‡
_XOPEN_SOURCE_EXTENDED


236 
	#__USE_XOPEN_EXTENDED
 1

	)

241 #ifde‡
_LARGEFILE_SOURCE


242 
	#__USE_LARGEFILE
 1

	)

245 #ifde‡
_LARGEFILE64_SOURCE


246 
	#__USE_LARGEFILE64
 1

	)

249 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

250 
	#__USE_FILE_OFFSET64
 1

	)

253 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


254 
	#__USE_MISC
 1

	)

257 #ifdef 
_BSD_SOURCE


258 
	#__USE_BSD
 1

	)

261 #ifdef 
_SVID_SOURCE


262 
	#__USE_SVID
 1

	)

265 #ifdef 
_ATFILE_SOURCE


266 
	#__USE_ATFILE
 1

	)

269 #ifdef 
_GNU_SOURCE


270 
	#__USE_GNU
 1

	)

273 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


274 
	#__USE_REENTRANT
 1

	)

277 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

278 && 
deföed
 
__OPTIMIZE__
 && __OPTIMIZE__ > 0 \

279 && (
__GNUC_PREREQ
 (4, 1) \

280 || (
deföed
 
	g__GNUC_RH_RELEASE__
 && 
__GNUC_PREREQ
 (4, 0)) \

281 || (
deföed
 
	g__GNUC_RH_RELEASE__
 && 
__GNUC_PREREQ
 (3, 4) \

282 && 
	g__GNUC_MINOR__
 == 4 \

283 && (
__GNUC_PATCHLEVEL__
 > 2 \

284 || (
__GNUC_PATCHLEVEL__
 =2 && 
__GNUC_RH_RELEASE__
 >= 8))))

285 #i‡
_FORTIFY_SOURCE
 > 1

286 
	#__USE_FORTIFY_LEVEL
 2

	)

288 
	#__USE_FORTIFY_LEVEL
 1

	)

291 
	#__USE_FORTIFY_LEVEL
 0

	)

295 
	#__STDC_IEC_559__
 1

	)

296 
	#__STDC_IEC_559_COMPLEX__
 1

	)

299 
	#__STDC_ISO_10646__
 200009L

	)

307 #unde‡
__GNU_LIBRARY__


308 
	#__GNU_LIBRARY__
 6

	)

312 
	#__GLIBC__
 2

	)

313 
	#__GLIBC_MINOR__
 5

	)

315 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

316 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

319 #i‡
deföed
 
__GNUC__
 \

320 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

321 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

322 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

323 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

327 #i‚de‡
__ASSEMBLER__


328 #i‚de‡
_SYS_CDEFS_H


329 
	~<sys/cdefs.h
>

334 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


335 
	#__USE_LARGEFILE
 1

	)

336 
	#__USE_LARGEFILE64
 1

	)

342 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

343 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__


344 
	#__USE_EXTERN_INLINES
 1

	)

352 
	~<gnu/°ubs.h
>

	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

148 
	#_IO_SKIPWS
 01

	)

149 
	#_IO_LEFT
 02

	)

150 
	#_IO_RIGHT
 04

	)

151 
	#_IO_INTERNAL
 010

	)

152 
	#_IO_DEC
 020

	)

153 
	#_IO_OCT
 040

	)

154 
	#_IO_HEX
 0100

	)

155 
	#_IO_SHOWBASE
 0200

	)

156 
	#_IO_SHOWPOINT
 0400

	)

157 
	#_IO_UPPERCASE
 01000

	)

158 
	#_IO_SHOWPOS
 02000

	)

159 
	#_IO_SCIENTIFIC
 04000

	)

160 
	#_IO_FIXED
 010000

	)

161 
	#_IO_UNITBUF
 020000

	)

162 
	#_IO_STDIO
 040000

	)

163 
	#_IO_DONT_CLOSE
 0100000

	)

164 
	#_IO_BOOLALPHA
 0200000

	)

167 
_IO_jump_t
; 
	g_IO_FILE
;

170 #ifde‡
_IO_MTSAFE_IO


171 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

172 
	~<bôs/°dio-lock.h
>

177 
	t_IO_lock_t
;

183 
	s_IO_m¨kî
 {

184 
_IO_m¨kî
 *
	m_√xt
;

185 
_IO_FILE
 *
	m_sbuf
;

189 
	m_pos
;

191 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

192 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

193 
	mpublic
:

194 
°ªamm¨kî
(
°ªambuf
 *
sb
);

195 ~
°ªamm¨kî
();

196 
ßvög
(Ë{  
	m_•os
 == -2; }

197 
dñè
(
°ªamm¨kî
&);

198 
dñè
();

203 
	e__codecvt_ªsu…


205 
	m__codecvt_ok
,

206 
	m__codecvt_∑πül
,

207 
	m__codecvt_îr‹
,

208 
	m__codecvt_noc⁄v


211 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


214 
	s_IO_codecvt


216 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

217 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

218 
	m__mb°©e_t
 *,

219 c⁄° 
	mwch¨_t
 *,

220 c⁄° 
	mwch¨_t
 *,

221 c⁄° 
	mwch¨_t
 **, *,

223 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

224 
	m__mb°©e_t
 *, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *,

229 c⁄° **, 
	mwch¨_t
 *,

230 
	mwch¨_t
 *, wchar_t **);

231 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

232 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

233 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

234 c⁄° *, c⁄° *, 
	m_IO_size_t
);

235 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

237 
_IO_ic⁄v_t
 
	m__cd_ö
;

238 
_IO_ic⁄v_t
 
	m__cd_out
;

242 
	s_IO_wide_d©a


244 
wch¨_t
 *
	m_IO_ªad_±r
;

245 
wch¨_t
 *
	m_IO_ªad_íd
;

246 
wch¨_t
 *
	m_IO_ªad_ba£
;

247 
wch¨_t
 *
	m_IO_wrôe_ba£
;

248 
wch¨_t
 *
	m_IO_wrôe_±r
;

249 
wch¨_t
 *
	m_IO_wrôe_íd
;

250 
wch¨_t
 *
	m_IO_buf_ba£
;

251 
wch¨_t
 *
	m_IO_buf_íd
;

253 
wch¨_t
 *
	m_IO_ßve_ba£
;

254 
wch¨_t
 *
	m_IO_backup_ba£
;

256 
wch¨_t
 *
	m_IO_ßve_íd
;

258 
__mb°©e_t
 
	m_IO_°©e
;

259 
__mb°©e_t
 
	m_IO_œ°_°©e
;

260 
_IO_codecvt
 
	m_codecvt
;

262 
wch¨_t
 
	m_sh‹tbuf
[1];

264 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

268 
	s_IO_FILE
 {

269 
	m_Êags
;

270 
	#_IO_fûe_Êags
 
_Êags


	)

274 * 
	m_IO_ªad_±r
;

275 * 
	m_IO_ªad_íd
;

276 * 
	m_IO_ªad_ba£
;

277 * 
	m_IO_wrôe_ba£
;

278 * 
	m_IO_wrôe_±r
;

279 * 
	m_IO_wrôe_íd
;

280 * 
	m_IO_buf_ba£
;

281 * 
	m_IO_buf_íd
;

283 *
	m_IO_ßve_ba£
;

284 *
	m_IO_backup_ba£
;

285 *
	m_IO_ßve_íd
;

287 
_IO_m¨kî
 *
	m_m¨kîs
;

289 
_IO_FILE
 *
	m_chaö
;

291 
	m_fûío
;

293 
	m_blksize
;

295 
	m_Êags2
;

297 
_IO_off_t
 
	m_ﬁd_off£t
;

299 
	#__HAVE_COLUMN


	)

301 
	m_cur_cﬁumn
;

302 sig√d 
	m_vèbÀ_off£t
;

303 
	m_sh‹tbuf
[1];

307 
_IO_lock_t
 *
	m_lock
;

308 #ifde‡
_IO_USE_OLD_IO_FILE


311 
	s_IO_FILE_com∂ëe


313 
_IO_FILE
 
	m_fûe
;

315 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

316 
_IO_off64_t
 
	m_off£t
;

317 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


319 
_IO_codecvt
 *
	m_codecvt
;

320 
_IO_wide_d©a
 *
	m_wide_d©a
;

321 
_IO_FILE
 *
	m_‰ìªs_li°
;

322 *
	m_‰ìªs_buf
;

323 
size_t
 
	m_‰ìªs_size
;

325 *
	m__∑d1
;

326 *
	m__∑d2
;

327 *
	m__∑d3
;

328 *
	m__∑d4
;

329 
size_t
 
	m__∑d5
;

331 
	m_mode
;

333 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

337 #i‚de‡
__˝lu•lus


338 
_IO_FILE
 
	t_IO_FILE
;

341 
	g_IO_FILE_∂us
;

343 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

344 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

345 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

346 #i‚de‡
_LIBC


347 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

348 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

349 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

351 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

352 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

353 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

361 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

369 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

370 
	tsize_t
 
	t__n
);

378 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

381 
	t__io_˛o£_‚
 (*
	t__cookõ
);

384 #ifde‡
_GNU_SOURCE


386 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

387 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

388 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

389 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

394 
__io_ªad_‚
 *
	mªad
;

395 
__io_wrôe_‚
 *
	mwrôe
;

396 
__io_£ek_‚
 *
	m£ek
;

397 
__io_˛o£_‚
 *
	m˛o£
;

398 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

399 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

401 
	g_IO_cookõ_fûe
;

404 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

405 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

409 #ifde‡
__˝lu•lus


413 
__undîÊow
 (
_IO_FILE
 *);

414 
__uÊow
 (
_IO_FILE
 *);

415 
__ovîÊow
 (
_IO_FILE
 *, );

416 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

417 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

418 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

420 #i‡ 
__GNUC__
 >= 3

421 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

423 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

426 
	#_IO_gëc_u∆ocked
(
_Â
) \

427 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

428 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

429 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

430 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

431 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

432 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

433 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

435 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

436 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

438 
	#_IO_gëwc_u∆ocked
(
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 >(_Â)->_wide_d©a->
_IO_ªad_íd
,\

441 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

442 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

443 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

444 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
, 0) \

445 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

446 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

448 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

449 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

451 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

452 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

453 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

454 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

456 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

459 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

460 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

462 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

463 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

464 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

466 #ifde‡
_IO_MTSAFE_IO


467 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

468 
	#_IO_Êockfûe
(
_Â
) \

469 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

470 
	#_IO_fu∆ockfûe
(
_Â
) \

471 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

473 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

474 
	#_IO_Êockfûe
(
_Â
Ë

	)

475 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

476 
	#_IO_·rylockfûe
(
_Â
Ë

	)

477 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

478 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

481 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

482 
_IO_va_li°
, *
__ª°ri˘
);

483 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

484 
_IO_va_li°
);

485 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

486 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

488 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

489 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

491 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

493 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


494 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

495 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

496 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

497 #i‡
__GNUC__
 >= 2

500 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


501 
	~<shlib-com∑t.h
>

502 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

503 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

504 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

505 c⁄° 
_IO_°dö_u£d
;

506 
wók_exã∫
 (
_IO_°dö_u£d
);

509 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


510 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

514 
	#_IO_fwide
(
__Â
, 
__mode
) \

515 ({ 
__ªsu…
 = (
__mode
); \

516 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

518 i‡((
__Â
)->
_mode
 == 0) \

520 (
__Â
)->
_mode
 = -1; \

521 
__ªsu…
 = (
__Â
)->
_mode
; \

523 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

524 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

526 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

527 
__ªsu…
; })

	)

530 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

531 
_IO_va_li°
, *
__ª°ri˘
);

532 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

533 
_IO_va_li°
);

534 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

535 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

538 #ifde‡
__LDBL_COMPAT


539 
	~<bôs/libio-ldbl.h
>

542 #ifde‡
__˝lu•lus


	@/usr/include/ncurses/ncurses_dll.h

30 #i‚de‡
NCURSES_DLL_H_ö˛


31 
	#NCURSES_DLL_H_ö˛
 1

	)

37 #unde‡
NCURSES_DLL


38 
	#NCURSES_STATIC


	)

40 #i‡
deföed
(
__CYGWIN__
)

41 #i‡
deföed
(
NCURSES_DLL
)

42 #i‡
deföed
(
NCURSES_STATIC
)

43 #unde‡
NCURSES_STATIC


46 #unde‡
NCURSES_IMPEXP


47 #unde‡
NCURSES_API


48 #unde‡
NCURSES_EXPORT


49 #unde‡
NCURSES_EXPORT_VAR


50 #i‡
deföed
(
NCURSES_DLL
)

52 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒexp‹t
)

	)

53 #ñi‡
deföed
(
NCURSES_STATIC
)

55 
	#NCURSES_IMPEXP


	)

58 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒimp‹t
)

	)

60 
	#NCURSES_API
 
__cde˛


	)

61 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

62 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

66 #i‡!
deföed
(
NCURSES_IMPEXP
)

67 
	#NCURSES_IMPEXP


	)

69 #i‡!
deföed
(
NCURSES_API
)

70 
	#NCURSES_API


	)

72 #i‡!
deföed
(
NCURSES_EXPORT
)

73 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

75 #i‡!
deföed
(
NCURSES_EXPORT_VAR
)

76 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

	@/usr/include/ncurses/unctrl.h

44 #i‚de‡
NCURSES_UNCTRL_H_ö˛


45 
	#NCURSES_UNCTRL_H_ö˛
 1

	)

47 #unde‡
NCURSES_VERSION


48 
	#NCURSES_VERSION
 "5.5"

	)

50 #ifde‡
__˝lu•lus


54 
	~<ncur£s/cur£s.h
>

56 #unde‡
un˘æ


57 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
un˘æ
 (
chty≥
);

59 #ifde‡
__˝lu•lus


	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (
__c⁄°
 *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (
__c⁄°
 *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_time•ec


	)

29 
	~<time.h
>

32 
	~<bôs/sched.h
>

34 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

37 
__BEGIN_DECLS


40 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

41 
__THROW
;

44 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

47 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

48 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

51 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

54 
	$sched_yõld
 (Ë
__THROW
;

57 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

66 #ifde‡
__USE_GNU


68 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

69 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET
 (˝u, cpu£ç)

	)

70 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR
 (˝u, cpu£ç)

	)

71 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET
 (˝u, cpu£ç)

	)

72 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO
 (˝u£ç)

	)

76 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

77 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

80 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

81 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

84 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

20 #i‚de‡
_SYS_SYSMACROS_H


21 
	#_SYS_SYSMACROS_H
 1

	)

23 
	~<„©uªs.h
>

28 #ifde‡
__GLIBC_HAVE_LONG_LONG


29 
__exãnsi⁄__


30 
__ölöe
 
	$gnu_dev_maj‹
 (
__dev
)

31 
__THROW
;

32 
__exãnsi⁄__


33 
__ölöe
 
	$gnu_dev_mö‹
 (
__dev
)

34 
__THROW
;

35 
__exãnsi⁄__


36 
__ölöe
 
	$gnu_dev_makedev
 (
__maj‹
,

37 
__mö‹
)

38 
__THROW
;

40 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

41 
__exãnsi⁄__
 
__ölöe
 

42 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

44  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

45 
	}
}

47 
__exãnsi⁄__
 
__ölöe
 

48 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

50  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

51 
	}
}

53 
__exãnsi⁄__
 
__ölöe
 

54 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

56  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

57 | (((Ë(
__mö‹
 & ~0xff)) << 12)

58 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

59 
	}
}

64 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

65 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

66 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
);

50 
ssize_t
 
wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
);

52 
	g__END_DECLS


	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‚de‡
__√ed_mb°©e_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #ifde‡
__USE_UNIX98


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

43 
	#__√ed_size_t


	)

44 
	#__√ed_wch¨_t


	)

45 
	#__√ed_NULL


	)

47 
	#__√ed_wöt_t


	)

48 
	~<°ddef.h
>

50 
	~<bôs/wch¨.h
>

54 #i‚de‡
_WINT_T


59 
	#_WINT_T


	)

60 
	twöt_t
;

64 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

65 && 
deföed
 
__WINT_TYPE__


66 
__BEGIN_NAMESPACE_STD


67 
__WINT_TYPE__
 
	twöt_t
;

68 
	g__END_NAMESPACE_STD


73 #i‚de‡
__mb°©e_t_deföed


74 
	#__mb°©e_t_deföed
 1

	)

78 
	m__cou¡
;

81 
wöt_t
 
	m__wch
;

82 
	m__wchb
[4];

83 } 
	m__vÆue
;

84 } 
	t__mb°©e_t
;

86 #unde‡
__√ed_mb°©e_t


91 #ifde‡
_WCHAR_H


93 
__BEGIN_NAMESPACE_C99


95 
__mb°©e_t
 
	tmb°©e_t
;

96 
	g__END_NAMESPACE_C99


97 #ifde‡
__USE_GNU


98 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

101 #i‚de‡
WCHAR_MIN


103 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

104 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

107 #i‚de‡
WEOF


108 
	#WEOF
 (0xffffffffu)

	)

113 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


114 
	~<w˘y≥.h
>

118 
__BEGIN_DECLS


120 
__BEGIN_NAMESPACE_STD


123 
tm
;

127 
	$__USING_NAMESPACE_STD
(
tm
)

128 
__END_NAMESPACE_STD


131 
__BEGIN_NAMESPACE_C99


133 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

134 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

136 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

137 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

138 
__THROW
;

141 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

142 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

144 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

146 
__THROW
;

149 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

150 
__THROW
 
__©åibuã_puª__
;

152 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

153 
__THROW
 
__©åibuã_puª__
;

154 
__END_NAMESPACE_C99


156 #ifde‡
__USE_GNU


158 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

161 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

162 
size_t
 
__n
Ë
__THROW
;

166 
	~<xloˇÀ.h
>

168 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

169 
__loˇÀ_t
 
__loc
Ë
__THROW
;

171 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

172 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

175 
__BEGIN_NAMESPACE_C99


178 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

182 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

184 
__END_NAMESPACE_C99


186 #ifde‡
__USE_GNU


192 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

193 
__loˇÀ_t
 
__loc
Ë
__THROW
;

198 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

199 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

202 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

205 
__BEGIN_NAMESPACE_C99


207 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

208 
__THROW
 
__©åibuã_puª__
;

210 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

211 
__THROW
 
__©åibuã_puª__
;

212 
__END_NAMESPACE_C99


214 #ifde‡
__USE_GNU


217 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

218 
__THROW
 
__©åibuã_puª__
;

221 
__BEGIN_NAMESPACE_C99


224 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

225 
__THROW
 
__©åibuã_puª__
;

228 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

229 
__THROW
 
__©åibuã_puª__
;

231 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

232 
__THROW
 
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

235 
__THROW
 
__©åibuã_puª__
;

238 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

240 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

243 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

244 
__END_NAMESPACE_C99


246 #ifde‡
__USE_XOPEN


248 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

249 
__THROW
 
__©åibuã_puª__
;

252 #ifde‡
__USE_GNU


254 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

255 
__THROW
 
__©åibuã_puª__
;

259 
__BEGIN_NAMESPACE_C99


261 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

262 
__THROW
 
__©åibuã_puª__
;

265 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

266 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

267 
__THROW
 
__©åibuã_puª__
;

270 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

271 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

275 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

276 
__THROW
;

279 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

280 
__END_NAMESPACE_C99


282 #ifde‡
__USE_GNU


285 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

286 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

287 
__THROW
;

291 
__BEGIN_NAMESPACE_C99


294 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

298 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

302 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

306 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

307 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

308 
mb°©e_t
 *
__p
Ë
__THROW
;

311 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

312 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

315 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

317 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

318 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

319 
__END_NAMESPACE_C99


321 #ifde‡
__USE_EXTERN_INLINES


324 #i‚de‡
__˝lu•lus


328 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

329 
__ölöe
 
wöt_t


330 
	`__NTH
 (
	$btowc
 (
__c
))

331 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

332 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

334 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

335 
__ölöe
 

336 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

337 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

338 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

341 
__ölöe
 
size_t


342 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

343 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

344 {  (
__ps
 !
NULL


345 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

348 
__BEGIN_NAMESPACE_C99


351 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

352 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

353 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

357 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

358 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

359 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

360 
__END_NAMESPACE_C99


363 #ifdef 
__USE_GNU


366 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

367 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

368 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

373 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

374 
size_t
 
__nwc
, size_à
__Àn
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

380 #ifde‡
__USE_XOPEN


382 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

386 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

390 
__BEGIN_NAMESPACE_C99


393 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

394 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

396 #ifde‡
__USE_ISOC99


398 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

399 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

400 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

407 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

408 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

412 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

413 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

414 
__THROW
;

416 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

419 
__exãnsi⁄__


420 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

421 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

422 
__THROW
;

426 
__exãnsi⁄__


427 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

428 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

429 
__ba£
Ë
__THROW
;

431 
__END_NAMESPACE_C99


433 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


436 
__exãnsi⁄__


437 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

438 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

439 
__THROW
;

443 
__exãnsi⁄__


444 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

445 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

446 
__ba£
Ë
__THROW
;

449 #ifde‡
__USE_GNU


463 
	~<xloˇÀ.h
>

467 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

468 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

469 
__loˇÀ_t
 
__loc
Ë
__THROW
;

471 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

473 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

475 
__exãnsi⁄__


476 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

478 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

480 
__exãnsi⁄__


481 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

483 
__ba£
, 
__loˇÀ_t
 
__loc
)

484 
__THROW
;

486 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

488 
__THROW
;

490 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

492 
__THROW
;

494 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

495 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

496 
__loˇÀ_t
 
__loc
Ë
__THROW
;

502 
	$__wc°od_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

503 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

504 
__THROW
;

505 
	$__wc°of_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

507 
__THROW
;

508 
	$__wc°ﬁd_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

509 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

510 
__group
Ë
__THROW
;

512 #i‡!
deföed
 
__wc°ﬁ_öã∫Æ_deföed
 \

513 && 
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

514 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

515 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

516 
__ba£
, 
__group
Ë
__THROW
;

517 
	#__wc°ﬁ_öã∫Æ_deföed
 1

	)

519 #i‡!
deföed
 
__wc°oul_öã∫Æ_deföed
 \

520 && 
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

521 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈t
,

522 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

523 
__ba£
, 
__group
Ë
__THROW
;

524 
	#__wc°oul_öã∫Æ_deföed
 1

	)

526 #i‡!
deföed
 
__wc°ﬁl_öã∫Æ_deföed
 \

527 && 
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

528 
__exãnsi⁄__


529 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

530 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

531 
__ba£
, 
__group
Ë
__THROW
;

532 
	#__wc°ﬁl_öã∫Æ_deföed
 1

	)

534 #i‡!
deföed
 
__wc°ouŒ_öã∫Æ_deföed
 \

535 && 
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

536 
__exãnsi⁄__


537 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *

538 
__ª°ri˘
 
__≈å
,

539 
wch¨_t
 **

540 
__ª°ri˘
 
__íd±r
,

541 
__ba£
,

542 
__group
Ë
__THROW
;

543 
	#__wc°ouŒ_öã∫Æ_deföed
 1

	)

547 #i‡
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

549 
__BEGIN_NAMESPACE_C99


551 
__ölöe
 

552 
	`__NTH
 (
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

554 {  
	`__wc°od_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

555 
__ölöe
 

556 
__NTH
 (
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

558 {  
	`__wc°ﬁ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

559 
__ölöe
 

560 
__NTH
 (
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

562 {  
	`__wc°oul_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

563 
__END_NAMESPACE_C99


565 #ifde‡
__USE_GNU


566 
__ölöe
 

567 
__NTH
 (
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

568 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

569 {  
	`__wc°of_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

570 #i‚de‡
__LDBL_COMPAT


571 
__ölöe
 

572 
__NTH
 (
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

573 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

574 {  
	`__wc°ﬁd_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

576 
__exãnsi⁄__


577 
__ölöe
 

578 
__NTH
 (
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

579 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

580 {  
	`__wc°ﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

581 
__exãnsi⁄__


582 
__ölöe
 

583 
__NTH
 (
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

584 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

585 {  
	`__wc°ouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

590 #ifdef 
__USE_GNU


593 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

597 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

598 
__THROW
;

604 #ifdef 
__USE_GNU


607 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

610 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


611 
__BEGIN_NAMESPACE_C99


614 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

621 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

622 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

628 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

631 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

632 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

633 
__THROW
 ;

639 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

640 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

641 
__gnuc_va_li°
 
__¨g
)

647 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

648 
__gnuc_va_li°
 
__¨g
)

652 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

653 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

654 
__gnuc_va_li°
 
__¨g
)

655 
__THROW
 ;

662 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

663 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

669 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

672 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

673 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

674 
__THROW
 ;

676 
__END_NAMESPACE_C99


679 #ifde‡
__USE_ISOC99


680 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 
__END_NAMESPACE_C99


707 
__BEGIN_NAMESPACE_C99


712 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

713 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

719 
wöt_t
 
	`gëwch¨
 ();

726 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

727 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

733 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

741 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

742 
__FILE
 *
__ª°ri˘
 
__°ªam
);

748 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

749 
__FILE
 *
__ª°ri˘
 
__°ªam
);

756 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

757 
__END_NAMESPACE_C99


760 #ifde‡
__USE_GNU


768 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

777 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

785 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

794 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

795 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

804 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

805 
__FILE
 *
__ª°ri˘
 
__°ªam
);

813 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

814 
__FILE
 *
__ª°ri˘
 
__°ªam
);

818 
__BEGIN_NAMESPACE_C99


822 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

823 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

824 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

825 
__END_NAMESPACE_C99


827 #ifde‡
__USE_GNU


828 
	~<xloˇÀ.h
>

832 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

833 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

834 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

835 
__loˇÀ_t
 
__loc
Ë
__THROW
;

844 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


845 
	#__√ed_iswxxx


	)

846 
	~<w˘y≥.h
>

850 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


851 
	~<bôs/wch¨2.h
>

854 #ifde‡
__LDBL_COMPAT


855 
	~<bôs/wch¨-ldbl.h
>

858 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 
	#__√ed_wch¨_t


	)

12 
	#__√ed_wöt_t


	)

13 
	#__√ed_NULL


	)

14 
	~<°ddef.h
>

15 #i‚de‡
_WINT_T


20 
	#_WINT_T


	)

21 
	twöt_t
;

23 
	#__√ed_mb°©e_t


	)

24 
	~<wch¨.h
>

25 
	#_G_size_t
 
size_t


	)

28 
__off_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos_t
;

33 
__off64_t
 
	m__pos
;

34 
__mb°©e_t
 
	m__°©e
;

35 } 
	t_G_Âos64_t
;

36 
	#_G_ssize_t
 
__ssize_t


	)

37 
	#_G_off_t
 
__off_t


	)

38 
	#_G_off64_t
 
__off64_t


	)

39 
	#_G_pid_t
 
__pid_t


	)

40 
	#_G_uid_t
 
__uid_t


	)

41 
	#_G_wch¨_t
 
wch¨_t


	)

42 
	#_G_wöt_t
 
wöt_t


	)

43 
	#_G_°©64
 
°©64


	)

44 
	~<gc⁄v.h
>

47 
__gc⁄v_öfo
 
	m__cd
;

50 
__gc⁄v_öfo
 
	m__cd
;

51 
__gc⁄v_°ï_d©a
 
	m__d©a
;

52 } 
	m__comböed
;

53 } 
	t_G_ic⁄v_t
;

55 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

57 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

58 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

60 
	#_G_HAVE_BOOL
 1

	)

64 
	#_G_HAVE_ATEXIT
 1

	)

65 
	#_G_HAVE_SYS_CDEFS
 1

	)

66 
	#_G_HAVE_SYS_WAIT
 1

	)

67 
	#_G_NEED_STDARG_H
 1

	)

68 
	#_G_va_li°
 
__gnuc_va_li°


	)

70 
	#_G_HAVE_PRINTF_FP
 1

	)

71 
	#_G_HAVE_MMAP
 1

	)

72 
	#_G_HAVE_MREMAP
 1

	)

73 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

74 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

75 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

77 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

79 
	#_G_OPEN64
 
__›í64


	)

80 
	#_G_LSEEK64
 
__l£ek64


	)

81 
	#_G_MMAP64
 
__mm≠64


	)

82 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

85 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

87 
	#_G_BUFSIZ
 8192

	)

90 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

91 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

92 
	#_G_USING_THUNKS
 1

	)

93 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

94 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

97 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


98 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

100 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/socket.h

2 #i‚de‡
__ASM_STUB_SOCKET_H


3 
	#__ASM_STUB_SOCKET_H


	)

4 #i‡
deföed
 
__x86_64__


5 
	~<asm-x86_64/sockë.h
>

6 #ñi‡
deföed
 
__i386__


7 
	~<asm-i386/sockë.h
>

9 #w¨nög 
This
 
machöe
 
≠≥¨s
 
to
 
be
 
√ôhî
 
x86_64
 
n‹
 
i386
.

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/sched.h

21 #i‚de‡
__√ed_sched∑øm


23 #i‚de‡
_SCHED_H


29 
	#SCHED_OTHER
 0

	)

30 
	#SCHED_FIFO
 1

	)

31 
	#SCHED_RR
 2

	)

32 #ifde‡
__USE_GNU


33 
	#SCHED_BATCH
 3

	)

36 #ifde‡
__USE_MISC


38 
	#CSIGNAL
 0x000000f‡

	)

39 
	#CLONE_VM
 0x00000100

	)

40 
	#CLONE_FS
 0x00000200

	)

41 
	#CLONE_FILES
 0x00000400

	)

42 
	#CLONE_SIGHAND
 0x00000800

	)

43 
	#CLONE_PTRACE
 0x00002000

	)

44 
	#CLONE_VFORK
 0x00004000

	)

46 
	#CLONE_PARENT
 0x00008000

	)

48 
	#CLONE_THREAD
 0x00010000

	)

49 
	#CLONE_NEWNS
 0x00020000

	)

50 
	#CLONE_SYSVSEM
 0x00040000

	)

51 
	#CLONE_SETTLS
 0x00080000

	)

52 
	#CLONE_PARENT_SETTID
 0x00100000

	)

54 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

56 
	#CLONE_DETACHED
 0x00400000

	)

57 
	#CLONE_UNTRACED
 0x00800000

	)

59 
	#CLONE_CHILD_SETTID
 0x01000000

	)

61 
	#CLONE_STOPPED
 0x02000000

	)

65 
	ssched_∑øm


67 
	m__sched_¥i‹ôy
;

70 
	g__BEGIN_DECLS


72 #ifde‡
__USE_MISC


74 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

75 
__Êags
, *
__¨g
, ...Ë
__THROW
;

78 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

81 
__END_DECLS


85 #i‡!
deföed
 
__deföed_sched∑øm
 \

86 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

87 
	#__deföed_sched∑øm
 1

	)

89 
	s__sched_∑øm


91 
__sched_¥i‹ôy
;

93 #unde‡
__√ed_sched∑øm


97 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


98 
	#__˝u_£t_t_deföed


	)

100 
	#__CPU_SETSIZE
 1024

	)

101 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

104 
	t__˝u_mask
;

107 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

108 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

113 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

114 } 
	t˝u_£t_t
;

117 
	#__CPU_ZERO
(
˝u£ç
) \

119 
__i
; \

120 
˝u_£t_t
 *
__¨r
 = (
˝u£ç
); \

121 
__i
 = 0; __ò<  (
˝u_£t_t
Ë/  (
__˝u_mask
); ++__i) \

122 
__¨r
->
__bôs
[
__i
] = 0; \

123 
	}
} 0)

	)

124 
	#__CPU_SET
(
˝u
, 
˝u£ç
) \

125 ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] |
	`__CPUMASK
 (˝u))

	)

126 
	#__CPU_CLR
(
˝u
, 
˝u£ç
) \

127 ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] &~
	`__CPUMASK
 (˝u))

	)

128 
	#__CPU_ISSET
(
˝u
, 
˝u£ç
) \

129 (((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] & 
	`__CPUMASK
 (˝u)Ë!0)

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


26 
	#__FD_ZERO
(
s
) \

28 
__i
; \

29 
fd_£t
 *
__¨r
 = (
s
); \

30 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

31 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

32 } 0)

	)

33 
	#__FD_SET
(
d
, 
s
Ë(
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] |
	`__FDMASK
(d))

	)

34 
	#__FD_CLR
(
d
, 
s
Ë(
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] &~
	`__FDMASK
(d))

	)

35 
	#__FD_ISSET
(
d
, 
s
Ë((
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] & 
	`__FDMASK
(d)Ë!0)

	)

	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

25 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

28 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


29 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

30 #ñi‡
	t_IO_MTSAFE_IO


31 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


34 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

35 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

36 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

38 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

41 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

42 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

43 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

44 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

45 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

46 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

48 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


49 
	t_IO_acquúe_lock
(
	t_Â
) \

50 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

51 
	`_IO_Êockfûe
 (
_Â
)

	)

53 
	#_IO_ªÀa£_lock
(
_Â
) \

54 
	`_IO_fu∆ockfûe
 (
_Â
); \

55 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 
__LDBL_REDIR_DECL
 (
fwsˇnf
);

33 
__LDBL_REDIR_DECL
 (
wsˇnf
);

34 
__LDBL_REDIR_DECL
 (
swsˇnf
);

35 
	g__END_NAMESPACE_C99


38 #ifde‡
__USE_ISOC99


39 
__BEGIN_NAMESPACE_C99


40 
__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

41 
__LDBL_REDIR_DECL
 (
vfwsˇnf
);

42 
__LDBL_REDIR_DECL
 (
vwsˇnf
);

43 
__LDBL_REDIR_DECL
 (
vswsˇnf
);

44 
	g__END_NAMESPACE_C99


47 #ifde‡
__USE_GNU


48 
__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

51 
__LDBL_REDIR1_DECL
 (
__wc°ﬁd_öã∫Æ
, 
__wc°od_öã∫Æ
);

53 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


54 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

55 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

56 #i‡
__USE_FORTIFY_LEVEL
 > 1

57 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

58 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

59 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

60 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

24 
	#__WCHAR_MAX
 (2147483647)

	)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

33 
__Æways_ölöe
 
wch¨_t
 *

34 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

35 
size_t
 
__n
))

37 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

38  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
, 
	`__bos0
 (__s1Ë/  (
wch¨_t
));

39  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

40 
	}
}

43 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

44 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

45 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

46 
__c⁄°
 
wch¨_t
 *
__s2
,

47 
size_t
 
__n
), 
wmemmove
);

49 
__Æways_ölöe
 
wch¨_t
 *

50 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

51 
size_t
 
__n
))

53 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

54  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
, 
	`__bos0
 (__s1Ë/  (
wch¨_t
));

55  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

56 
	}
}

59 #ifde‡
__USE_GNU


60 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

61 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

62 
size_t
 
__ns1
Ë
__THROW
;

63 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

64 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

65 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

66 
size_t
 
__n
), 
wmemp˝y
);

68 
__Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

70 
size_t
 
__n
))

72 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
, 
	`__bos0
 (__s1Ë/  (
wch¨_t
));

74  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

75 
	}
}

79 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

80 
size_t
 
__ns
Ë
__THROW
;

81 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

82 
size_t
 
__n
), 
wmem£t
);

84 
__Æways_ölöe
 
wch¨_t
 *

85 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

87 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

88  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

89  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

90 
	}
}

93 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

94 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

95 
size_t
 
__n
Ë
__THROW
;

96 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

97 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

98 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

100 
__Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

103 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

104  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

105  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

106 
	}
}

109 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

110 
size_t
 
__de°Àn
Ë
__THROW
;

111 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

112 
__c⁄°
 
wch¨_t
 *
__§c
),

113 
w˝˝y
);

115 
__Æways_ölöe
 
wch¨_t
 *

116 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

118 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

119  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

120  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

121 
	}
}

124 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

125 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

128 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

129 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

130 
size_t
 
__n
), 
wc¢˝y
);

132 
__Æways_ölöe
 
wch¨_t
 *

133 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

135 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

136 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| 
	`__bos
 (
__de°
) >= __n))

137  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

138 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

139  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

140 
	}
}

143 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

144 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

145 
size_t
 
__de°Àn
Ë
__THROW
;

146 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

147 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
), 
w˝n˝y
);

151 
__Æways_ölöe
 
wch¨_t
 *

152 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

155 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| 
	`__bos
 (
__de°
) >= __n))

156  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

157 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

158  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

159 
	}
}

162 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

163 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

166 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

167 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

169 
__Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

180 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢ˇt
);

186 
__Æways_ölöe
 
wch¨_t
 *

187 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

189 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

190  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

191 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

192  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

193 
	}
}

196 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

197 
__Êag
, 
size_t
 
__s_Àn
,

198 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

199 
__THROW
 ;

202 
	#sw¥ötf
(
s
, 
n
, ...) \

203 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

204 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (s), 
__VA_ARGS__
) \

205 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

208 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

209 
__Êag
, 
size_t
 
__s_Àn
,

210 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

211 
__gnuc_va_li°
 
__¨g
)

212 
__THROW
 ;

214 
	#vsw¥ötf
(
s
, 
n
, 
fmt
, 
≠
) \

215 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

216 ? 
	`__vsw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (s), 
fmt
, 
≠
) \

217 : 
	`vsw¥ötf
 (
s
, 
n
, 
fmt
, 
≠
))

	)

220 #i‡
__USE_FORTIFY_LEVEL
 > 1

222 
	`__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

223 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

224 
	`__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

226 
	`__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

227 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

228 
__gnuc_va_li°
 
__≠
);

229 
	`__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

230 
__gnuc_va_li°
 
__≠
);

232 
	#w¥ötf
(...) \

233 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

234 
	#fw¥ötf
(
°ªam
, ...) \

235 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

236 
	#vw¥ötf
(
f‹m©
, 
≠
) \

237 
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

238 
	#vfw¥ötf
(
°ªam
, 
f‹m©
, 
≠
) \

239 
	`__vfw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

243 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

244 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

245 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

246 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

247 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

249 
__Æways_ölöe
 
__wur
 
wch¨_t
 *

250 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

252 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

253 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

254  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 #ifde‡
__USE_GNU


259 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

260 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

261 
__wur
;

262 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

263 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

264 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

265 
__wur
;

267 
__Æways_ölöe
 
__wur
 
wch¨_t
 *

268 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

270 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1

271 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| (
size_t
Ë__¿> 
	`__bos
 (
__s
)))

272  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

273  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

274 
	}
}

278 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

279 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

280 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

281 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

282 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

284 
__Æways_ölöe
 
__wur
 
size_t


285 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

290 
	#__WCHAR_MB_LEN_MAX
 16

	)

291 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


294 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

295  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

296  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

297 
	}
}

300 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

301 
__c⁄°
 **
__ª°ri˘
 
__§c
,

302 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

303 
size_t
 
__d°Àn
Ë
__THROW
;

304 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

305 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

306 
__c⁄°
 **
__ª°ri˘
 
__§c
,

307 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

308 
mb§towcs
);

310 
__Æways_ölöe
 
size_t


311 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

312 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

314 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

315 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
)

316 || 
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
)))

317  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

318 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

319  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

320 
	}
}

323 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

324 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

325 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

326 
size_t
 
__d°Àn
Ë
__THROW
;

327 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

328 (*
__ª°ri˘
 
__d°
,

329 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

330 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

331 
wc§tombs
);

333 
__Æways_ölöe
 
size_t


334 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

335 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

337 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

338 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__d°
)))

339  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

340  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

341 
	}
}

344 #ifde‡
__USE_GNU


345 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

346 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

347 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

348 
size_t
 
__d°Àn
Ë
__THROW
;

349 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

350 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

351 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

352 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

353 
mb¢πowcs
);

355 
__Æways_ölöe
 
size_t


356 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

357 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

359 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

360 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
)

361 || 
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
)))

362  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

363 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

364  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

365 
	}
}

368 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

369 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

370 
size_t
 
__nwc
, size_à
__Àn
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

372 
__THROW
;

373 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

374 (*
__ª°ri˘
 
__d°
,

375 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

376 
size_t
 
__nwc
, size_à
__Àn
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

379 
__Æways_ölöe
 
size_t


380 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

381 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

383 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1

384 && (!
	`__buûtö_c⁄°™t_p
 (
__Àn
Ë|| __À¿> 
	`__bos
 (
__d°
)))

385  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

386  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

387 
	}
}

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/ncurses/curses.h

37 #i‚de‡
__NCURSES_H


38 
	#__NCURSES_H


	)

40 
	#CURSES
 1

	)

41 
	#CURSES_H
 1

	)

50 
	#NCURSES_VERSION_MAJOR
 5

	)

51 
	#NCURSES_VERSION_MINOR
 5

	)

52 
	#NCURSES_VERSION_PATCH
 20060715

	)

55 #unde‡
NCURSES_VERSION


56 
	#NCURSES_VERSION
 "5.5"

	)

61 
	#NCURSES_MOUSE_VERSION
 1

	)

66 
	~<ncur£s/ncur£s_dŒ.h
>

71 #i‚de‡
NCURSES_ENABLE_STDBOOL_H


72 
	#NCURSES_ENABLE_STDBOOL_H
 1

	)

79 #i‡
deföed
(
NCURSES_NOMACROS
Ë&& !deföed(
NCURSES_ATTR_T
)

80 
	#NCURSES_ATTR_T
 
©å_t


	)

83 #i‚de‡
NCURSES_ATTR_T


84 
	#NCURSES_ATTR_T
 

	)

91 #unde‡
NCURSES_CONST


92 
	#NCURSES_CONST


	)

94 #i‚de‡
NCURSES_INLINE


95 
	#NCURSES_INLINE
 
ölöe


	)

101 #unde‡
NCURSES_COLOR_T


102 
	#NCURSES_COLOR_T
 

	)

107 #unde‡
NCURSES_SIZE_T


108 
	#NCURSES_SIZE_T
 

	)

115 #unde‡
NCURSES_CH_T


116 
	#NCURSES_CH_T
 
chty≥


	)

118 #i‡0 && 
deföed
(
_LP64
)

119 
	tchty≥
;

120 
	tmmask_t
;

122 
	tchty≥
;

123 
	tmmask_t
;

126 
	~<°dio.h
>

127 
	~<ncur£s/un˘æ.h
>

128 
	~<°d¨g.h
>

129 #ifde‡
_XOPEN_SOURCE_EXTENDED


130 
	~<°ddef.h
>

145 #unde‡
TRUE


146 
	#TRUE
 1

	)

148 #unde‡
FALSE


149 
	#FALSE
 0

	)

151 
	tNCURSES_BOOL
;

153 #i‡
deföed
(
__˝lu•lus
)

156 
	#NCURSES_BOOL
 
boﬁ


	)

160 #i‡
NCURSES_ENABLE_STDBOOL_H


161 
	~<°dboﬁ.h
>

163 
	#NCURSES_BOOL
 
boﬁ


	)

166 #unde‡
boﬁ


167 
	#boﬁ
 
NCURSES_BOOL


	)

172 #ifde‡
__˝lu•lus


174 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë
°©ic_ˇ°
<ty≥>(vÆue)

	)

176 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë—y≥)(vÆue)

	)

183 
	#WA_ATTRIBUTES
 
A_ATTRIBUTES


	)

184 
	#WA_NORMAL
 
A_NORMAL


	)

185 
	#WA_STANDOUT
 
A_STANDOUT


	)

186 
	#WA_UNDERLINE
 
A_UNDERLINE


	)

187 
	#WA_REVERSE
 
A_REVERSE


	)

188 
	#WA_BLINK
 
A_BLINK


	)

189 
	#WA_DIM
 
A_DIM


	)

190 
	#WA_BOLD
 
A_BOLD


	)

191 
	#WA_ALTCHARSET
 
A_ALTCHARSET


	)

192 
	#WA_INVIS
 
A_INVIS


	)

193 
	#WA_PROTECT
 
A_PROTECT


	)

194 
	#WA_HORIZONTAL
 
A_HORIZONTAL


	)

195 
	#WA_LEFT
 
A_LEFT


	)

196 
	#WA_LOW
 
A_LOW


	)

197 
	#WA_RIGHT
 
A_RIGHT


	)

198 
	#WA_TOP
 
A_TOP


	)

199 
	#WA_VERTICAL
 
A_VERTICAL


	)

202 
NCURSES_EXPORT_VAR
(Ë
COLORS
;

203 
NCURSES_EXPORT_VAR
(Ë
COLOR_PAIRS
;

205 
	#COLOR_BLACK
 0

	)

206 
	#COLOR_RED
 1

	)

207 
	#COLOR_GREEN
 2

	)

208 
	#COLOR_YELLOW
 3

	)

209 
	#COLOR_BLUE
 4

	)

210 
	#COLOR_MAGENTA
 5

	)

211 
	#COLOR_CYAN
 6

	)

212 
	#COLOR_WHITE
 7

	)

217 
NCURSES_EXPORT_VAR
(
chty≥
*Ë
_nc_acs_m≠
();

218 
	#acs_m≠
 (
	`_nc_acs_m≠
())

	)

220 
NCURSES_EXPORT_VAR
(
chty≥
Ë
acs_m≠
[];

223 
	#NCURSES_ACS
(
c
Ë(
acs_m≠
[
	`NCURSES_CAST
(,c)])

	)

226 
	#ACS_ULCORNER
 
	`NCURSES_ACS
('l'Ë

	)

227 
	#ACS_LLCORNER
 
	`NCURSES_ACS
('m'Ë

	)

228 
	#ACS_URCORNER
 
	`NCURSES_ACS
('k'Ë

	)

229 
	#ACS_LRCORNER
 
	`NCURSES_ACS
('j'Ë

	)

230 
	#ACS_LTEE
 
	`NCURSES_ACS
('t'Ë

	)

231 
	#ACS_RTEE
 
	`NCURSES_ACS
('u'Ë

	)

232 
	#ACS_BTEE
 
	`NCURSES_ACS
('v'Ë

	)

233 
	#ACS_TTEE
 
	`NCURSES_ACS
('w'Ë

	)

234 
	#ACS_HLINE
 
	`NCURSES_ACS
('q'Ë

	)

235 
	#ACS_VLINE
 
	`NCURSES_ACS
('x'Ë

	)

236 
	#ACS_PLUS
 
	`NCURSES_ACS
('n'Ë

	)

237 
	#ACS_S1
 
	`NCURSES_ACS
('o'Ë

	)

238 
	#ACS_S9
 
	`NCURSES_ACS
('s'Ë

	)

239 
	#ACS_DIAMOND
 
	`NCURSES_ACS
('`'Ë

	)

240 
	#ACS_CKBOARD
 
	`NCURSES_ACS
('a'Ë

	)

241 
	#ACS_DEGREE
 
	`NCURSES_ACS
('f'Ë

	)

242 
	#ACS_PLMINUS
 
	`NCURSES_ACS
('g'Ë

	)

243 
	#ACS_BULLET
 
	`NCURSES_ACS
('~'Ë

	)

245 
	#ACS_LARROW
 
	`NCURSES_ACS
(','Ë

	)

246 
	#ACS_RARROW
 
	`NCURSES_ACS
('+'Ë

	)

247 
	#ACS_DARROW
 
	`NCURSES_ACS
('.'Ë

	)

248 
	#ACS_UARROW
 
	`NCURSES_ACS
('-'Ë

	)

249 
	#ACS_BOARD
 
	`NCURSES_ACS
('h'Ë

	)

250 
	#ACS_LANTERN
 
	`NCURSES_ACS
('i'Ë

	)

251 
	#ACS_BLOCK
 
	`NCURSES_ACS
('0'Ë

	)

257 
	#ACS_S3
 
	`NCURSES_ACS
('p'Ë

	)

258 
	#ACS_S7
 
	`NCURSES_ACS
('r'Ë

	)

259 
	#ACS_LEQUAL
 
	`NCURSES_ACS
('y'Ë

	)

260 
	#ACS_GEQUAL
 
	`NCURSES_ACS
('z'Ë

	)

261 
	#ACS_PI
 
	`NCURSES_ACS
('{'Ë

	)

262 
	#ACS_NEQUAL
 
	`NCURSES_ACS
('|'Ë

	)

263 
	#ACS_STERLING
 
	`NCURSES_ACS
('}'Ë

	)

271 
	#ACS_BSSB
 
ACS_ULCORNER


	)

272 
	#ACS_SSBB
 
ACS_LLCORNER


	)

273 
	#ACS_BBSS
 
ACS_URCORNER


	)

274 
	#ACS_SBBS
 
ACS_LRCORNER


	)

275 
	#ACS_SBSS
 
ACS_RTEE


	)

276 
	#ACS_SSSB
 
ACS_LTEE


	)

277 
	#ACS_SSBS
 
ACS_BTEE


	)

278 
	#ACS_BSSS
 
ACS_TTEE


	)

279 
	#ACS_BSBS
 
ACS_HLINE


	)

280 
	#ACS_SBSB
 
ACS_VLINE


	)

281 
	#ACS_SSSS
 
ACS_PLUS


	)

283 #unde‡
ERR


284 
	#ERR
 (-1)

	)

286 #unde‡
OK


287 
	#OK
 (0)

	)

290 
	#_SUBWIN
 0x01

	)

291 
	#_ENDLINE
 0x02

	)

292 
	#_FULLWIN
 0x04

	)

293 
	#_SCROLLWIN
 0x08

	)

294 
	#_ISPAD
 0x10

	)

295 
	#_HASMOVED
 0x20

	)

296 
	#_WRAPPED
 0x40

	)

302 
	#_NOCHANGE
 -1

	)

308 
	#_NEWINDEX
 -1

	)

310 
s¸ìn
 
	tSCREEN
;

311 
_wö_°
 
	tWINDOW
;

313 
chty≥
 
	t©å_t
;

315 #ifde‡
_XOPEN_SOURCE_EXTENDED


318 #ifde‡
mbÀn


319 #unde‡
mbÀn


321 
	~<libutf8.h
>

325 
	~<wch¨.h
>

329 
	twch¨_t
;

333 
	twöt_t
;

336 
	#CCHARW_MAX
 5

	)

339 
©å_t
 
	g©å
;

340 
wch¨_t
 
	gch¨s
[
CCHARW_MAX
];

342 
	gext_cﬁ‹
;

345 
	tcch¨_t
;

349 
	gld©
;

351 
	s_wö_°


353 
NCURSES_SIZE_T
 
	g_cury
, 
	g_curx
;

356 
NCURSES_SIZE_T
 
	g_maxy
, 
	g_maxx
;

357 
NCURSES_SIZE_T
 
	g_begy
, 
	g_begx
;

359 
	g_Êags
;

362 
©å_t
 
	g_©ås
;

363 
chty≥
 
	g_bkgd
;

366 
boﬁ
 
	g_nŸimeout
;

367 
boﬁ
 
	g_˛ór
;

368 
boﬁ
 
	g_Àaveok
;

369 
boﬁ
 
	g_s¸ﬁl
;

370 
boﬁ
 
	g_idlok
;

371 
boﬁ
 
	g_idcok
;

372 
boﬁ
 
	g_immed
;

373 
boﬁ
 
	g_sync
;

374 
boﬁ
 
	g_u£_key∑d
;

375 
	g_dñay
;

377 
ld©
 *
	g_löe
;

380 
NCURSES_SIZE_T
 
	g_ªgt›
;

381 
NCURSES_SIZE_T
 
	g_ªgbŸtom
;

384 
	g_∑rx
;

385 
	g_∑ry
;

386 
WINDOW
 *
	g_∑ª¡
;

389 
	spd©


391 
NCURSES_SIZE_T
 
	g_∑d_y
, 
	g_∑d_x
;

392 
NCURSES_SIZE_T
 
	g_∑d_t›
, 
	g_∑d_À·
;

393 
NCURSES_SIZE_T
 
	g_∑d_bŸtom
, 
	g_∑d_right
;

394 } 
	g_∑d
;

396 
NCURSES_SIZE_T
 
	g_yoff£t
;

398 #ifde‡
_XOPEN_SOURCE_EXTENDED


399 
cch¨_t
 
	g_bkg∫d
;

401 
	g_cﬁ‹
;

406 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
°ds¸
;

407 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
curs¸
;

408 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
√ws¸
;

410 
NCURSES_EXPORT_VAR
(Ë
LINES
;

411 
NCURSES_EXPORT_VAR
(Ë
COLS
;

412 
NCURSES_EXPORT_VAR
(Ë
TABSIZE
;

417 
NCURSES_EXPORT_VAR
(Ë
ESCDELAY
;

419 
NCURSES_EXPORT_VAR
(Ë
âyty≥
[];

425 
NCURSES_EXPORT
(
boﬁ
Ë
is_ãrm_ªsized
 (, );

426 
NCURSES_EXPORT
(*Ë
keybound
 (, );

427 
NCURSES_EXPORT
(c⁄° *Ë
cur£s_vîsi⁄
 ();

428 
NCURSES_EXPORT
(Ë
assume_deÁu…_cﬁ‹s
 (, );

429 
NCURSES_EXPORT
(Ë
deföe_key
 (const *, );

430 
NCURSES_EXPORT
(Ë
key_deföed
 (const *);

431 
NCURSES_EXPORT
(Ë
keyok
 (, 
boﬁ
);

432 
NCURSES_EXPORT
(Ë
ªsize_ãrm
 (, );

433 
NCURSES_EXPORT
(Ë
ªsizëîm
 (, );

434 
NCURSES_EXPORT
(Ë
u£_deÁu…_cﬁ‹s
 ();

435 
NCURSES_EXPORT
(Ë
u£_exãnded_«mes
 (
boﬁ
);

436 
NCURSES_EXPORT
(Ë
u£_Àgacy_codög
 ();

437 
NCURSES_EXPORT
(Ë
wªsize
 (
WINDOW
 *, , );

438 
NCURSES_EXPORT
(Ë
nofûãr
();

440 
	#cur£s_vîsi⁄
(Ë
NCURSES_VERSION


	)

447 #ifde‡
NCURSES_WGETCH_EVENTS


448 #i‡!
deföed
(
__BEOS__
)

449 
	#NCURSES_EVENT_VERSION
 1

	)

455 
	#_NC_EVENT_TIMEOUT_MSEC
 1

	)

456 
	#_NC_EVENT_FILE
 2

	)

457 
	#_NC_EVENT_FILE_READABLE
 2

	)

459 
	#_NC_EVENT_FILE_WRITABLE
 4

	)

460 
	#_NC_EVENT_FILE_EXCEPTION
 8

	)

465 
	gty≥
;

468 
	gtimeout_m£c
;

471 
	gÊags
;

472 
	gfd
;

473 
	gªsu…
;

474 } 
	g„v
;

475 } 
	gd©a
;

476 } 
	t_nc_evít
;

480 
	gcou¡
;

481 
	gªsu…_Êags
;

482 
_nc_evít
 *
	gevíts
[1];

483 } 
	t_nc_evíéi°
;

485 
NCURSES_EXPORT
(Ë
wgëch_evíts
(
WINDOW
 *, 
_nc_evíéi°
 *);

486 
NCURSES_EXPORT
(Ë
wgën°r_evíts
(
WINDOW
 *,*,,
_nc_evíéi°
 *);

498 #i‡!(
deföed
(
__GNUC__
Ë|| deföed(
__GNUG__
Ë|| deföed(
__©åibuã__
))

499 
	#__©åibuã__
(
p
Ë

	)

506 #i‚de‡
GCC_PRINTFLIKE


507 #i‡
deföed
(
GCC_PRINTF
Ë&& !deföed(
¥ötf
)

508 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,fmt,v¨)))

	)

510 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë

	)

514 #i‚de‡
GCC_SCANFLIKE


515 #i‡
deföed
(
GCC_SCANF
Ë&& !deföed(
sˇnf
)

516 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
sˇnf
,fmt,v¨)))

	)

518 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë

	)

522 #i‚def 
GCC_NORETURN


523 
	#GCC_NORETURN


	)

526 #i‚def 
GCC_UNUSED


527 
	#GCC_UNUSED


	)

537 
NCURSES_EXPORT
(Ë
addch
 (c⁄° 
chty≥
);

538 
NCURSES_EXPORT
(Ë
addchn°r
 (c⁄° 
chty≥
 *, );

539 
NCURSES_EXPORT
(Ë
addch°r
 (c⁄° 
chty≥
 *);

540 
NCURSES_EXPORT
(Ë
addn°r
 (const *, );

541 
NCURSES_EXPORT
(Ë
add°r
 (const *);

542 
NCURSES_EXPORT
(Ë
©åoff
 (
NCURSES_ATTR_T
);

543 
NCURSES_EXPORT
(Ë
©å⁄
 (
NCURSES_ATTR_T
);

544 
NCURSES_EXPORT
(Ë
©å£t
 (
NCURSES_ATTR_T
);

545 
NCURSES_EXPORT
(Ë
©å_gë
 (
©å_t
 *, *, *);

546 
NCURSES_EXPORT
(Ë
©å_off
 (
©å_t
, *);

547 
NCURSES_EXPORT
(Ë
©å_⁄
 (
©å_t
, *);

548 
NCURSES_EXPORT
(Ë
©å_£t
 (
©å_t
, , *);

549 
NCURSES_EXPORT
(Ë
baudøã
 ();

550 
NCURSES_EXPORT
(Ë
bìp
 ();

551 
NCURSES_EXPORT
(Ë
bkgd
 (
chty≥
);

552 
NCURSES_EXPORT
(Ë
bkgd£t
 (
chty≥
);

553 
NCURSES_EXPORT
(Ë
b‹dî
 (
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

554 
NCURSES_EXPORT
(Ë
box
 (
WINDOW
 *, 
chty≥
, chtype);

555 
NCURSES_EXPORT
(
boﬁ
Ë
ˇn_ch™ge_cﬁ‹
 ();

556 
NCURSES_EXPORT
(Ë
cbªak
 ();

557 
NCURSES_EXPORT
(Ë
chg©
 (, 
©å_t
, , const *);

558 
NCURSES_EXPORT
(Ë
˛ór
 ();

559 
NCURSES_EXPORT
(Ë
˛órok
 (
WINDOW
 *,
boﬁ
);

560 
NCURSES_EXPORT
(Ë
˛πobŸ
 ();

561 
NCURSES_EXPORT
(Ë
˛π€ﬁ
 ();

562 
NCURSES_EXPORT
(Ë
cﬁ‹_c⁄ã¡
 (,*,*,*);

563 
NCURSES_EXPORT
(Ë
cﬁ‹_£t
 (,*);

564 
NCURSES_EXPORT
(Ë
COLOR_PAIR
 ();

565 
NCURSES_EXPORT
(Ë
c›ywö
 (c⁄° 
WINDOW
*,WINDOW*,,,,,,,);

566 
NCURSES_EXPORT
(Ë
curs_£t
 ();

567 
NCURSES_EXPORT
(Ë
def_¥og_mode
 ();

568 
NCURSES_EXPORT
(Ë
def_shñl_mode
 ();

569 
NCURSES_EXPORT
(Ë
dñay_ouçut
 ();

570 
NCURSES_EXPORT
(Ë
dñch
 ();

571 
NCURSES_EXPORT
(Ë
dñs¸ìn
 (
SCREEN
 *);

572 
NCURSES_EXPORT
(Ë
dñwö
 (
WINDOW
 *);

573 
NCURSES_EXPORT
(Ë
dñëñn
 ();

574 
NCURSES_EXPORT
(
WINDOW
 *Ë
dîwö
 (WINDOW *,,,,);

575 
NCURSES_EXPORT
(Ë
doupd©e
 ();

576 
NCURSES_EXPORT
(
WINDOW
 *Ë
dupwö
 (WINDOW *);

577 
NCURSES_EXPORT
(Ë
echo
 ();

578 
NCURSES_EXPORT
(Ë
echoch¨
 (c⁄° 
chty≥
);

579 
NCURSES_EXPORT
(Ë
îa£
 ();

580 
NCURSES_EXPORT
(Ë
ídwö
 ();

581 
NCURSES_EXPORT
(Ë
îa£ch¨
 ();

582 
NCURSES_EXPORT
(Ë
fûãr
 ();

583 
NCURSES_EXPORT
(Ë
Êash
 ();

584 
NCURSES_EXPORT
(Ë
Êushöp
 ();

585 
NCURSES_EXPORT
(
chty≥
Ë
gëbkgd
 (
WINDOW
 *);

586 
NCURSES_EXPORT
(Ë
gëch
 ();

587 
NCURSES_EXPORT
(Ë
gën°r
 (*, );

588 
NCURSES_EXPORT
(Ë
gë°r
 (*);

589 
NCURSES_EXPORT
(
WINDOW
 *Ë
gëwö
 (
FILE
 *);

590 
NCURSES_EXPORT
(Ë
hÆfdñay
 ();

591 
NCURSES_EXPORT
(
boﬁ
Ë
has_cﬁ‹s
 ();

592 
NCURSES_EXPORT
(
boﬁ
Ë
has_ic
 ();

593 
NCURSES_EXPORT
(
boﬁ
Ë
has_û
 ();

594 
NCURSES_EXPORT
(Ë
hlöe
 (
chty≥
, );

595 
NCURSES_EXPORT
(Ë
idcok
 (
WINDOW
 *, 
boﬁ
);

596 
NCURSES_EXPORT
(Ë
idlok
 (
WINDOW
 *, 
boﬁ
);

597 
NCURSES_EXPORT
(Ë
immedok
 (
WINDOW
 *, 
boﬁ
);

598 
NCURSES_EXPORT
(
chty≥
Ë
öch
 ();

599 
NCURSES_EXPORT
(Ë
öchn°r
 (
chty≥
 *, );

600 
NCURSES_EXPORT
(Ë
öch°r
 (
chty≥
 *);

601 
NCURSES_EXPORT
(
WINDOW
 *Ë
öôs¸
 ();

602 
NCURSES_EXPORT
(Ë
öô_cﬁ‹
 (,,,);

603 
NCURSES_EXPORT
(Ë
öô_∑ú
 (,,);

604 
NCURSES_EXPORT
(Ë
ön°r
 (*, );

605 
NCURSES_EXPORT
(Ë
ösch
 (
chty≥
);

606 
NCURSES_EXPORT
(Ë
ösdñ 
 ();

607 
NCURSES_EXPORT
(Ë
ö£π 
 ();

608 
NCURSES_EXPORT
(Ë
ö¢°r
 (const *, );

609 
NCURSES_EXPORT
(Ë
ös°r
 (const *);

610 
NCURSES_EXPORT
(Ë
ö°r
 (*);

611 
NCURSES_EXPORT
(Ë
öåÊush
 (
WINDOW
 *,
boﬁ
);

612 
NCURSES_EXPORT
(
boﬁ
Ë
i£ndwö
 ();

613 
NCURSES_EXPORT
(
boﬁ
Ë
is_löëouched
 (
WINDOW
 *,);

614 
NCURSES_EXPORT
(
boﬁ
Ë
is_wötouched
 (
WINDOW
 *);

615 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key«me
 ();

616 
NCURSES_EXPORT
(Ë
key∑d
 (
WINDOW
 *,
boﬁ
);

617 
NCURSES_EXPORT
(Ë
kûlch¨
 ();

618 
NCURSES_EXPORT
(Ë
Àaveok
 (
WINDOW
 *,
boﬁ
);

619 
NCURSES_EXPORT
(*Ë
l⁄g«me
 ();

620 
NCURSES_EXPORT
(Ë
mëa
 (
WINDOW
 *,
boﬁ
);

621 
NCURSES_EXPORT
(Ë
move
 (, );

622 
NCURSES_EXPORT
(Ë
mvaddch
 (, , c⁄° 
chty≥
);

623 
NCURSES_EXPORT
(Ë
mvaddchn°r
 (, , c⁄° 
chty≥
 *, );

624 
NCURSES_EXPORT
(Ë
mvaddch°r
 (, , c⁄° 
chty≥
 *);

625 
NCURSES_EXPORT
(Ë
mvaddn°r
 (, , const *, );

626 
NCURSES_EXPORT
(Ë
mvadd°r
 (, , const *);

627 
NCURSES_EXPORT
(Ë
mvchg©
 (, , , 
©å_t
, , const *);

628 
NCURSES_EXPORT
(Ë
mvcur
 (,,,);

629 
NCURSES_EXPORT
(Ë
mvdñch
 (, );

630 
NCURSES_EXPORT
(Ë
mvdîwö
 (
WINDOW
 *, , );

631 
NCURSES_EXPORT
(Ë
mvgëch
 (, );

632 
NCURSES_EXPORT
(Ë
mvgën°r
 (, , *, );

633 
NCURSES_EXPORT
(Ë
mvgë°r
 (, , *);

634 
NCURSES_EXPORT
(Ë
mvhlöe
 (, , 
chty≥
, );

635 
NCURSES_EXPORT
(
chty≥
Ë
mvöch
 (, );

636 
NCURSES_EXPORT
(Ë
mvöchn°r
 (, , 
chty≥
 *, );

637 
NCURSES_EXPORT
(Ë
mvöch°r
 (, , 
chty≥
 *);

638 
NCURSES_EXPORT
(Ë
mvön°r
 (, , *, );

639 
NCURSES_EXPORT
(Ë
mvösch
 (, , 
chty≥
);

640 
NCURSES_EXPORT
(Ë
mvö¢°r
 (, , const *, );

641 
NCURSES_EXPORT
(Ë
mvös°r
 (, , const *);

642 
NCURSES_EXPORT
(Ë
mvö°r
 (, , *);

643 
NCURSES_EXPORT
(Ë
mv¥ötw
 (,, const *,...)

644 
GCC_PRINTFLIKE
(3,4);

645 
NCURSES_EXPORT
(Ë
mvsˇnw
 (,, 
NCURSES_CONST
 *,...)

646 
GCC_SCANFLIKE
(3,4);

647 
NCURSES_EXPORT
(Ë
mvvlöe
 (, , 
chty≥
, );

648 
NCURSES_EXPORT
(Ë
mvwaddch
 (
WINDOW
 *, , , c⁄° 
chty≥
);

649 
NCURSES_EXPORT
(Ë
mvwaddchn°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *, );

650 
NCURSES_EXPORT
(Ë
mvwaddch°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *);

651 
NCURSES_EXPORT
(Ë
mvwaddn°r
 (
WINDOW
 *, , , const *, );

652 
NCURSES_EXPORT
(Ë
mvwadd°r
 (
WINDOW
 *, , , const *);

653 
NCURSES_EXPORT
(Ë
mvwchg©
 (
WINDOW
 *, , , , 
©å_t
, , const *);

654 
NCURSES_EXPORT
(Ë
mvwdñch
 (
WINDOW
 *, , );

655 
NCURSES_EXPORT
(Ë
mvwgëch
 (
WINDOW
 *, , );

656 
NCURSES_EXPORT
(Ë
mvwgën°r
 (
WINDOW
 *, , , *, );

657 
NCURSES_EXPORT
(Ë
mvwgë°r
 (
WINDOW
 *, , , *);

658 
NCURSES_EXPORT
(Ë
mvwhlöe
 (
WINDOW
 *, , , 
chty≥
, );

659 
NCURSES_EXPORT
(Ë
mvwö
 (
WINDOW
 *,,);

660 
NCURSES_EXPORT
(
chty≥
Ë
mvwöch
 (
WINDOW
 *, , );

661 
NCURSES_EXPORT
(Ë
mvwöchn°r
 (
WINDOW
 *, , , 
chty≥
 *, );

662 
NCURSES_EXPORT
(Ë
mvwöch°r
 (
WINDOW
 *, , , 
chty≥
 *);

663 
NCURSES_EXPORT
(Ë
mvwön°r
 (
WINDOW
 *, , , *, );

664 
NCURSES_EXPORT
(Ë
mvwösch
 (
WINDOW
 *, , , 
chty≥
);

665 
NCURSES_EXPORT
(Ë
mvwö¢°r
 (
WINDOW
 *, , , const *, );

666 
NCURSES_EXPORT
(Ë
mvwös°r
 (
WINDOW
 *, , , const *);

667 
NCURSES_EXPORT
(Ë
mvwö°r
 (
WINDOW
 *, , , *);

668 
NCURSES_EXPORT
(Ë
mvw¥ötw
 (
WINDOW
*,,, const *,...)

669 
GCC_PRINTFLIKE
(4,5);

670 
NCURSES_EXPORT
(Ë
mvwsˇnw
 (
WINDOW
 *,,, 
NCURSES_CONST
 *,...)

671 
GCC_SCANFLIKE
(4,5);

672 
NCURSES_EXPORT
(Ë
mvwvlöe
 (
WINDOW
 *,, , 
chty≥
, );

673 
NCURSES_EXPORT
(Ë
«pms
 ();

674 
NCURSES_EXPORT
(
WINDOW
 *Ë
√w∑d
 (,);

675 
NCURSES_EXPORT
(
SCREEN
 *Ë
√wãrm
 (
NCURSES_CONST
 *,
FILE
 *,FILE *);

676 
NCURSES_EXPORT
(
WINDOW
 *Ë
√wwö
 (,,,);

677 
NCURSES_EXPORT
(Ë
∆
 ();

678 
NCURSES_EXPORT
(Ë
nocbªak
 ();

679 
NCURSES_EXPORT
(Ë
nodñay
 (
WINDOW
 *,
boﬁ
);

680 
NCURSES_EXPORT
(Ë
n€cho
 ();

681 
NCURSES_EXPORT
(Ë
n⁄l
 ();

682 
NCURSES_EXPORT
(Ë
noqiÊush
 ();

683 
NCURSES_EXPORT
(Ë
n‹aw
 ();

684 
NCURSES_EXPORT
(Ë
nŸimeout
 (
WINDOW
 *,
boﬁ
);

685 
NCURSES_EXPORT
(Ë
ovîœy
 (c⁄° 
WINDOW
*,WINDOW *);

686 
NCURSES_EXPORT
(Ë
ovîwrôe
 (c⁄° 
WINDOW
*,WINDOW *);

687 
NCURSES_EXPORT
(Ë
∑ú_c⁄ã¡
 (,*,*);

688 
NCURSES_EXPORT
(Ë
PAIR_NUMBER
 ();

689 
NCURSES_EXPORT
(Ë
≥choch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

690 
NCURSES_EXPORT
(Ë
≤ouåe‰esh
 (
WINDOW
*,,,,,,);

691 
NCURSES_EXPORT
(Ë
¥e‰esh
 (
WINDOW
 *,,,,,,);

692 
NCURSES_EXPORT
(Ë
¥ötw
 (const *,...)

693 
GCC_PRINTFLIKE
(1,2);

694 
NCURSES_EXPORT
(Ë
puç
 (const *);

695 
NCURSES_EXPORT
(Ë
putwö
 (
WINDOW
 *, 
FILE
 *);

696 
NCURSES_EXPORT
(Ë
qiÊush
 ();

697 
NCURSES_EXPORT
(Ë
øw
 ();

698 
NCURSES_EXPORT
(Ë
ªdøwwö
 (
WINDOW
 *);

699 
NCURSES_EXPORT
(Ë
ª‰esh
 ();

700 
NCURSES_EXPORT
(Ë
ª£ây
 ();

701 
NCURSES_EXPORT
(Ë
ª£t_¥og_mode
 ();

702 
NCURSES_EXPORT
(Ë
ª£t_shñl_mode
 ();

703 
NCURSES_EXPORT
(Ë
rùofÊöe
 (, (*)(
WINDOW
 *, ));

704 
NCURSES_EXPORT
(Ë
ßvëty
 ();

705 
NCURSES_EXPORT
(Ë
sˇnw
 (
NCURSES_CONST
 *,...)

706 
GCC_SCANFLIKE
(1,2);

707 
NCURSES_EXPORT
(Ë
s¸_dump
 (const *);

708 
NCURSES_EXPORT
(Ë
s¸_öô
 (const *);

709 
NCURSES_EXPORT
(Ë
s¸l
 ();

710 
NCURSES_EXPORT
(Ë
s¸ﬁl
 (
WINDOW
 *);

711 
NCURSES_EXPORT
(Ë
s¸ﬁlok
 (
WINDOW
 *,
boﬁ
);

712 
NCURSES_EXPORT
(Ë
s¸_ª°‹e
 (const *);

713 
NCURSES_EXPORT
(Ë
s¸_£t
 (const *);

714 
NCURSES_EXPORT
(Ë
£ts¸ªg
 (,);

715 
NCURSES_EXPORT
(
SCREEN
 *Ë
£t_ãrm
 (SCREEN *);

716 
NCURSES_EXPORT
(Ë
¶k_©åoff
 (c⁄° 
chty≥
);

717 
NCURSES_EXPORT
(Ë
¶k_©å_off
 (c⁄° 
©å_t
, *);

718 
NCURSES_EXPORT
(Ë
¶k_©å⁄
 (c⁄° 
chty≥
);

719 
NCURSES_EXPORT
(Ë
¶k_©å_⁄
 (
©å_t
,*);

720 
NCURSES_EXPORT
(Ë
¶k_©å£t
 (c⁄° 
chty≥
);

721 
NCURSES_EXPORT
(
©å_t
Ë
¶k_©å
 ();

722 
NCURSES_EXPORT
(Ë
¶k_©å_£t
 (c⁄° 
©å_t
,,*);

723 
NCURSES_EXPORT
(Ë
¶k_˛ór
 ();

724 
NCURSES_EXPORT
(Ë
¶k_cﬁ‹
 ();

725 
NCURSES_EXPORT
(Ë
¶k_öô
 ();

726 
NCURSES_EXPORT
(*Ë
¶k_œbñ
 ();

727 
NCURSES_EXPORT
(Ë
¶k_nouåe‰esh
 ();

728 
NCURSES_EXPORT
(Ë
¶k_ª‰esh
 ();

729 
NCURSES_EXPORT
(Ë
¶k_ª°‹e
 ();

730 
NCURSES_EXPORT
(Ë
¶k_£t
 (,const *,);

731 
NCURSES_EXPORT
(Ë
¶k_touch
 ();

732 
NCURSES_EXPORT
(Ë
°™dout
 ();

733 
NCURSES_EXPORT
(Ë
°™díd
 ();

734 
NCURSES_EXPORT
(Ë
°¨t_cﬁ‹
 ();

735 
NCURSES_EXPORT
(
WINDOW
 *Ë
sub∑d
 (WINDOW *, , , , );

736 
NCURSES_EXPORT
(
WINDOW
 *Ë
subwö
 (WINDOW *,,,,);

737 
NCURSES_EXPORT
(Ë
syncok
 (
WINDOW
 *, 
boﬁ
);

738 
NCURSES_EXPORT
(
chty≥
Ë
ãrm©ås
 ();

739 
NCURSES_EXPORT
(*Ë
ãrm«me
 ();

740 
NCURSES_EXPORT
(Ë
tigëÊag
 (
NCURSES_CONST
 *);

741 
NCURSES_EXPORT
(Ë
tigënum
 (
NCURSES_CONST
 *);

742 
NCURSES_EXPORT
(*Ë
tigë°r
 (
NCURSES_CONST
 *);

743 
NCURSES_EXPORT
(Ë
timeout
 ();

744 
NCURSES_EXPORT
(Ë
touchlöe
 (
WINDOW
 *, , );

745 
NCURSES_EXPORT
(Ë
touchwö
 (
WINDOW
 *);

746 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ...);

747 
NCURSES_EXPORT
(Ë
ty≥ahód
 ();

748 
NCURSES_EXPORT
(Ë
ungëch
 ();

749 
NCURSES_EXPORT
(Ë
u¡ouchwö
 (
WINDOW
 *);

750 
NCURSES_EXPORT
(Ë
u£_ív
 (
boﬁ
);

751 
NCURSES_EXPORT
(Ë
vid©å
 (
chty≥
);

752 
NCURSES_EXPORT
(Ë
vidputs
 (
chty≥
, (*)());

753 
NCURSES_EXPORT
(Ë
vlöe
 (
chty≥
, );

754 
NCURSES_EXPORT
(Ë
vw¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

755 
NCURSES_EXPORT
(Ë
vw_¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

756 
NCURSES_EXPORT
(Ë
vwsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

757 
NCURSES_EXPORT
(Ë
vw_sˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

758 
NCURSES_EXPORT
(Ë
waddch
 (
WINDOW
 *, c⁄° 
chty≥
);

759 
NCURSES_EXPORT
(Ë
waddchn°r
 (
WINDOW
 *,c⁄° 
chty≥
 *,);

760 
NCURSES_EXPORT
(Ë
waddch°r
 (
WINDOW
 *,c⁄° 
chty≥
 *);

761 
NCURSES_EXPORT
(Ë
waddn°r
 (
WINDOW
 *,const *,);

762 
NCURSES_EXPORT
(Ë
wadd°r
 (
WINDOW
 *,const *);

763 
NCURSES_EXPORT
(Ë
w©å⁄
 (
WINDOW
 *, );

764 
NCURSES_EXPORT
(Ë
w©åoff
 (
WINDOW
 *, );

765 
NCURSES_EXPORT
(Ë
w©å£t
 (
WINDOW
 *, );

766 
NCURSES_EXPORT
(Ë
w©å_gë
 (
WINDOW
 *, 
©å_t
 *, *, *);

767 
NCURSES_EXPORT
(Ë
w©å_⁄
 (
WINDOW
 *, 
©å_t
, *);

768 
NCURSES_EXPORT
(Ë
w©å_off
 (
WINDOW
 *, 
©å_t
, *);

769 
NCURSES_EXPORT
(Ë
w©å_£t
 (
WINDOW
 *, 
©å_t
, , *);

770 
NCURSES_EXPORT
(Ë
wbkgd
 (
WINDOW
 *, 
chty≥
);

771 
NCURSES_EXPORT
(Ë
wbkgd£t
 (
WINDOW
 *,
chty≥
);

772 
NCURSES_EXPORT
(Ë
wb‹dî
 (
WINDOW
 *,
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

773 
NCURSES_EXPORT
(Ë
wchg©
 (
WINDOW
 *, , 
©å_t
, , const *);

774 
NCURSES_EXPORT
(Ë
w˛ór
 (
WINDOW
 *);

775 
NCURSES_EXPORT
(Ë
w˛πobŸ
 (
WINDOW
 *);

776 
NCURSES_EXPORT
(Ë
w˛π€ﬁ
 (
WINDOW
 *);

777 
NCURSES_EXPORT
(Ë
wcﬁ‹_£t
 (
WINDOW
*,,*);

778 
NCURSES_EXPORT
(Ë
wcursyncup
 (
WINDOW
 *);

779 
NCURSES_EXPORT
(Ë
wdñch
 (
WINDOW
 *);

780 
NCURSES_EXPORT
(Ë
wdñëñn
 (
WINDOW
 *);

781 
NCURSES_EXPORT
(Ë
wechoch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

782 
NCURSES_EXPORT
(Ë
wîa£
 (
WINDOW
 *);

783 
NCURSES_EXPORT
(Ë
wgëch
 (
WINDOW
 *);

784 
NCURSES_EXPORT
(Ë
wgën°r
 (
WINDOW
 *,*,);

785 
NCURSES_EXPORT
(Ë
wgë°r
 (
WINDOW
 *, *);

786 
NCURSES_EXPORT
(Ë
whlöe
 (
WINDOW
 *, 
chty≥
, );

787 
NCURSES_EXPORT
(
chty≥
Ë
wöch
 (
WINDOW
 *);

788 
NCURSES_EXPORT
(Ë
wöchn°r
 (
WINDOW
 *, 
chty≥
 *, );

789 
NCURSES_EXPORT
(Ë
wöch°r
 (
WINDOW
 *, 
chty≥
 *);

790 
NCURSES_EXPORT
(Ë
wön°r
 (
WINDOW
 *, *, );

791 
NCURSES_EXPORT
(Ë
wösch
 (
WINDOW
 *, 
chty≥
);

792 
NCURSES_EXPORT
(Ë
wösdñ 
 (
WINDOW
 *,);

793 
NCURSES_EXPORT
(Ë
wö£π 
 (
WINDOW
 *);

794 
NCURSES_EXPORT
(Ë
wö¢°r
 (
WINDOW
 *, const *,);

795 
NCURSES_EXPORT
(Ë
wös°r
 (
WINDOW
 *, const *);

796 
NCURSES_EXPORT
(Ë
wö°r
 (
WINDOW
 *, *);

797 
NCURSES_EXPORT
(Ë
wmove
 (
WINDOW
 *,,);

798 
NCURSES_EXPORT
(Ë
wnouåe‰esh
 (
WINDOW
 *);

799 
NCURSES_EXPORT
(Ë
w¥ötw
 (
WINDOW
 *, const *,...)

800 
GCC_PRINTFLIKE
(2,3);

801 
NCURSES_EXPORT
(Ë
wªdøw 
 (
WINDOW
 *,,);

802 
NCURSES_EXPORT
(Ë
wª‰esh
 (
WINDOW
 *);

803 
NCURSES_EXPORT
(Ë
wsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,...)

804 
GCC_SCANFLIKE
(2,3);

805 
NCURSES_EXPORT
(Ë
ws¸l
 (
WINDOW
 *,);

806 
NCURSES_EXPORT
(Ë
w£ts¸ªg
 (
WINDOW
 *,,);

807 
NCURSES_EXPORT
(Ë
w°™dout
 (
WINDOW
 *);

808 
NCURSES_EXPORT
(Ë
w°™díd
 (
WINDOW
 *);

809 
NCURSES_EXPORT
(Ë
wsyncdown
 (
WINDOW
 *);

810 
NCURSES_EXPORT
(Ë
wsyncup
 (
WINDOW
 *);

811 
NCURSES_EXPORT
(Ë
wtimeout
 (
WINDOW
 *,);

812 
NCURSES_EXPORT
(Ë
wtouch 
 (
WINDOW
 *,,,);

813 
NCURSES_EXPORT
(Ë
wvlöe
 (
WINDOW
 *,
chty≥
,);

818 
NCURSES_EXPORT
(Ë
gëcurx
 (c⁄° 
WINDOW
 *);

819 
NCURSES_EXPORT
(Ë
gëcury
 (c⁄° 
WINDOW
 *);

820 
NCURSES_EXPORT
(Ë
gëbegx
 (c⁄° 
WINDOW
 *);

821 
NCURSES_EXPORT
(Ë
gëbegy
 (c⁄° 
WINDOW
 *);

822 
NCURSES_EXPORT
(Ë
gëmaxx
 (c⁄° 
WINDOW
 *);

823 
NCURSES_EXPORT
(Ë
gëmaxy
 (c⁄° 
WINDOW
 *);

824 
NCURSES_EXPORT
(Ë
gë∑rx
 (c⁄° 
WINDOW
 *);

825 
NCURSES_EXPORT
(Ë
gë∑ry
 (c⁄° 
WINDOW
 *);

830 #i‚de‡
_XOPEN_SOURCE_EXTENDED


831 
	#vid_©å
(
a
,
∑ú
,
›ts
Ë
	`vid©å
◊)

	)

836 
	#NCURSES_ATTR_SHIFT
 8

	)

837 
	#NCURSES_BITS
(
mask
,
shi·
Ë((maskË<< ((shi·Ë+ 
NCURSES_ATTR_SHIFT
))

	)

839 
	#A_NORMAL
 (1UL - 1UL)

	)

840 
	#A_ATTRIBUTES
 
	`NCURSES_BITS
(~(1UL - 1UL),0)

	)

841 
	#A_CHARTEXT
 (
	`NCURSES_BITS
(1UL,0Ë- 1UL)

	)

842 
	#A_COLOR
 
	`NCURSES_BITS
(((1ULË<< 8Ë- 1UL,0)

	)

843 
	#A_STANDOUT
 
	`NCURSES_BITS
(1UL,8)

	)

844 
	#A_UNDERLINE
 
	`NCURSES_BITS
(1UL,9)

	)

845 
	#A_REVERSE
 
	`NCURSES_BITS
(1UL,10)

	)

846 
	#A_BLINK
 
	`NCURSES_BITS
(1UL,11)

	)

847 
	#A_DIM
 
	`NCURSES_BITS
(1UL,12)

	)

848 
	#A_BOLD
 
	`NCURSES_BITS
(1UL,13)

	)

849 
	#A_ALTCHARSET
 
	`NCURSES_BITS
(1UL,14)

	)

850 
	#A_INVIS
 
	`NCURSES_BITS
(1UL,15)

	)

851 
	#A_PROTECT
 
	`NCURSES_BITS
(1UL,16)

	)

852 
	#A_HORIZONTAL
 
	`NCURSES_BITS
(1UL,17)

	)

853 
	#A_LEFT
 
	`NCURSES_BITS
(1UL,18)

	)

854 
	#A_LOW
 
	`NCURSES_BITS
(1UL,19)

	)

855 
	#A_RIGHT
 
	`NCURSES_BITS
(1UL,20)

	)

856 
	#A_TOP
 
	`NCURSES_BITS
(1UL,21)

	)

857 
	#A_VERTICAL
 
	`NCURSES_BITS
(1UL,22)

	)

869 
	#gëyx
(
wö
,
y
,
x
Ë(y = 
	`gëcury
(wö), x = 
	`gëcurx
(wö))

	)

870 
	#gëbegyx
(
wö
,
y
,
x
Ë(y = 
	`gëbegy
(wö), x = 
	`gëbegx
(wö))

	)

871 
	#gëmaxyx
(
wö
,
y
,
x
Ë(y = 
	`gëmaxy
(wö), x = 
	`gëmaxx
(wö))

	)

872 
	#gë∑ryx
(
wö
,
y
,
x
Ë(y = 
	`gë∑ry
(wö), x = 
	`gë∑rx
(wö))

	)

874 
	#gësyx
(
y
,
x
Ëdÿ{ if(
√ws¸
->
_Àaveok
) (y)=(x)=-1; \

875 
	`gëyx
(
√ws¸
,(
y
),(
x
)); \

876 } 0)

	)

877 
	#£tsyx
(
y
,
x
Ëdÿ{ if((y)==-1 && (x)==-1Ë
√ws¸
->
_Àaveok
=
TRUE
; \

878 {
√ws¸
->
_Àaveok
=
FALSE
;
	`wmove
“ews¸,(
y
),(
x
));} \

879 } 0)

	)

881 #i‚de‡
NCURSES_NOMACROS


887 
	#wgë°r
(
w
, 
s
Ë
	`wgën°r
(w, s, -1)

	)

888 
	#gën°r
(
s
, 
n
Ë
	`wgën°r
(
°ds¸
, s,Ç)

	)

890 
	#£âîm
(
ãrm
Ë
	`£tu±îm
—îm, 1, (*)0)

	)

892 
	#fixãrm
(Ë
	`ª£t_¥og_mode
()

	)

893 
	#ª£âîm
(Ë
	`ª£t_shñl_mode
()

	)

894 
	#ßvëîm
(Ë
	`def_¥og_mode
()

	)

895 
	#¸mode
(Ë
	`cbªak
()

	)

896 
	#no¸mode
(Ë
	`nocbªak
()

	)

897 
	#gëtmode
()

	)

900 
	#gë©ås
(
wö
Ë((wö)?(wö)->
_©ås
:
A_NORMAL
)

	)

901 
	#gëcurx
(
wö
Ë((wö)?(wö)->
_curx
:
ERR
)

	)

902 
	#gëcury
(
wö
Ë((wö)?(wö)->
_cury
:
ERR
)

	)

903 
	#gëbegx
(
wö
Ë((wö)?(wö)->
_begx
:
ERR
)

	)

904 
	#gëbegy
(
wö
Ë((wö)?(wö)->
_begy
:
ERR
)

	)

905 
	#gëmaxx
(
wö
Ë((wö)?((wö)->
_maxx
 + 1):
ERR
)

	)

906 
	#gëmaxy
(
wö
Ë((wö)?((wö)->
_maxy
 + 1):
ERR
)

	)

907 
	#gë∑rx
(
wö
Ë((wö)?(wö)->
_∑rx
:
ERR
)

	)

908 
	#gë∑ry
(
wö
Ë((wö)?(wö)->
_∑ry
:
ERR
)

	)

910 
	#w°™dout
(
wö
Ë(
	`w©å£t
(wö,
A_STANDOUT
))

	)

911 
	#w°™díd
(
wö
Ë(
	`w©å£t
(wö,
A_NORMAL
))

	)

913 
	#w©å⁄
(
wö
,
©
Ë
	`w©å_⁄
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

914 
	#w©åoff
(
wö
,
©
Ë
	`w©å_off
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

916 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
) && 0

917 
	#w©å£t
(
wö
,
©
Ë((wö)->
_cﬁ‹
 = 
	`PAIR_NUMBER
(at), \

918 (
wö
)->
_©ås
 = (
©
))

	)

920 
	#w©å£t
(
wö
,
©
Ë((wö)->
_©ås
 = (©))

	)

923 
	#s¸ﬁl
(
wö
Ë
	`ws¸l
(wö,1)

	)

925 
	#touchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 1)

	)

926 
	#touchlöe
(
wö
, 
s
, 
c
Ë
	`wtouch 
((wö), s, c, 1)

	)

927 
	#u¡ouchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 0)

	)

929 
	#box
(
wö
, 
v
, 
h
Ë
	`wb‹dî
(wö, v, v, h, h, 0, 0, 0, 0)

	)

930 
	#b‹dî
(
ls
, 
rs
, 
ts
, 
bs
, 
é
, 
å
, 
bl
, 
br
Ë
	`wb‹dî
(
°ds¸
,Üs,Ñs,Ås, bs,Ål,År, bl, br)

	)

931 
	#hlöe
(
ch
, 
n
Ë
	`whlöe
(
°ds¸
, ch,Ç)

	)

932 
	#vlöe
(
ch
, 
n
Ë
	`wvlöe
(
°ds¸
, ch,Ç)

	)

934 
	#wö°r
(
w
, 
s
Ë
	`wön°r
(w, s, -1)

	)

935 
	#wöch°r
(
w
, 
s
Ë
	`wöchn°r
(w, s, -1)

	)

936 
	#wös°r
(
w
, 
s
Ë
	`wö¢°r
(w, s, -1)

	)

938 
	#ªdøwwö
(
wö
Ë
	`wªdøw 
(wö, 0, (wö)->
_maxy
+1)

	)

939 
	#wadd°r
(
wö
,
°r
Ë
	`waddn°r
(wö,°r,-1)

	)

940 
	#waddch°r
(
wö
,
°r
Ë
	`waddchn°r
(wö,°r,-1)

	)

945 
	#COLOR_PAIR
(
n
Ë
	`NCURSES_BITS
“, 0)

	)

946 
	#PAIR_NUMBER
(
a
Ë(
	`NCURSES_CAST
(,((◊Ë& 
A_COLOR
Ë>> 
NCURSES_ATTR_SHIFT
)))

	)

952 
	#addch
(
ch
Ë
	`waddch
(
°ds¸
,ch)

	)

953 
	#addchn°r
(
°r
,
n
Ë
	`waddchn°r
(
°ds¸
,°r,n)

	)

954 
	#addch°r
(
°r
Ë
	`waddch°r
(
°ds¸
,°r)

	)

955 
	#addn°r
(
°r
,
n
Ë
	`waddn°r
(
°ds¸
,°r,n)

	)

956 
	#add°r
(
°r
Ë
	`waddn°r
(
°ds¸
,°r,-1)

	)

957 
	#©åoff
(
©
Ë
	`w©åoff
(
°ds¸
,©)

	)

958 
	#©å⁄
(
©
Ë
	`w©å⁄
(
°ds¸
,©)

	)

959 
	#©å£t
(
©
Ë
	`w©å£t
(
°ds¸
,©)

	)

960 
	#©å_gë
(
≠
,
˝
,
o
Ë
	`w©å_gë
(
°ds¸
,≠,˝,o)

	)

961 
	#©å_off
(
a
,
o
Ë
	`w©å_off
(
°ds¸
,a,o)

	)

962 
	#©å_⁄
(
a
,
o
Ë
	`w©å_⁄
(
°ds¸
,a,o)

	)

963 
	#©å_£t
(
a
,
c
,
o
Ë
	`w©å_£t
(
°ds¸
,a,c,o)

	)

964 
	#bkgd
(
ch
Ë
	`wbkgd
(
°ds¸
,ch)

	)

965 
	#bkgd£t
(
ch
Ë
	`wbkgd£t
(
°ds¸
,ch)

	)

966 
	#chg©
(
n
,
a
,
c
,
o
Ë
	`wchg©
(
°ds¸
,n,a,c,o)

	)

967 
	#˛ór
(Ë
	`w˛ór
(
°ds¸
)

	)

968 
	#˛πobŸ
(Ë
	`w˛πobŸ
(
°ds¸
)

	)

969 
	#˛π€ﬁ
(Ë
	`w˛π€ﬁ
(
°ds¸
)

	)

970 
	#cﬁ‹_£t
(
c
,
o
Ë
	`wcﬁ‹_£t
(
°ds¸
,c,o)

	)

971 
	#dñch
(Ë
	`wdñch
(
°ds¸
)

	)

972 
	#dñëñn
(Ë
	`wösdñ 
(
°ds¸
,-1)

	)

973 
	#echoch¨
(
c
Ë
	`wechoch¨
(
°ds¸
,c)

	)

974 
	#îa£
(Ë
	`wîa£
(
°ds¸
)

	)

975 
	#gëch
(Ë
	`wgëch
(
°ds¸
)

	)

976 
	#gë°r
(
°r
Ë
	`wgë°r
(
°ds¸
,°r)

	)

977 
	#öch
(Ë
	`wöch
(
°ds¸
)

	)

978 
	#öchn°r
(
s
,
n
Ë
	`wöchn°r
(
°ds¸
,s,n)

	)

979 
	#öch°r
(
s
Ë
	`wöch°r
(
°ds¸
,s)

	)

980 
	#ön°r
(
s
,
n
Ë
	`wön°r
(
°ds¸
,s,n)

	)

981 
	#ösch
(
c
Ë
	`wösch
(
°ds¸
,c)

	)

982 
	#ösdñ 
(
n
Ë
	`wösdñ 
(
°ds¸
,n)

	)

983 
	#ö£π 
(Ë
	`wösdñ 
(
°ds¸
,1)

	)

984 
	#ö¢°r
(
s
,
n
Ë
	`wö¢°r
(
°ds¸
,s,n)

	)

985 
	#ös°r
(
s
Ë
	`wös°r
(
°ds¸
,s)

	)

986 
	#ö°r
(
s
Ë
	`wö°r
(
°ds¸
,s)

	)

987 
	#move
(
y
,
x
Ë
	`wmove
(
°ds¸
,y,x)

	)

988 
	#ª‰esh
(Ë
	`wª‰esh
(
°ds¸
)

	)

989 
	#s¸l
(
n
Ë
	`ws¸l
(
°ds¸
,n)

	)

990 
	#£ts¸ªg
(
t
,
b
Ë
	`w£ts¸ªg
(
°ds¸
,t,b)

	)

991 
	#°™díd
(Ë
	`w°™díd
(
°ds¸
)

	)

992 
	#°™dout
(Ë
	`w°™dout
(
°ds¸
)

	)

993 
	#timeout
(
dñay
Ë
	`wtimeout
(
°ds¸
,dñay)

	)

994 
	#wdñëñn
(
wö
Ë
	`wösdñ 
(wö,-1)

	)

995 
	#wö£π 
(
wö
Ë
	`wösdñ 
(wö,1)

	)

1001 
	#mvwaddch
(
wö
,
y
,
x
,
ch
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddch
(wö,ch))

	)

1002 
	#mvwaddchn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,n))

	)

1003 
	#mvwaddch°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,-1))

	)

1004 
	#mvwaddn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,n))

	)

1005 
	#mvwadd°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,-1))

	)

1006 
	#mvwdñch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wdñch
(wö))

	)

1007 
	#mvwchg©
(
wö
,
y
,
x
,
n
,
a
,
c
,
o
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wchg©
(wö,n,a,c,o))

	)

1008 
	#mvwgëch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgëch
(wö))

	)

1009 
	#mvwgën°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgën°r
(wö,°r,n))

	)

1010 
	#mvwgë°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë°r
(wö,°r))

	)

1011 
	#mvwhlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe
(wö,c,n))

	)

1012 
	#mvwöch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? 
	`NCURSES_CAST
(
chty≥
, ERRË: 
	`wöch
(wö))

	)

1013 
	#mvwöchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöchn°r
(wö,s,n))

	)

1014 
	#mvwöch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöch°r
(wö,s))

	)

1015 
	#mvwön°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wön°r
(wö,s,n))

	)

1016 
	#mvwösch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wösch
(wö,c))

	)

1017 
	#mvwö¢°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö¢°r
(wö,s,n))

	)

1018 
	#mvwös°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös°r
(wö,s))

	)

1019 
	#mvwö°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö°r
(wö,s))

	)

1020 
	#mvwvlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe
(wö,c,n))

	)

1022 
	#mvaddch
(
y
,
x
,
ch
Ë
	`mvwaddch
(
°ds¸
,y,x,ch)

	)

1023 
	#mvaddchn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddchn°r
(
°ds¸
,y,x,°r,n)

	)

1024 
	#mvaddch°r
(
y
,
x
,
°r
Ë
	`mvwaddch°r
(
°ds¸
,y,x,°r)

	)

1025 
	#mvaddn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddn°r
(
°ds¸
,y,x,°r,n)

	)

1026 
	#mvadd°r
(
y
,
x
,
°r
Ë
	`mvwadd°r
(
°ds¸
,y,x,°r)

	)

1027 
	#mvchg©
(
y
,
x
,
n
,
a
,
c
,
o
Ë
	`mvwchg©
(
°ds¸
,y,x,n,a,c,o)

	)

1028 
	#mvdñch
(
y
,
x
Ë
	`mvwdñch
(
°ds¸
,y,x)

	)

1029 
	#mvgëch
(
y
,
x
Ë
	`mvwgëch
(
°ds¸
,y,x)

	)

1030 
	#mvgën°r
(
y
,
x
,
°r
,
n
Ë
	`mvwgën°r
(
°ds¸
,y,x,°r,n)

	)

1031 
	#mvgë°r
(
y
,
x
,
°r
Ë
	`mvwgë°r
(
°ds¸
,y,x,°r)

	)

1032 
	#mvhlöe
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe
(
°ds¸
,y,x,c,n)

	)

1033 
	#mvöch
(
y
,
x
Ë
	`mvwöch
(
°ds¸
,y,x)

	)

1034 
	#mvöchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwöchn°r
(
°ds¸
,y,x,s,n)

	)

1035 
	#mvöch°r
(
y
,
x
,
s
Ë
	`mvwöch°r
(
°ds¸
,y,x,s)

	)

1036 
	#mvön°r
(
y
,
x
,
s
,
n
Ë
	`mvwön°r
(
°ds¸
,y,x,s,n)

	)

1037 
	#mvösch
(
y
,
x
,
c
Ë
	`mvwösch
(
°ds¸
,y,x,c)

	)

1038 
	#mvö¢°r
(
y
,
x
,
s
,
n
Ë
	`mvwö¢°r
(
°ds¸
,y,x,s,n)

	)

1039 
	#mvös°r
(
y
,
x
,
s
Ë
	`mvwös°r
(
°ds¸
,y,x,s)

	)

1040 
	#mvö°r
(
y
,
x
,
s
Ë
	`mvwö°r
(
°ds¸
,y,x,s)

	)

1041 
	#mvvlöe
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe
(
°ds¸
,y,x,c,n)

	)

1046 
	#gëbkgd
(
wö
Ë((wö)->
_bkgd
)

	)

1048 
	#¶k_©å_off
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©åoff
◊))

	)

1049 
	#¶k_©å_⁄
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©å⁄
◊))

	)

1051 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
) && 0

1052 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = (◊Ë& ~
A_COLOR
), \

1053 (
wö
)->
_cﬁ‹
 = (
p
), \

1054 
OK
)

	)

1055 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!0 && (*◊Ë(wö)->
_©ås
)), \

1056 ()((
p
Ë!0 && (*’Ë(
wö
)->
_cﬁ‹
)), \

1057 
OK
)

	)

1059 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = ((◊Ë& ~
A_COLOR
Ë| 
	`COLOR_PAIR
’)), 
OK
)

	)

1060 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!0 && (*◊Ë(wö)->
_©ås
)), \

1061 ()((
p
Ë!0 && (*’Ë
	`PAIR_NUMBER
((
wö
)->
_©ås
))), \

1062 
OK
)

	)

1071 
	#vw_¥ötw
 
vw¥ötw


	)

1072 
	#vw_sˇnw
 
vwsˇnw


	)

1078 
	#vssˇnf
(
a
,
b
,
c
Ë
	`_nc_vssˇnf
◊,b,c)

	)

1079 
NCURSES_EXPORT
(Ë
vssˇnf
(c⁄° *, c⁄° *, 
va_li°
);

1096 
	#KEY_CODE_YES
 0400

	)

1097 
	#KEY_MIN
 0401

	)

1098 
	#KEY_BREAK
 0401

	)

1099 
	#KEY_SRESET
 0530

	)

1100 
	#KEY_RESET
 0531

	)

1104 
	#KEY_DOWN
 0402

	)

1105 
	#KEY_UP
 0403

	)

1106 
	#KEY_LEFT
 0404

	)

1107 
	#KEY_RIGHT
 0405

	)

1108 
	#KEY_HOME
 0406

	)

1109 
	#KEY_BACKSPACE
 0407

	)

1110 
	#KEY_F0
 0410

	)

1111 
	#KEY_F
(
n
Ë(
KEY_F0
+“)Ë

	)

1112 
	#KEY_DL
 0510

	)

1113 
	#KEY_IL
 0511

	)

1114 
	#KEY_DC
 0512

	)

1115 
	#KEY_IC
 0513

	)

1116 
	#KEY_EIC
 0514

	)

1117 
	#KEY_CLEAR
 0515

	)

1118 
	#KEY_EOS
 0516

	)

1119 
	#KEY_EOL
 0517

	)

1120 
	#KEY_SF
 0520

	)

1121 
	#KEY_SR
 0521

	)

1122 
	#KEY_NPAGE
 0522

	)

1123 
	#KEY_PPAGE
 0523

	)

1124 
	#KEY_STAB
 0524

	)

1125 
	#KEY_CTAB
 0525

	)

1126 
	#KEY_CATAB
 0526

	)

1127 
	#KEY_ENTER
 0527

	)

1128 
	#KEY_PRINT
 0532

	)

1129 
	#KEY_LL
 0533

	)

1130 
	#KEY_A1
 0534

	)

1131 
	#KEY_A3
 0535

	)

1132 
	#KEY_B2
 0536

	)

1133 
	#KEY_C1
 0537

	)

1134 
	#KEY_C3
 0540

	)

1135 
	#KEY_BTAB
 0541

	)

1136 
	#KEY_BEG
 0542

	)

1137 
	#KEY_CANCEL
 0543

	)

1138 
	#KEY_CLOSE
 0544

	)

1139 
	#KEY_COMMAND
 0545

	)

1140 
	#KEY_COPY
 0546

	)

1141 
	#KEY_CREATE
 0547

	)

1142 
	#KEY_END
 0550

	)

1143 
	#KEY_EXIT
 0551

	)

1144 
	#KEY_FIND
 0552

	)

1145 
	#KEY_HELP
 0553

	)

1146 
	#KEY_MARK
 0554

	)

1147 
	#KEY_MESSAGE
 0555

	)

1148 
	#KEY_MOVE
 0556

	)

1149 
	#KEY_NEXT
 0557

	)

1150 
	#KEY_OPEN
 0560

	)

1151 
	#KEY_OPTIONS
 0561

	)

1152 
	#KEY_PREVIOUS
 0562

	)

1153 
	#KEY_REDO
 0563

	)

1154 
	#KEY_REFERENCE
 0564

	)

1155 
	#KEY_REFRESH
 0565

	)

1156 
	#KEY_REPLACE
 0566

	)

1157 
	#KEY_RESTART
 0567

	)

1158 
	#KEY_RESUME
 0570

	)

1159 
	#KEY_SAVE
 0571

	)

1160 
	#KEY_SBEG
 0572

	)

1161 
	#KEY_SCANCEL
 0573

	)

1162 
	#KEY_SCOMMAND
 0574

	)

1163 
	#KEY_SCOPY
 0575

	)

1164 
	#KEY_SCREATE
 0576

	)

1165 
	#KEY_SDC
 0577

	)

1166 
	#KEY_SDL
 0600

	)

1167 
	#KEY_SELECT
 0601

	)

1168 
	#KEY_SEND
 0602

	)

1169 
	#KEY_SEOL
 0603

	)

1170 
	#KEY_SEXIT
 0604

	)

1171 
	#KEY_SFIND
 0605

	)

1172 
	#KEY_SHELP
 0606

	)

1173 
	#KEY_SHOME
 0607

	)

1174 
	#KEY_SIC
 0610

	)

1175 
	#KEY_SLEFT
 0611

	)

1176 
	#KEY_SMESSAGE
 0612

	)

1177 
	#KEY_SMOVE
 0613

	)

1178 
	#KEY_SNEXT
 0614

	)

1179 
	#KEY_SOPTIONS
 0615

	)

1180 
	#KEY_SPREVIOUS
 0616

	)

1181 
	#KEY_SPRINT
 0617

	)

1182 
	#KEY_SREDO
 0620

	)

1183 
	#KEY_SREPLACE
 0621

	)

1184 
	#KEY_SRIGHT
 0622

	)

1185 
	#KEY_SRSUME
 0623

	)

1186 
	#KEY_SSAVE
 0624

	)

1187 
	#KEY_SSUSPEND
 0625

	)

1188 
	#KEY_SUNDO
 0626

	)

1189 
	#KEY_SUSPEND
 0627

	)

1190 
	#KEY_UNDO
 0630

	)

1191 
	#KEY_MOUSE
 0631

	)

1192 
	#KEY_RESIZE
 0632

	)

1193 
	#KEY_EVENT
 0633

	)

1195 
	#KEY_MAX
 0777

	)

1204 #i‡
NCURSES_MOUSE_VERSION
 > 1

1205 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 5))

	)

1207 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 6))

	)

1210 
	#NCURSES_BUTTON_RELEASED
 001L

	)

1211 
	#NCURSES_BUTTON_PRESSED
 002L

	)

1212 
	#NCURSES_BUTTON_CLICKED
 004L

	)

1213 
	#NCURSES_DOUBLE_CLICKED
 010L

	)

1214 
	#NCURSES_TRIPLE_CLICKED
 020L

	)

1215 
	#NCURSES_RESERVED_EVENT
 040L

	)

1218 
	#BUTTON1_RELEASED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_RELEASED
)

	)

1219 
	#BUTTON1_PRESSED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_PRESSED
)

	)

1220 
	#BUTTON1_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_CLICKED
)

	)

1221 
	#BUTTON1_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_DOUBLE_CLICKED
)

	)

1222 
	#BUTTON1_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_TRIPLE_CLICKED
)

	)

1224 
	#BUTTON2_RELEASED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_RELEASED
)

	)

1225 
	#BUTTON2_PRESSED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_PRESSED
)

	)

1226 
	#BUTTON2_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_CLICKED
)

	)

1227 
	#BUTTON2_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_DOUBLE_CLICKED
)

	)

1228 
	#BUTTON2_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_TRIPLE_CLICKED
)

	)

1230 
	#BUTTON3_RELEASED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_RELEASED
)

	)

1231 
	#BUTTON3_PRESSED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_PRESSED
)

	)

1232 
	#BUTTON3_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_CLICKED
)

	)

1233 
	#BUTTON3_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_DOUBLE_CLICKED
)

	)

1234 
	#BUTTON3_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_TRIPLE_CLICKED
)

	)

1236 
	#BUTTON4_RELEASED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_RELEASED
)

	)

1237 
	#BUTTON4_PRESSED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_PRESSED
)

	)

1238 
	#BUTTON4_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_CLICKED
)

	)

1239 
	#BUTTON4_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_DOUBLE_CLICKED
)

	)

1240 
	#BUTTON4_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_TRIPLE_CLICKED
)

	)

1246 #i‡
NCURSES_MOUSE_VERSION
 > 1

1248 
	#BUTTON5_RELEASED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_RELEASED
)

	)

1249 
	#BUTTON5_PRESSED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_PRESSED
)

	)

1250 
	#BUTTON5_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_CLICKED
)

	)

1251 
	#BUTTON5_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_DOUBLE_CLICKED
)

	)

1252 
	#BUTTON5_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_TRIPLE_CLICKED
)

	)

1254 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(6, 0001L)

	)

1255 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(6, 0002L)

	)

1256 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(6, 0004L)

	)

1257 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(6, 0010L)

	)

1261 
	#BUTTON1_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_RESERVED_EVENT
)

	)

1262 
	#BUTTON2_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_RESERVED_EVENT
)

	)

1263 
	#BUTTON3_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_RESERVED_EVENT
)

	)

1264 
	#BUTTON4_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_RESERVED_EVENT
)

	)

1266 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(5, 0001L)

	)

1267 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(5, 0002L)

	)

1268 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(5, 0004L)

	)

1269 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(5, 0010L)

	)

1273 
	#ALL_MOUSE_EVENTS
 (
REPORT_MOUSE_POSITION
 - 1)

	)

1276 
	#BUTTON_RELEASE
(
e
, 
x
Ë(”Ë& (001 << (6 * ((xË- 1))))

	)

1277 
	#BUTTON_PRESS
(
e
, 
x
Ë(”Ë& (002 << (6 * ((xË- 1))))

	)

1278 
	#BUTTON_CLICK
(
e
, 
x
Ë(”Ë& (004 << (6 * ((xË- 1))))

	)

1279 
	#BUTTON_DOUBLE_CLICK
(
e
, 
x
Ë(”Ë& (010 << (6 * ((xË- 1))))

	)

1280 
	#BUTTON_TRIPLE_CLICK
(
e
, 
x
Ë(”Ë& (020 << (6 * ((xË- 1))))

	)

1281 
	#BUTTON_RESERVED_EVENT
(
e
, 
x
Ë(”Ë& (040 << (6 * ((xË- 1))))

	)

1285 
	gid
;

1286 
	gx
, 
	gy
, 
	gz
;

1287 
mmask_t
 
	gb°©e
;

1289 
	tMEVENT
;

1291 
NCURSES_EXPORT
(Ë
gëmou£
 (
MEVENT
 *);

1292 
NCURSES_EXPORT
(Ë
ungëmou£
 (
MEVENT
 *);

1293 
NCURSES_EXPORT
(
mmask_t
Ë
mou£mask
 (mmask_t, mmask_t *);

1294 
NCURSES_EXPORT
(
boﬁ
Ë
wí˛o£
 (c⁄° 
WINDOW
 *, , );

1295 
NCURSES_EXPORT
(Ë
mou£öãrvÆ
 ();

1296 
NCURSES_EXPORT
(
boﬁ
Ë
wmou£_åafo
 (c⁄° 
WINDOW
*, *, *, bool);

1297 
NCURSES_EXPORT
(
boﬁ
Ë
mou£_åafo
 (*, *, bool);

1299 
	#mou£_åafo
(
y
,
x
,
to_s¸ìn
Ë
	`wmou£_åafo
(
°ds¸
,y,x,to_s¸ìn)

	)

1303 
NCURSES_EXPORT
(Ë
m˝röt
 (*, );

1304 
NCURSES_EXPORT
(Ë
has_key
 ();

1308 
NCURSES_EXPORT
(Ë
_åa˚f
 (c⁄° *, ...Ë
GCC_PRINTFLIKE
(1,2);

1309 
NCURSES_EXPORT
(Ë
_åa˚dump
 (c⁄° *, 
WINDOW
 *);

1310 
NCURSES_EXPORT
(*Ë
_åa˚©å
 (
©å_t
);

1311 
NCURSES_EXPORT
(*Ë
_åa˚©å2
 (, 
chty≥
);

1312 
NCURSES_EXPORT
(*Ë
_nc_åa˚bôs
 ();

1313 
NCURSES_EXPORT
(*Ë
_åa˚ch¨
 ();

1314 
NCURSES_EXPORT
(*Ë
_åa˚chty≥
 (
chty≥
);

1315 
NCURSES_EXPORT
(*Ë
_åa˚chty≥2
 (, 
chty≥
);

1316 #ifde‡
_XOPEN_SOURCE_EXTENDED


1317 
	#_åa˚ch_t
 
_åa˚cch¨_t


	)

1318 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t
 (c⁄° 
cch¨_t
 *);

1319 
	#_åa˚ch_t2
 
_åa˚cch¨_t2


	)

1320 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t2
 (, c⁄° 
cch¨_t
 *);

1322 
	#_åa˚ch_t
 
_åa˚chty≥


	)

1323 
	#_åa˚ch_t2
 
_åa˚chty≥2


	)

1325 
NCURSES_EXPORT
(*Ë
_åa˚mou£
 (c⁄° 
MEVENT
 *);

1326 
NCURSES_EXPORT
(Ë
åa˚
 (const );

1329 
	#TRACE_DISABLE
 0x0000

	)

1330 
	#TRACE_TIMES
 0x0001

	)

1331 
	#TRACE_TPUTS
 0x0002

	)

1332 
	#TRACE_UPDATE
 0x0004

	)

1333 
	#TRACE_MOVE
 0x0008

	)

1334 
	#TRACE_CHARPUT
 0x0010

	)

1335 
	#TRACE_ORDINARY
 0x001F

	)

1336 
	#TRACE_CALLS
 0x0020

	)

1337 
	#TRACE_VIRTPUT
 0x0040

	)

1338 
	#TRACE_IEVENT
 0x0080

	)

1339 
	#TRACE_BITS
 0x0100

	)

1340 
	#TRACE_ICALLS
 0x0200

	)

1341 
	#TRACE_CCALLS
 0x0400

	)

1342 
	#TRACE_DATABASE
 0x0800

	)

1343 
	#TRACE_ATTRS
 0x1000

	)

1345 
	#TRACE_SHIFT
 13

	)

1346 
	#TRACE_MAXIMUM
 ((1 << 
TRACE_SHIFT
Ë- 1Ë

	)

1348 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1349 
NCURSES_EXPORT_VAR
(Ë
_nc_›timize_íabÀ
;

1350 
NCURSES_EXPORT
(c⁄° *Ë
_nc_visbuf
 (const *);

1351 
	#OPTIMIZE_MVCUR
 0x01

	)

1352 
	#OPTIMIZE_HASHMAP
 0x02

	)

1353 
	#OPTIMIZE_SCROLL
 0x04

	)

1354 
	#OPTIMIZE_ALL
 0xf‡

	)

1357 #ifde‡
__˝lu•lus


1359 #i‚de‡
NCURSES_NOMACROS


1362 #unde‡
box


1363 #unde‡
˛ór


1364 #unde‡
îa£


1365 #unde‡
move


1366 #unde‡
ª‰esh


	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

134 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

138 #i‡
__GNUC_PREREQ
 (2,97)

140 
	#__Êex¨r
 []

	)

142 #ifde‡
__GNUC__


143 
	#__Êex¨r
 [0]

	)

145 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

146 
	#__Êex¨r
 []

	)

149 
	#__Êex¨r
 [1]

	)

165 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

167 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

168 #ifde‡
__˝lu•lus


169 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

170 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

172 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

173 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

175 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

176 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

189 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

190 
	#__©åibuã__
(
xyz
Ë

	)

196 #i‡
__GNUC_PREREQ
 (2,96)

197 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

199 
	#__©åibuã_mÆloc__


	)

205 #i‡
__GNUC_PREREQ
 (2,96)

206 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

208 
	#__©åibuã_puª__


	)

214 #i‡
__GNUC_PREREQ
 (3,1)

215 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

216 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

218 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

219 
	#__©åibuã_noölöe__


	)

223 #i‡
__GNUC_PREREQ
 (3,2)

224 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

226 
	#__©åibuã_dïªˇãd__


	)

235 #i‡
__GNUC_PREREQ
 (2,8)

236 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

238 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

245 #i‡
__GNUC_PREREQ
 (2,97)

246 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

247 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

249 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

254 #i‡
__GNUC_PREREQ
 (3,3)

255 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

257 
	#__n⁄nuŒ
(
∑øms
)

	)

262 #i‡
__GNUC_PREREQ
 (3,4)

263 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

264 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

265 #i‡
__USE_FORTIFY_LEVEL
 > 0

266 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

269 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

271 #i‚de‡
__wur


272 
	#__wur


	)

276 #i‡
__GNUC_PREREQ
 (3,2)

277 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

279 
	#__Æways_ölöe
 
__ölöe


	)

286 #i‡!
__GNUC_PREREQ
 (2,8)

287 
	#__exãnsi⁄__


	)

291 #i‡!
__GNUC_PREREQ
 (2,92)

292 
	#__ª°ri˘


	)

298 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


299 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

301 #ifde‡
__GNUC__


302 
	#__ª°ri˘_¨r


	)

304 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

305 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

308 
	#__ª°ri˘_¨r


	)

313 
	~<bôs/w‹dsize.h
>

315 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


316 
	#__LDBL_COMPAT
 1

	)

317 #ifde‡
__REDIRECT


318 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

319 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

320 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

321 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

322 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

323 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

324 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

325 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

326 
	#__LDBL_REDIR_DECL
(
«me
) \

327 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

330 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


331 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

332 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

333 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

334 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

335 
	#__LDBL_REDIR_DECL
(
«me
)

	)

	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

34 
	#__√ed_wöt_t


	)

35 
	~<°ddef.h
>

36 #i‚de‡
_WINT_T


41 
	#_WINT_T


	)

42 
	twöt_t
;

44 #ifde‡
__USE_ISOC99


45 
	$__USING_NAMESPACE_C99
(
wöt_t
)

51 #i‚de‡
WEOF


52 
	#WEOF
 (0xffffffffu)

	)

55 #unde‡
__√ed_iswxxx


60 #i‚de‡
__iswxxx_deföed


61 
	#__iswxxx_deföed
 1

	)

63 
__BEGIN_NAMESPACE_C99


66 
	tw˘y≥_t
;

67 
__END_NAMESPACE_C99


69 #i‚de‡
_ISwbô


74 
	~<ídün.h
>

75 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


76 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

78 
	#_ISwbô
(
bô
) \

79 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

80 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

81 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

82 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

87 
__ISwuµî
 = 0,

88 
__ISwlowî
 = 1,

89 
__ISwÆpha
 = 2,

90 
__ISwdigô
 = 3,

91 
__ISwxdigô
 = 4,

92 
__ISw•a˚
 = 5,

93 
__ISw¥öt
 = 6,

94 
__ISwgøph
 = 7,

95 
__ISwbœnk
 = 8,

96 
__ISw˙ål
 = 9,

97 
__ISwpun˘
 = 10,

98 
__ISwÆnum
 = 11,

100 
_ISwuµî
 = 
	`_ISwbô
 (
__ISwuµî
),

101 
_ISwlowî
 = 
	`_ISwbô
 (
__ISwlowî
),

102 
_ISwÆpha
 = 
	`_ISwbô
 (
__ISwÆpha
),

103 
_ISwdigô
 = 
	`_ISwbô
 (
__ISwdigô
),

104 
_ISwxdigô
 = 
	`_ISwbô
 (
__ISwxdigô
),

105 
_ISw•a˚
 = 
	`_ISwbô
 (
__ISw•a˚
),

106 
_ISw¥öt
 = 
	`_ISwbô
 (
__ISw¥öt
),

107 
_ISwgøph
 = 
	`_ISwbô
 (
__ISwgøph
),

108 
_ISwbœnk
 = 
	`_ISwbô
 (
__ISwbœnk
),

109 
_ISw˙ål
 = 
	`_ISwbô
 (
__ISw˙ål
),

110 
_ISwpun˘
 = 
	`_ISwbô
 (
__ISwpun˘
),

111 
_ISwÆnum
 = 
	`_ISwbô
 (
__ISwÆnum
)

116 
__BEGIN_DECLS


118 
__BEGIN_NAMESPACE_C99


125 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

131 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

138 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

150 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

155 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

160 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

165 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

170 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

175 #ifde‡
__USE_ISOC99


176 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

185 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

189 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

190 
__END_NAMESPACE_C99


197 
__BEGIN_NAMESPACE_C99


200 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

201 
__END_NAMESPACE_C99


202 #ifde‡
__USE_GNU


203 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

206 
__BEGIN_NAMESPACE_C99


208 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

211 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

212 
__END_NAMESPACE_C99


214 
__END_DECLS


221 #ifde‡
_WCTYPE_H


227 
__BEGIN_DECLS


229 
__BEGIN_NAMESPACE_C99


232 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

235 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

236 
__END_NAMESPACE_C99


238 #ifde‡
__USE_GNU


240 
	~<xloˇÀ.h
>

244 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

250 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

257 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

269 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

274 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

279 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

289 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

294 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

298 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

299 
__THROW
;

303 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

304 
__THROW
;

312 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

319 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

320 
__THROW
;

323 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

324 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

328 
__END_DECLS


	@/usr/include/asm-i386/socket.h

1 #i‚de‡
_ASM_SOCKET_H


2 
	#_ASM_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

26 
	#SO_PASSCRED
 16

	)

27 
	#SO_PEERCRED
 17

	)

28 
	#SO_RCVLOWAT
 18

	)

29 
	#SO_SNDLOWAT
 19

	)

30 
	#SO_RCVTIMEO
 20

	)

31 
	#SO_SNDTIMEO
 21

	)

34 
	#SO_SECURITY_AUTHENTICATION
 22

	)

35 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

36 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

38 
	#SO_BINDTODEVICE
 25

	)

41 
	#SO_ATTACH_FILTER
 26

	)

42 
	#SO_DETACH_FILTER
 27

	)

44 
	#SO_PEERNAME
 28

	)

45 
	#SO_TIMESTAMP
 29

	)

46 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

48 
	#SO_ACCEPTCONN
 30

	)

50 
	#SO_PEERSEC
 31

	)

51 
	#SO_PASSSEC
 34

	)

	@/usr/include/asm-x86_64/socket.h

1 #i‚de‡
_ASM_SOCKET_H


2 
	#_ASM_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

26 
	#SO_PASSCRED
 16

	)

27 
	#SO_PEERCRED
 17

	)

28 
	#SO_RCVLOWAT
 18

	)

29 
	#SO_SNDLOWAT
 19

	)

30 
	#SO_RCVTIMEO
 20

	)

31 
	#SO_SNDTIMEO
 21

	)

34 
	#SO_SECURITY_AUTHENTICATION
 22

	)

35 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

36 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

38 
	#SO_BINDTODEVICE
 25

	)

41 
	#SO_ATTACH_FILTER
 26

	)

42 
	#SO_DETACH_FILTER
 27

	)

44 
	#SO_PEERNAME
 28

	)

45 
	#SO_TIMESTAMP
 29

	)

46 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

48 
	#SO_ACCEPTCONN
 30

	)

50 
	#SO_PEERSEC
 31

	)

51 
	#SO_PASSSEC
 34

	)

	@/usr/include/asm/errno.h

2 #i‚de‡
__ASM_STUB_ERRNO_H


3 
	#__ASM_STUB_ERRNO_H


	)

4 #i‡
deföed
 
__x86_64__


5 
	~<asm-x86_64/î∫o.h
>

6 #ñi‡
deföed
 
__i386__


7 
	~<asm-i386/î∫o.h
>

9 #w¨nög 
This
 
machöe
 
≠≥¨s
 
to
 
be
 
√ôhî
 
x86_64
 
n‹
 
i386
.

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

27 #ifde‡
_IO_MTSAFE_IO


28 
±hªad_muãx_t
 
	t__libc_lock_t
;

29 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

30 #ifde‡
__USE_UNIX98


31 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

33 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

37 
__libc_lock_›aque__
 
	t__libc_lock_t
;

38 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

39 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

43 
±hªad_key_t
 
	t__libc_key_t
;

52 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_lock_t
 
NAME
;

	)

54 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

56 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

59 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

70 #i‡
__LT_SPINLOCK_INIT
 == 0

71 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

74 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

83 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

84 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

85 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

86 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

88 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

89 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

90 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

91 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

93 #i‡
deföed
 
__PIC__


94 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

95 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

96 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

99 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

101 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

105 
	#__libc_lock_öô
(
NAME
) \

106 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

107 
	#__libc_rwlock_öô
(
NAME
) \

108 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

111 
	#__libc_lock_öô_ªcursive
(
NAME
) \

113 i‡(
__±hªad_muãx_öô
 !
NULL
) \

115 
±hªad_muãx©å_t
 
__©å
; \

116 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

117 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

118 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

119 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

121 } 0);

	)

122 
	#__πld_lock_öô_ªcursive
(
NAME
) \

123 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

128 
	#__libc_lock_föi
(
NAME
) \

129 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

130 
	#__libc_rwlock_föi
(
NAME
) \

131 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

134 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

135 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

138 
	#__libc_lock_lock
(
NAME
) \

139 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

140 
	#__libc_rwlock_rdlock
(
NAME
) \

141 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

142 
	#__libc_rwlock_wæock
(
NAME
) \

143 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

146 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

149 
	#__libc_lock_åylock
(
NAME
) \

150 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

151 
	#__libc_rwlock_åyrdlock
(
NAME
) \

152 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

153 
	#__libc_rwlock_åywæock
(
NAME
) \

154 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

157 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

158 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

159 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

162 
	#__libc_lock_u∆ock
(
NAME
) \

163 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

164 
	#__libc_rwlock_u∆ock
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

168 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

170 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

171 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

174 #i‡
PTHREAD_ONCE_INIT
 == 0

177 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

178 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

180 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

181 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

185 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

187 i‡(
__±hªad_⁄˚
 !
NULL
) \

188 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

189 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

190 
	`INIT_FUNCTION
 (); \

191 (
ONCE_CONTROL
) = 2; \

193 } 0)

	)

197 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

198 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

199 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

200 i‡(
_avaû
) { \

201 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

202 }

	)

205 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

206 i‡(
_avaû
) { \

207 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

209 }

	)

212 
	#__libc_˛ónup_íd
(
DOIT
) \

213 i‡(
_avaû
) { \

214 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

215 }

	)

217 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

218 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

219 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

221 
	#__libc_˛ónup_p›
(
execuã
) \

222 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

223 }

	)

226 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

227 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

230 
	#__libc_gë•ecific
(
KEY
) \

231 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

234 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

235 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

239 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

240 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

242 
__BEGIN_DECLS


244 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

245 (*
__routöe
) (*),

246 *
__¨g
Ë
__THROW
;

248 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

249 
__execuã
Ë
__THROW
;

255 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

256 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

258 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

260 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

262 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

264 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

266 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

268 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

270 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

271 
__köd
);

273 #ifde‡
__USE_UNIX98


274 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

275 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

277 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

279 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

281 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

283 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

285 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

287 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

290 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

291 (*
__de°r_fun˘i⁄
) (*));

293 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

294 
__c⁄°
 *
__poöãr
);

296 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

298 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

299 (*
__öô_routöe
) ());

301 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

302 (*
__∑ª¡
) (),

303 (*
__chûd
) ());

305 
__END_DECLS


309 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


310 #¥agm®
wók
 
__±hªad_muãx_öô


311 #¥agm®
wók
 
__±hªad_muãx_de°roy


312 #¥agm®
wók
 
__±hªad_muãx_lock


313 #¥agm®
wók
 
__±hªad_muãx_åylock


314 #¥agm®
wók
 
__±hªad_muãx_u∆ock


315 #¥agm®
wók
 
__±hªad_muãx©å_öô


316 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


317 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


318 #¥agm®
wók
 
__±hªad_rwlock_de°roy


319 #¥agm®
wók
 
__±hªad_rwlock_rdlock


320 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


321 #¥agm®
wók
 
__±hªad_rwlock_wæock


322 #¥agm®
wók
 
__±hªad_rwlock_åywæock


323 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


324 #¥agm®
wók
 
__±hªad_key_¸óã


325 #¥agm®
wók
 
__±hªad_£t•ecific


326 #¥agm®
wók
 
__±hªad_gë•ecific


327 #¥agm®
wók
 
__±hªad_⁄˚


328 #¥agm®
wók
 
__±hªad_öôülize


329 #¥agm®
wók
 
__±hªad_©f‹k


330 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


331 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


332 #¥agm®
wók
 
_±hªad_˛ónup_push


333 #¥agm®
wók
 
_±hªad_˛ónup_p›


338 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

95 
	#_POSIX_PATH_MAX
 256

	)

98 
	#_POSIX_PIPE_BUF
 512

	)

102 
	#_POSIX_RE_DUP_MAX
 255

	)

105 
	#_POSIX_RTSIG_MAX
 8

	)

108 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

111 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

114 
	#_POSIX_SIGQUEUE_MAX
 32

	)

117 
	#_POSIX_SSIZE_MAX
 32767

	)

120 
	#_POSIX_STREAM_MAX
 8

	)

123 
	#_POSIX_SYMLINK_MAX
 255

	)

127 
	#_POSIX_SYMLOOP_MAX
 8

	)

130 
	#_POSIX_TIMER_MAX
 32

	)

133 
	#_POSIX_TTY_NAME_MAX
 9

	)

136 
	#_POSIX_TZNAME_MAX
 6

	)

139 
	#_POSIX_QLIMIT
 1

	)

143 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

146 
	#_POSIX_UIO_MAXIOV
 16

	)

149 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

153 
	~<bôs/loˇl_lim.h
>

156 #i‚def 
SSIZE_MAX


157 
	#SSIZE_MAX
 
LONG_MAX


	)

164 #i‚def 
NGROUPS_MAX


165 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

63 
	g__gc⁄v_°ï
;

64 
	g__gc⁄v_°ï_d©a
;

65 
	g__gc⁄v_lﬂded_obje˘
;

66 
	g__gc⁄v_å™s_d©a
;

70 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

71 
	t__c⁄°
 **, __const *,

72 **, 
	tsize_t
 *, , );

75 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

78 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

79 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

83 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

84 
	t__gc⁄v_°ï_d©a
 *, *,

85 
	t__c⁄°
 *,

86 
	t__c⁄°
 **,

87 
	t__c⁄°
 *, **,

88 
	tsize_t
 *);

91 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

92 
	t__c⁄°
 *,

96 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

97 
	tsize_t
 *);

100 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

101 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

103 
	s__gc⁄v_å™s_d©a


106 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

107 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

108 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

109 *
__d©a
;

110 
__gc⁄v_å™s_d©a
 *
__√xt
;

115 
	s__gc⁄v_°ï


117 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

118 
__c⁄°
 *
__mod«me
;

120 
__cou¡î
;

122 *
__‰om_«me
;

123 *
__to_«me
;

125 
__gc⁄v_f˘
 
__f˘
;

126 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

127 
__gc⁄v_öô_f˘
 
__öô_f˘
;

128 
__gc⁄v_íd_f˘
 
__íd_f˘
;

132 
__mö_√eded_‰om
;

133 
__max_√eded_‰om
;

134 
__mö_√eded_to
;

135 
__max_√eded_to
;

138 
__°©eful
;

140 *
__d©a
;

145 
	s__gc⁄v_°ï_d©a


147 *
__outbuf
;

148 *
__outbu„nd
;

152 
__Êags
;

156 
__övoˇti⁄_cou¡î
;

160 
__öã∫Æ_u£
;

162 
__mb°©e_t
 *
__°©ï
;

163 
__mb°©e_t
 
__°©e
;

167 
__gc⁄v_å™s_d©a
 *
__å™s
;

172 
	s__gc⁄v_öfo


174 
size_t
 
__n°ïs
;

175 
__gc⁄v_°ï
 *
__°ïs
;

176 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

177 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_lutimes


	)

20 
	#__°ub_ªvoke


	)

21 
	#__°ub_£éogö


	)

22 
	#__°ub_sigªtu∫


	)

23 
	#__°ub_s°k


	)

24 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_ªm_pio2l


	)

12 
	#__°ub___kî√l_söl


	)

13 
	#__°ub___kî√l_è∆


	)

14 
	#__°ub_bdÊush


	)

15 
	#__°ub_chÊags


	)

16 
	#__°ub_Áâach


	)

17 
	#__°ub_fchÊags


	)

18 
	#__°ub_fdëach


	)

19 
	#__°ub_„upd©ìnv


	)

20 
	#__°ub_gëmsg


	)

21 
	#__°ub_gây


	)

22 
	#__°ub_lchmod


	)

23 
	#__°ub_lutimes


	)

24 
	#__°ub_putmsg


	)

25 
	#__°ub_ªvoke


	)

26 
	#__°ub_£éogö


	)

27 
	#__°ub_sigªtu∫


	)

28 
	#__°ub_s°k


	)

29 
	#__°ub_°ty


	)

	@/usr/include/asm-i386/errno.h

1 #i‚de‡
_I386_ERRNO_H


2 
	#_I386_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm-x86_64/errno.h

1 #i‚de‡
_X8664_ERRNO_H


2 
	#_X8664_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/sockios.h

2 #i‚de‡
__ASM_STUB_SOCKIOS_H


3 
	#__ASM_STUB_SOCKIOS_H


	)

4 #i‡
deföed
 
__x86_64__


5 
	~<asm-x86_64/sockios.h
>

6 #ñi‡
deföed
 
__i386__


7 
	~<asm-i386/sockios.h
>

9 #w¨nög 
This
 
machöe
 
≠≥¨s
 
to
 
be
 
√ôhî
 
x86_64
 
n‹
 
i386
.

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

36 
	~<löux/limôs.h
>

39 #ifde‡
__undef_NR_OPEN


40 #unde‡
NR_OPEN


41 #unde‡
__undef_NR_OPEN


44 #ifde‡
__undef_LINK_MAX


45 #unde‡
LINK_MAX


46 #unde‡
__undef_LINK_MAX


49 #ifde‡
__undef_OPEN_MAX


50 #unde‡
OPEN_MAX


51 #unde‡
__undef_OPEN_MAX


55 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

57 
	#PTHREAD_KEYS_MAX
 1024

	)

60 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

62 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

65 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

67 #unde‡
PTHREAD_THREADS_MAX


71 
	#AIO_PRIO_DELTA_MAX
 20

	)

74 
	#PTHREAD_STACK_MIN
 16384

	)

77 
	#DELAYTIMER_MAX
 2147483647

	)

80 
	#TTY_NAME_MAX
 32

	)

83 
	#LOGIN_NAME_MAX
 256

	)

86 
	#HOST_NAME_MAX
 64

	)

89 
	#MQ_PRIO_MAX
 32768

	)

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

	@/usr/include/asm-i386/sockios.h

1 #i‚de‡
__ARCH_I386_SOCKIOS__


2 
	#__ARCH_I386_SOCKIOS__


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

	@/usr/include/asm-x86_64/sockios.h

1 #i‚de‡
__ARCH_X8664_SOCKIOS__


2 
	#__ARCH_X8664_SOCKIOS__


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#CHILD_MAX
 999

	)

9 
	#OPEN_MAX
 256

	)

10 
	#LINK_MAX
 127

	)

11 
	#MAX_CANON
 255

	)

12 
	#MAX_INPUT
 255

	)

13 
	#NAME_MAX
 255

	)

14 
	#PATH_MAX
 4096

	)

15 
	#PIPE_BUF
 4096

	)

16 
	#XATTR_NAME_MAX
 255

	)

17 
	#XATTR_SIZE_MAX
 65536

	)

18 
	#XATTR_LIST_MAX
 65536

	)

20 
	#RTSIG_MAX
 32

	)

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@
1
.
1
/usr/include
112
2966
include/client_server.h
src/client.c
src/client_server.c
src/server.c
src/test_name.c
/usr/include/arpa/inet.h
/usr/include/errno.h
/usr/include/getopt.h
/usr/include/ncurses.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/pthread.h
/usr/include/regex.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/poll.h
/usr/include/sys/socket.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/in.h
/usr/include/bits/netdb.h
/usr/include/bits/poll.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/setjmp.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wordsize.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/libio.h
/usr/include/ncurses/ncurses_dll.h
/usr/include/ncurses/unctrl.h
/usr/include/rpc/netdb.h
/usr/include/sched.h
/usr/include/stdint.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ucontext.h
/usr/include/sys/uio.h
/usr/include/wchar.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/socket.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/sched.h
/usr/include/bits/select.h
/usr/include/bits/sockaddr.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/gnu/stubs.h
/usr/include/limits.h
/usr/include/linux/errno.h
/usr/include/ncurses/curses.h
/usr/include/sys/cdefs.h
/usr/include/wctype.h
/usr/include/asm-i386/socket.h
/usr/include/asm-x86_64/socket.h
/usr/include/asm/errno.h
/usr/include/bits/libc-lock.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/xopen_lim.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/asm-i386/errno.h
/usr/include/asm-x86_64/errno.h
/usr/include/asm/sockios.h
/usr/include/bits/local_lim.h
/usr/include/asm-generic/errno.h
/usr/include/asm-i386/sockios.h
/usr/include/asm-x86_64/sockios.h
/usr/include/linux/limits.h
/usr/include/asm-generic/errno-base.h
